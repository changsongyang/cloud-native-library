<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quickstart with Workloads on AWS EC2 | 云原生资料库</title>
    <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/</link>
      <atom:link href="https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/index.xml" rel="self" type="application/rss+xml" />
    <description>Quickstart with Workloads on AWS EC2</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 09 Aug 2023 12:00:00 +0800</lastBuildDate>
    <image>
      <url>https://lib.jimmysong.io/media/sharing.png</url>
      <title>Quickstart with Workloads on AWS EC2</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/</link>
    </image>
    
    <item>
      <title>Configure the VM</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/configure-vm/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/configure-vm/</guid>
      <description>&lt;h2 id=&#34;launch-an-aws-ec2-instance&#34;&gt;Launch an AWS EC2 Instance&lt;/h2&gt;
&lt;p&gt;Launch an AWS EC2 instance with the following configuration:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Choose &lt;code&gt;64-bit (x86)&lt;/code&gt; AMI image with &lt;code&gt;Ubuntu Server&lt;/code&gt; (DEB)&lt;/li&gt;
&lt;li&gt;Choose a minimal &lt;code&gt;Instance Type&lt;/code&gt;, e.g. &lt;code&gt;t2.micro&lt;/code&gt; (1x vCPU, 1 GiB RAM)
or &lt;code&gt;t2.nano&lt;/code&gt; (1x vCPU, 0.5 GiB RAM)&lt;/li&gt;
&lt;li&gt;Choose the default VPC (for your instance to have public IP)&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;Auto-assign Public IP&lt;/code&gt; to &lt;code&gt;Enable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Configure &lt;code&gt;SecurityGroup&lt;/code&gt; to allow &lt;code&gt;incoming&lt;/code&gt; traffic to port &lt;code&gt;9080&lt;/code&gt; from &lt;code&gt;0.0.0.0/0&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the purposes of this guide, you will be creating an EC2 instance with a public IP
for ease of configuration.&lt;/p&gt;
&lt;p&gt;:::warning
This is &lt;em&gt;NOT&lt;/em&gt; recommended for production scenarios. For production scenarios, you should
do the opposite and place the Kubernetes cluster and the EC2 instances on the same network,
or peered networks, and not give your VMs public IPs.
:::&lt;/p&gt;
&lt;h2 id=&#34;install-bookinfo-ratings-application&#34;&gt;Install Bookinfo Ratings Application&lt;/h2&gt;
&lt;p&gt;SSH into the AWS EC2 instance you have created, and install the
&lt;code&gt;ratings&lt;/code&gt; application. Execute the following commands:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;# Install the latest version of trusted CA certificates
sudo apt-get update -y
sudo apt-get install -y ca-certificates

# Add DEB repository with Node.js
curl --fail --silent --location https://deb.nodesource.com/setup_14.x | sudo bash -

# Install Node.js
sudo apt-get install -y nodejs

# Download DEB package of the Bookinfo Ratings app
curl -fLO https://dl.cloudsmith.io/public/tetrate/onboarding-examples/raw/files/bookinfo-ratings.deb

# Install DEB package
sudo apt-get install -y ./bookinfo-ratings.deb

# Remove downloaded file
rm bookinfo-ratings.deb

# Enable SystemD Unit
sudo systemctl enable bookinfo-ratings

# Start Bookinfo Ratings app
sudo systemctl start bookinfo-ratings
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;verify-the-ratings-application&#34;&gt;Verify the &lt;code&gt;ratings&lt;/code&gt; Application&lt;/h2&gt;
&lt;p&gt;Execute the following command to verify that the &lt;code&gt;ratings&lt;/code&gt; application
can now serve local requests:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -fsS http://localhost:9080/ratings/1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should get output similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;ratings&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;Reviewer1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;Reviewer2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configure-to-trust-the-example-ca&#34;&gt;Configure to Trust the Example CA&lt;/h2&gt;
&lt;p&gt;Remember that you have previously configured the Workload Onboarding Endpoint using a TLS certificate signed by a custom CA. As a result, any software that runs on the AWS EC2 instance and attempts to connect to the Workload Onboarding Endpoint will not trust its certificate by default.&lt;/p&gt;
&lt;p&gt;Before proceeding further, you must configure the EC2 instance to trust your custom CA.&lt;/p&gt;
&lt;p&gt;First, update the &lt;code&gt;apt&lt;/code&gt; package list:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;sudo apt-get update -y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then install the &lt;code&gt;ca-certificates&lt;/code&gt; package:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;sudo apt-get install -y ca-certificates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Copy the contents of the file &lt;code&gt;example-ca.crt.pem&lt;/code&gt; that you have
&lt;a href=&#34;./enable-workload-onboarding#prepare-the-certificates&#34;&gt;created when you setup the certificates&lt;/a&gt;,
and place it under the location
&lt;code&gt;/usr/local/share/ca-certificates/example-ca.crt&lt;/code&gt; on the EC2 instance.&lt;/p&gt;
&lt;p&gt;Use your favorite tool to do this. If you have not installed any
editors or tools, you could use the combination of &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;dd&lt;/code&gt; as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Execute &lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo dd of=/usr/local/share/ca-certificates/example-ca.crt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy the contents of &lt;code&gt;example-ca.crt.pem&lt;/code&gt; and paste it in the terminal that you executed the previous step&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;EOF&lt;/code&gt; and press &lt;code&gt;Enter&lt;/code&gt; to finish the first command&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After you have placed the custom CA in the correct location, execute the following
command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;sudo update-ca-certificates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will reload the list of trusted CAs, and it will include your custom CA.&lt;/p&gt;
&lt;h2 id=&#34;install-istio-sidecar&#34;&gt;Install Istio Sidecar&lt;/h2&gt;
&lt;p&gt;Install the Istio sidecar by executing the following commands. Replace &lt;code&gt;ONBOARDING_ENDPOINT_ADDRESS&lt;/code&gt; with &lt;a href=&#34;./enable-workload-onboarding#verify-the-workload-onboarding-endpoint&#34;&gt;the value that you have obtained earlier&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;# Download DEB package
curl -fLO \
  --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
  &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/istio-sidecar.deb&amp;#34;

# Download checksum
curl -fLO \
  --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
  &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/istio-sidecar.deb.sha256&amp;#34;

# Verify the checksum
sha256sum --check istio-sidecar.deb.sha256

# Install DEB package
sudo apt-get install -y ./istio-sidecar.deb

# Remove downloaded files
rm istio-sidecar.deb istio-sidecar.deb.sha256
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;install-workload-onboarding-agent&#34;&gt;Install Workload Onboarding Agent&lt;/h2&gt;
&lt;p&gt;Install the Workload Onboarding Agent by executing the following commands. Replace &lt;code&gt;ONBOARDING_ENDPOINT_ADDRESS&lt;/code&gt; with &lt;a href=&#34;./enable-workload-onboarding#verify-the-workload-onboarding-endpoint&#34;&gt;the value that you have obtained earlier&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;# Download DEB package
curl -fLO \
  --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
  &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/onboarding-agent.deb&amp;#34;

# Download checksum
curl -fLO \
  --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
  &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/onboarding-agent.deb.sha256&amp;#34;

# Verify the checksum
sha256sum --check onboarding-agent.deb.sha256

# Install DEB package
sudo apt-get install -y ./onboarding-agent.deb

# Remove downloaded files
rm onboarding-agent.deb onboarding-agent.deb.sha256
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Configure WorkloadGroup and Sidecar</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/configure-workload-onboarding/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/configure-workload-onboarding/</guid>
      <description>&lt;p&gt;You will deploy the &lt;code&gt;ratings&lt;/code&gt; application on an AWS EC2 instance
and onboard it into the service mesh.&lt;/p&gt;
&lt;h2 id=&#34;create-a-workloadgroup&#34;&gt;Create a &lt;code&gt;WorkloadGroup&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Execute the following command to create a &lt;code&gt;WorkloadGroup&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1alpha3
kind: WorkloadGroup
metadata:
  name: ratings
  namespace: bookinfo
  labels:
    app: ratings
spec:
  template:
    labels:
      app: ratings
      class: vm
      cloud: aws
    network: aws                      # (1)
    serviceAccount: bookinfo-ratings  # (2)
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The field &lt;code&gt;spec.template.network&lt;/code&gt; is set to a non-empty value to indicate
to the Istio control plane that the VM you will create later has no direct
connectivity to the Kubernetes Pods.&lt;/p&gt;
&lt;p&gt;The field &lt;code&gt;spec.template.serviceAccount&lt;/code&gt; declares that the workload have the
identity of the service account &lt;code&gt;bookinfo-ratings&lt;/code&gt; within the Kubernetes cluster.
The service account &lt;code&gt;bookinfo-ratings&lt;/code&gt; was created during the &lt;a href=&#34;./bookinfo&#34;&gt;deployment of the Istio bookinfo example earlier&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-the-sidecar-configuration&#34;&gt;Create the Sidecar Configuration&lt;/h2&gt;
&lt;p&gt;Execute the following command to create a new sidecar configuration:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: bookinfo-ratings-no-iptables
  namespace: bookinfo
spec:
  workloadSelector:                  # (1)
    labels:
      app: ratings
      class: vm
  ingress:
  - defaultEndpoint: 127.0.0.1:9080  # (2)
    port:
      name: http
      number: 9080                   # (3)
      protocol: HTTP
  egress:
  - bind: 127.0.0.2                  # (4)
    port:
      name: http
      number: 9080                   # (5)
      protocol: HTTP
    hosts:
    - ./*                            # (6)
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above sidecar configuration will only apply to workloads that have the
labels &lt;code&gt;app=ratings&lt;/code&gt; and &lt;code&gt;class=vm&lt;/code&gt; (1). The &lt;code&gt;WorkloadGroup&lt;/code&gt; you have created
has these labels.&lt;/p&gt;
&lt;p&gt;Istio proxy will be configured to listen on &lt;code&gt;&amp;lt;host IP&amp;gt;:9080&lt;/code&gt; (3) and will
forward &lt;em&gt;incoming&lt;/em&gt; requests to the application that listens on &lt;code&gt;127.0.0.1:9080&lt;/code&gt; (2).&lt;/p&gt;
&lt;p&gt;And finally the proxy will be configured to listen on &lt;code&gt;127.0.0.2:9080&lt;/code&gt; (4) (5) to
proxy &lt;em&gt;outgoing&lt;/em&gt; requests out of the application to other services (6) that have port &lt;code&gt;9080&lt;/code&gt; (5).&lt;/p&gt;
&lt;h2 id=&#34;allow-workloads-to-join-the-workloadgroup&#34;&gt;Allow Workloads to Join the &lt;code&gt;WorkloadGroup&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You will need to create an &lt;a href=&#34;../../guides/setup#allow-workloads-to-join-workloadgroup&#34;&gt;&lt;code&gt;OnboardingPolicy&lt;/code&gt;&lt;/a&gt;
resource to explicitly authorize workloads deployed outside of Kubernetes to join the mesh.&lt;/p&gt;
&lt;p&gt;First, obtain your &lt;a href=&#34;https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Account ID&lt;/a&gt;.
If you do not know your AWS Account ID, see the &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Account Docs&lt;/a&gt; for more details on how to find your ID.&lt;/p&gt;
&lt;p&gt;If you already have your &lt;a href=&#34;https://aws.amazon.com/cli/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;aws&lt;/code&gt; CLI&lt;/a&gt; setup, you can
execute the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then create an &lt;code&gt;OnboardingPolicy&lt;/code&gt; to allow any AWS EC2 instance from your
AWS Account ID to join any &lt;code&gt;WorkloadGroup&lt;/code&gt; in the &lt;code&gt;bookinfo&lt;/code&gt; namespace
by executing the following command. Replace &lt;code&gt;AWS_ACCOUNT_ID&lt;/code&gt; with the
appropriate value.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
apiVersion: authorization.onboarding.tetrate.io/v1alpha1
kind: OnboardingPolicy
metadata:
  name: allow-aws-vms
  namespace: bookinfo            # (1)
spec:
  allow:
  - workloads:
    - aws:
        accounts:
        - &amp;lt;AWS_ACCOUNT_ID&amp;gt;       # (2)
        ec2: {}                  # (3)
    onboardTo:
    - workloadGroupSelector: {}  # (4)
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above policy applies to any AWS EC2 instances (3) owned by the account
specified in (2), and allows them to join any &lt;code&gt;WorkloadGroup&lt;/code&gt; (4) in the
namespace &lt;code&gt;bookinfo&lt;/code&gt; (1)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enable Workload Onboarding</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/enable-workload-onboarding/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/enable-workload-onboarding/</guid>
      <description>&lt;p&gt;In order to enable Workload Onboarding you need the following pieces of information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The DNS name to assign the Workload Onboarding Endpoint&lt;/li&gt;
&lt;li&gt;TLS certificate for that DNS name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For this example you will be using the DNS name &lt;code&gt;onboarding-endpoint.example&lt;/code&gt;,
as we do not expect you to use a routable DNS name.&lt;/p&gt;
&lt;h2 id=&#34;prepare-the-certificates&#34;&gt;Prepare the Certificates&lt;/h2&gt;
&lt;p&gt;For production purposes you will need to use a TLS certificate signed by a
trust Certificate Authority (CA), such as &lt;a href=&#34;https://letsencrypt.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;
or an internal CA such as &lt;a href=&#34;https://www.vaultproject.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vault&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this example you will setup an example CA which will be used
throughout the rest of this guide.&lt;/p&gt;
&lt;p&gt;Create a self-signed certificate (&lt;code&gt;example-ca.crt.pem&lt;/code&gt;) and
and CA private key (&lt;code&gt;example-ca.key.pem&lt;/code&gt;) by issuing the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;openssl req \
  -x509 \
  -subj &amp;#39;/CN=Example CA&amp;#39; \
  -days 3650 \
  -sha256 \
  -newkey rsa:2048 \
  -nodes \
  -keyout example-ca.key.pem \
  -out example-ca.crt.pem \
  -config &amp;lt;(cat &amp;lt;&amp;lt;EOF
# section with configuration for &amp;#34;openssl req&amp;#34; command
[ req ]
distinguished_name     = req                 # name of a section containing the distinguished name fields to prompt for
x509_extensions        = v3_ca               # name of a section containing a list extentions to add to the self signed certificate

# section with a list of extentions to add to the self signed certificate
[ v3_ca ]
basicConstraints       = CA:TRUE             # not marked as critical for compatibility with broken software
subjectKeyIdentifier   = hash                # PKIX recommendation
authorityKeyIdentifier = keyid:always,issuer # PKIX recommendation
EOF
)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, create the certificate signing request (&lt;code&gt;onboarding-endpoint.example.csr.pem&lt;/code&gt;) and
the private key for the Workload Onboarding Endpoint (&lt;code&gt;onboarding-endpoint.example.key.pem&lt;/code&gt;):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;openssl req \
  -subj &amp;#39;/CN=onboarding-endpoint.example&amp;#39; \
  -sha256 \
  -newkey rsa:2048 \
  -nodes \
  -keyout onboarding-endpoint.example.key.pem \
  -out onboarding-endpoint.example.csr.pem
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally create the certificate for the DNS name &lt;code&gt;onboarding-endpoint.example&lt;/code&gt;
(&lt;code&gt;onboarding-endpoint.example.crt.pem&lt;/code&gt;) signed by the CA you created in
previous steps:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;openssl x509 \
  -req \
  -days 3650 \
  -sha256 \
  -in onboarding-endpoint.example.csr.pem \
  -out onboarding-endpoint.example.crt.pem \
  -CA example-ca.crt.pem \
  -CAkey example-ca.key.pem \
  -CAcreateserial \
  -extfile &amp;lt;(cat &amp;lt;&amp;lt;EOF
# name of a section containing a list of extensions to add to the certificate
extensions = usr_cert

# section with a list of extensions to add to the certificate
[ usr_cert ]
basicConstraints       = CA:FALSE            # not marked as critical for compatibility with broken software
subjectKeyIdentifier   = hash                # PKIX recommendation
authorityKeyIdentifier = keyid:always,issuer # PKIX recommendation

keyUsage               = digitalSignature, keyEncipherment
extendedKeyUsage       = serverAuth
subjectAltName         = DNS:onboarding-endpoint.example
EOF
)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then deploy the certificate into the Kubernetes cluster by issuing the
following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl create secret tls onboarding-endpoint-tls-cert \
  -n istio-system \
  --cert=onboarding-endpoint.example.crt.pem \
  --key=onboarding-endpoint.example.key.pem
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;enable-workload-onboarding&#34;&gt;Enable Workload Onboarding&lt;/h2&gt;
&lt;p&gt;Once we the TLS certificates are ready you can enable Workload Onboarding
by issuing the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
apiVersion: install.tetrate.io/v1alpha1
kind: ControlPlane
metadata:
  name: controlplane
  namespace: istio-system
spec:
  meshExpansion:
    onboarding:
      endpoint:
        hosts:
        - onboarding-endpoint.example
        secretName: onboarding-endpoint-tls-cert
      localRepository: {}
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above specifies that the Workload Onboarding Endpoint should be
setup using the DNS name &lt;code&gt;onboarding-endpoint.example&lt;/code&gt; using the certificates
available in the secret &lt;code&gt;onboarding-endpoint-tls-cert&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It also specifies that a local repository with DEB/RPM packages for
Workload Onboarding Agent and Istio sidecar should be deployed.&lt;/p&gt;
&lt;p&gt;Once you execute the above command, wait until individual components
Workload Onboarding are available:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl wait --for=condition=Available -n istio-system \
  deployment/vmgateway \
  deployment/onboarding-plane \
  deployment/onboarding-repository
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;verify-the-workload-onboarding-endpoint&#34;&gt;Verify the Workload Onboarding Endpoint&lt;/h2&gt;
&lt;p&gt;Since you are not using a routable DNS name, you will need to
find out address of the Workload Onboarding Endpoint that
has been exposed.&lt;/p&gt;
&lt;p&gt;Execute the following to obtain the address (DNS name or IP address):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;ONBOARDING_ENDPOINT_ADDRESS=$(kubectl get svc vmgateway \
  -n istio-system \
  -ojsonpath=&amp;#34;{.status.loadBalancer.ingress[0][&amp;#39;hostname&amp;#39;, &amp;#39;ip&amp;#39;]}&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will be using the address stored in the &lt;code&gt;ONBOARDING_ENDPOINT_ADDRESS&lt;/code&gt; environment
variable throughout the rest of this guide.&lt;/p&gt;
&lt;p&gt;Finally, execute the following command to verify that the endpoint is
available for external traffic.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -f -i \
  --cacert example-ca.crt.pem \
  --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
  &amp;#34;https://onboarding-endpoint.example/install/&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see an output similar to the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HTTP/2 200
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;content-type: text/html; charset=utf-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server: istio-envoy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;pre&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;a href=&amp;#34;deb/&amp;#34;&amp;gt;deb/&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;a href=&amp;#34;rpm/&amp;#34;&amp;gt;rpm/&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/pre&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Installing the Bookinfo Example</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/bookinfo/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/bookinfo/</guid>
      <description>&lt;p&gt;In order to demonstrate how a workload deployed outside of Kubernetes integrates with
the rest of the mesh, we need to have some other application(s) it could
communicate with.&lt;/p&gt;
&lt;p&gt;For the purposes of this guide, you need to deploy &lt;a href=&#34;https://istio.io/latest/docs/examples/bookinfo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio Bookinfo&lt;/a&gt; example.&lt;/p&gt;
&lt;p&gt;into your Kubernetes cluster.&lt;/p&gt;
&lt;h2 id=&#34;deploy-bookinfo-example&#34;&gt;Deploy Bookinfo example&lt;/h2&gt;
&lt;p&gt;Create the namespace &lt;code&gt;bookinfo&lt;/code&gt;, and add the proper labels:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl create namespace bookinfo
kubectl label namespace bookinfo istio-injection=enabled
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Deploy the bookinfo application:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cat &amp;lt;&amp;lt;EOF | kubectl apply -n bookinfo -f -
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
spec:
  mtls:
    mode: STRICT
EOF

kubectl apply -n bookinfo -f https://raw.githubusercontent.com/istio/istio/master/samples/bookinfo/platform/kube/bookinfo.yaml

kubectl wait --for=condition=Available -n bookinfo deployments --all
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order to send requests into the &lt;code&gt;bookinfo&lt;/code&gt; product page from your local
environment, you will need to set up port forwarding.&lt;/p&gt;
&lt;p&gt;Run the following command in a separate terminal session:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl port-forward -n bookinfo service/productpage 9080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The product page will become accessible on &lt;code&gt;http://localhost:9080&lt;/code&gt;.
To verify the product page visually, open &lt;code&gt;http://localhost:9080/productpage&lt;/code&gt;
in a browser. If you refresh the page multiple times, 2 out of 3 times you should see rating stars on the page.&lt;/p&gt;
&lt;p&gt;Alternatively, to verify from the command line, run:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;for i in `seq 1 9`; do
  curl -fsS &amp;#34;http://localhost:9080/productpage?u=normal&amp;#34; | grep &amp;#34;glyphicon-star&amp;#34; | wc -l | awk &amp;#39;{print $1&amp;#34; stars on the page&amp;#34;}&amp;#39;
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2 out of 3 times you should get a message &lt;code&gt;10 stars on the page&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;10 stars on the page
0 stars on the page
10 stars on the page
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;scale-the-ratings-application-down&#34;&gt;Scale the &lt;code&gt;ratings&lt;/code&gt; Application Down&lt;/h2&gt;
&lt;p&gt;In this guide you will deploy the &lt;code&gt;ratings&lt;/code&gt; application through the
VM via Workload Onboarding. In order to do this we must first
&amp;ldquo;disable&amp;rdquo; the default &lt;code&gt;ratings&lt;/code&gt; application deployed with the
bookinfo sample.&lt;/p&gt;
&lt;p&gt;Run the following commands and scale down the &lt;code&gt;ratings&lt;/code&gt; application down to 0 replicas:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl scale deployment ratings-v1 -n bookinfo --replicas=0

kubectl wait --for=condition=Available -n bookinfo deployment/ratings-v1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To verify that the &lt;code&gt;ratings&lt;/code&gt; application has been scaled down and
no longer appears on the product page, follow the instructions in the
previous section and access the product page. Two out of three times
you should see the message &lt;code&gt;Ratings service is currently unavailable&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Onboard Workload from VM</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/onboard-vm/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/onboard-vm/</guid>
      <description>&lt;h2 id=&#34;start-workload-onboarding-agent&#34;&gt;Start Workload Onboarding Agent&lt;/h2&gt;
&lt;p&gt;Create the file &lt;code&gt;/etc/onboarding-agent/onboarding.config.yaml&lt;/code&gt; with the following contents.
Replace &lt;code&gt;ONBOARDING_ENDPOINT_ADDRESS&lt;/code&gt; with &lt;a href=&#34;./enable-workload-onboarding#verify-the-workload-onboarding-endpoint&#34;&gt;the value that you have obtained earlier&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;config.agent.onboarding.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;OnboardingConfiguration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;onboardingEndpoint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;ONBOARDING_ENDPOINT_ADDRESS&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;transportSecurity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sni&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;onboarding-endpoint.example   &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# (1)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workloadGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                            &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# (2)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bookinfo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ratings&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v5                          &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# (3)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;connectedOver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;INTERNET                &lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# (4)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This configuration instructs the Workload Onboarding Agent to connect
to the Workload Onboarding Endpoint using one address, but validate
the TLS certificate against the DNS name &lt;code&gt;onboarding-endpoint.example&lt;/code&gt; (1).&lt;/p&gt;
&lt;p&gt;The agent will attempt to join the &lt;code&gt;WorkloadGroup&lt;/code&gt; you created earlier (2).&lt;/p&gt;
&lt;p&gt;The extra label specified in (3) will be associated with the workload.
It does not play a part in matching the workload with a &lt;code&gt;WorkloadGroup&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This configuration also instructs the Workload Onboarding Agent to
notify that this workload is connected to the rest of the mesh over
the &lt;code&gt;INTERNET&lt;/code&gt; (rather than &lt;code&gt;VPC&lt;/code&gt;). Other nodes in the mesh will
attempt to connect to this workload using the workload&amp;rsquo;s public IP.
Since you have launched the Kubernetes cluster and the EC2 instance
in separate networks, this is necessary.&lt;/p&gt;
&lt;p&gt;Once you have placed the above configuration file in the correct
location, execute the following commands to start the Workload Onboarding Agent:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;# Enable
sudo systemctl enable onboarding-agent

# Start
sudo systemctl start onboarding-agent
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Verify that &lt;code&gt;Istio Sidecar&lt;/code&gt; is up by executing the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -f -i http://localhost:15000/ready
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should get output similar to the following:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;HTTP/1.1 200 OK
content-type: text/plain; charset=UTF-8
server: envoy

LIVE
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;verify-the-workload&#34;&gt;Verify the Workload&lt;/h2&gt;
&lt;p&gt;From your local machine, verify that the workload has been properly onboarded.&lt;/p&gt;
&lt;p&gt;Execute the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get war -n bookinfo 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If the workload was properly onboarded, you should get an output similar to:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;NAMESPACE   NAME                                                              AGENT CONNECTED   AGE
bookinfo    ratings-aws-aws-123456789012-us-east-2b-ec2-i-1234567890abcdef0   True              1m
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;verify-traffic-from-kubernetes-to-vm&#34;&gt;Verify Traffic from Kubernetes to VM&lt;/h3&gt;
&lt;p&gt;To verify traffic from Kubernetes Pod(s) to AWS EC2 instance, create
some load on the bookinfo application deployed on Kubernetes and confirm
that requests get routed into the &lt;code&gt;ratings&lt;/code&gt; application deployed on the
AWS EC2 instance.&lt;/p&gt;
&lt;p&gt;On your local machine, &lt;a href=&#34;./bookinfo&#34;&gt;set up port forwarding&lt;/a&gt; if you have not already done so.&lt;/p&gt;
&lt;p&gt;Then run the following commands:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;for i in `seq 1 9`; do
  curl -fsS &amp;#34;http://localhost:9080/productpage?u=normal&amp;#34; | grep &amp;#34;glyphicon-star&amp;#34; | wc -l | awk &amp;#39;{print $1&amp;#34; stars on the page&amp;#34;}&amp;#39;
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Two out of three times you should get a message &lt;code&gt;10 stars on the page&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Furthermore, you can verify that the VM is receiving the traffic by inspecting the
&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;access logs&lt;/a&gt;
for the incoming HTTP requests proxied by the Istio sidecar.&lt;/p&gt;
&lt;p&gt;Execute the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;journalctl -u onboarding-agent -o cat
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see an output similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[2021-10-25T11:06:13.553Z] &amp;#34;GET /ratings/0 HTTP/1.1&amp;#34; 200 - via_upstream - &amp;#34;-&amp;#34; 0 48 3 2 &amp;#34;-&amp;#34; &amp;#34;curl/7.68.0&amp;#34; &amp;#34;1928e798-dfe7-45a6-9020-d0f3a8641d03&amp;#34; &amp;#34;172.31.7.211:9080&amp;#34; &amp;#34;127.0.0.1:9080&amp;#34; inbound|9080|| 127.0.0.1:40992 172.31.7.211:9080 172.31.7.211:35470 - default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;verify-traffic-from-vm-to-kubernetes&#34;&gt;Verify Traffic from VM to Kubernetes&lt;/h3&gt;
&lt;p&gt;SSH into the AWS EC2 instance and execute the following commands:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;for i in `seq 1 5`; do
  curl -i \
    --resolve details.bookinfo:9080:127.0.0.2 \
    details.bookinfo:9080/details/0
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above command will make &lt;code&gt;5&lt;/code&gt; HTTP requests to Bookinfo &lt;code&gt;details&lt;/code&gt; application.
&lt;code&gt;curl&lt;/code&gt; will resolve Kubernetes cluster-local DNS name &lt;code&gt;details.bookinfo&lt;/code&gt;
into the IP address of the &lt;code&gt;egress&lt;/code&gt; listener of Istio proxy (&lt;code&gt;127.0.0.2&lt;/code&gt; according
to &lt;a href=&#34;./configure-workload-onboarding#create-the-sidecar-configuration&#34;&gt;the sidecar configuration you created earlier&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You should get an output similar to:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;HTTP/1.1 200 OK
content-type: application/json
server: envoy

{&amp;#34;id&amp;#34;:0,&amp;#34;author&amp;#34;:&amp;#34;William Shakespeare&amp;#34;,&amp;#34;year&amp;#34;:1595,&amp;#34;type&amp;#34;:&amp;#34;paperback&amp;#34;,   &amp;#34;pages&amp;#34;:200,&amp;#34;publisher&amp;#34;:&amp;#34;PublisherA&amp;#34;,&amp;#34;language&amp;#34;:&amp;#34;English&amp;#34;,   &amp;#34;ISBN-10&amp;#34;:&amp;#34;1234567890&amp;#34;,&amp;#34;ISBN-13&amp;#34;:&amp;#34;123-1234567890&amp;#34;}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Onboard Workload(s) from AWS Auto Scaling Group</title>
      <link>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/onboard-asg/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/workload-onboarding/quickstart/aws-ec2/onboard-asg/</guid>
      <description>&lt;p&gt;To onboard a workload deployed on &lt;code&gt;AWS Auto Scaling Group&lt;/code&gt; (&lt;code&gt;ASG&lt;/code&gt;), you will need to
perform all setup actions as part of the &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;instance launch script&lt;/a&gt;
instead of executing commands on the EC2 instance.&lt;/p&gt;
&lt;p&gt;In a nutshell, you will need to move setup commands from previous steps into the
&lt;a href=&#34;https://cloudinit.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cloud-init&lt;/a&gt; configuration associated
with instances in the Auto Scaling Group.&lt;/p&gt;
&lt;p&gt;Specifically,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Move setup commands from the &lt;a href=&#34;./configure-vm#install-bookinfo-ratings-application&#34;&gt;Install Bookinfo Ratings application&lt;/a&gt; step&lt;/li&gt;
&lt;li&gt;Move setup commands from the &lt;a href=&#34;./configure-vm#install-istio-sidecar&#34;&gt;Install Istio sidecar&lt;/a&gt; step&lt;/li&gt;
&lt;li&gt;Move setup commands from the &lt;a href=&#34;./configure-vm#install-workload-onboarding-agent&#34;&gt;Install Workload Onboarding Agent on AWS EC2 instance&lt;/a&gt; step&lt;/li&gt;
&lt;li&gt;Move setup commands from the &lt;a href=&#34;./onboard-vm&#34;&gt;Onboard workload from AWS EC2 instance&lt;/a&gt; step&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following configuration is a sample that has all of the steps joined together.
Replace &lt;code&gt;example-ca-certificate&lt;/code&gt; with the with &lt;a href=&#34;./enable-workload-onboarding#prepare-the-certificates&#34;&gt;the value of example-ca.crt.pem&lt;/a&gt;, and &lt;code&gt;ONBOARDING_ENDPOINT_ADDRESS&lt;/code&gt; with &lt;a href=&#34;./enable-workload-onboarding#verify-the-workload-onboarding-endpoint&#34;&gt;the value that you have obtained earlier&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;#cloud-config&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;write_files&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Certificate of the custom CA&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;example-ca-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/usr/local/share/ca-certificates/example-ca.crt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;root:root&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;permissions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0644&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Onboarding Configuration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    apiVersion: config.agent.onboarding.tetrate.io/v1alpha1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    kind: OnboardingConfiguration
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    onboardingEndpoint:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      host: &amp;lt;ONBOARDING_ENDPOINT_ADDRESS&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      transportSecurity:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        tls:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;          sni: onboarding-endpoint.example
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    workloadGroup:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      namespace: bookinfo
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      name: ratings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    workload:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      labels:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;        version: v5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    settings:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;      connectedOver: INTERNET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/etc/onboarding-agent/onboarding.config.yaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;root:root&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;permissions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0644&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runcmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  #!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  set -ex
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  # Install the latest version of trusted CA certificates
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo apt-get update -y
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo apt-get install -y ca-certificates
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  # Trust certificate of the custom CA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo update-ca-certificates
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  # Install Bookinfo ratings app
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  curl --fail --silent --location https://deb.nodesource.com/setup_14.x | sudo bash -
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo apt-get install -y nodejs
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  curl -fLO https://dl.cloudsmith.io/public/tetrate/onboarding-examples/raw/files/bookinfo-ratings.deb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo apt-get install -y ./bookinfo-ratings.deb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  rm bookinfo-ratings.deb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo systemctl enable bookinfo-ratings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo systemctl start bookinfo-ratings
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  ONBOARDING_ENDPOINT_ADDRESS=&amp;lt;ONBOARDING_ENDPOINT_ADDRESS&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  # Install Istio Sidecar
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  curl -fLO \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/istio-sidecar.deb&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  curl -fLO \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/istio-sidecar.deb.sha256&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sha256sum --check istio-sidecar.deb.sha256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo apt-get install -y ./istio-sidecar.deb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  rm istio-sidecar.deb istio-sidecar.deb.sha256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  # Install Workload Onboarding Agent
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  curl -fLO \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;   &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/onboarding-agent.deb&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  curl -fLO \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    --connect-to &amp;#34;onboarding-endpoint.example:443:${ONBOARDING_ENDPOINT_ADDRESS}:443&amp;#34; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;    &amp;#34;https://onboarding-endpoint.example/install/deb/amd64/onboarding-agent.deb.sha256&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sha256sum --check onboarding-agent.deb.sha256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo apt-get install -y ./onboarding-agent.deb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  rm onboarding-agent.deb onboarding-agent.deb.sha256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo systemctl enable onboarding-agent
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;  sudo systemctl start onboarding-agent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once the data is associated with the user data of your Auto Scaling Group,
try scaling up and down the Auto Scaling Group, and verify that
&lt;a href=&#34;./onboard-vm#verify-the-workload&#34;&gt;the Workload is onboarded properly&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
