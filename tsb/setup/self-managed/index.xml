<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>使用 tctl 安装 | 云原生资料库</title>
    <link>https://lib.jimmysong.io/tsb/setup/self-managed/</link>
      <atom:link href="https://lib.jimmysong.io/tsb/setup/self-managed/index.xml" rel="self" type="application/rss+xml" />
    <description>使用 tctl 安装</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 09 Aug 2023 12:00:00 +0800</lastBuildDate>
    <image>
      <url>https://lib.jimmysong.io/media/sharing.png</url>
      <title>使用 tctl 安装</title>
      <link>https://lib.jimmysong.io/tsb/setup/self-managed/</link>
    </image>
    
    <item>
      <title>演示安装</title>
      <link>https://lib.jimmysong.io/tsb/setup/self-managed/demo-installation/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/self-managed/demo-installation/</guid>
      <description>&lt;p&gt;本指南将引导你完成 TSB 演示配置文件的安装，该配置文件旨在快速概述 TSB 的功能。演示配置文件包括 PostgreSQL、Elasticsearch 和 LDAP，所有这些都在 Kubernetes 集群上进行编排。为了确保无缝体验，你的集群应包含 3-6 个节点，每个节点至少配备 4 个 vCPU 和 16 GB 内存。集群还必须建立默认存储类，并能够为 Elasticsearch 和 PostgreSQL 创建最小容量为 100 GB 的持久卷声明。&lt;/p&gt;
&lt;p&gt;在继续之前，请参阅 &lt;a href=&#34;../../../release-notes-announcements/support-policy#kubernetes-versions&#34;&gt;TSB 支持政策&lt;/a&gt;来验证与你的 Kubernetes 版本的兼容性。&lt;/p&gt;
&lt;h2 id=&#34;先决条件&#34;&gt;先决条件&lt;/h2&gt;
&lt;p&gt;要安装演示配置文件，请确保你已完成以下步骤：&lt;/p&gt;
&lt;h3 id=&#34;1-获取-tctl-并同步镜像&#34;&gt;1. 获取 &lt;code&gt;tctl&lt;/code&gt; 并同步镜像&lt;/h3&gt;
&lt;p&gt;首先按照&lt;a href=&#34;../../requirements-and-download#download&#34;&gt;下载部分&lt;/a&gt;中概述的步骤下载 &lt;code&gt;tctl&lt;/code&gt; 。此外，按照同步容器镜像中所述&lt;a href=&#34;../../requirements-and-download#sync-tetrate-service-bridge-images&#34;&gt;同步所需的容器镜像&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;2-设置-kubernetes-集群&#34;&gt;2. 设置 Kubernetes 集群&lt;/h3&gt;
&lt;p&gt;准备一个要安装演示配置文件的 Kubernetes 集群。创建集群的具体步骤取决于你的环境。有关创建 Kubernetes 集群的具体说明，请参阅你的环境手册。&lt;/p&gt;
&lt;h4 id=&#34;使用-kind&#34;&gt;使用 kind&lt;/h4&gt;
&lt;p&gt;如果你使用 &lt;a href=&#34;https://kind.sigs.k8s.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kind&lt;/a&gt; 集群进行安装，请按照以下步骤操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建类型集群后，安装 &lt;a href=&#34;https://metallb.universe.tf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MetalLB&lt;/a&gt; 以使 TSB 能够使用 &lt;code&gt;LoadBalancer&lt;/code&gt; 类型的服务。&lt;/li&gt;
&lt;li&gt;配置&lt;a href=&#34;https://metallb.universe.tf/configuration/#layer-2-configuration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;第 2 层配置&lt;/a&gt;，指定 &lt;code&gt;kind&lt;/code&gt; Docker 网络 IP 范围内的 IP 地址范围。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;请按照以下步骤安装演示配置文件：&lt;/p&gt;
&lt;h3 id=&#34;1执行-tctl-install-demo&#34;&gt;1.执行 &lt;code&gt;tctl install demo&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;确保你的 Kubernetes 上下文设置为目标集群。使用 &lt;code&gt;tctl install demo&lt;/code&gt; 命令，该命令利用 &lt;code&gt;kubectl&lt;/code&gt; 配置中的 &lt;code&gt;current-context&lt;/code&gt; 。在继续之前，请确认引用了正确的 Kubernetes 集群。&lt;/p&gt;
&lt;p&gt;运行安装命令，如下所示。你可以使用 &lt;code&gt;--admin-password&lt;/code&gt; 选项（自版本 1.4.0 起可用）提供管理员密码。或者，将为你生成一个密码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tctl install demo &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --registry &amp;lt;registry-location&amp;gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --admin-password &amp;lt;password&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert-note-title&#34;&gt;
    &lt;p&gt;安装注意事项&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
    在某些资源受限或负载较重的环境中，安装时间可能比预期长，并且 &lt;code&gt;tctl&lt;/code&gt; 工具可能会退出。 &lt;code&gt;tctl install demo&lt;/code&gt; 命令是幂等的，允许你重新运行它，直到安装完成。
&lt;/div&gt;

&lt;p&gt;成功安装后，你的 Kubernetes 集群将托管管理和控制平面，并将创建一个名为 &lt;code&gt;tetrate&lt;/code&gt; 的组织。&lt;/p&gt;
&lt;h2 id=&#34;访问网络用户界面&#34;&gt;访问网络用户界面&lt;/h2&gt;
&lt;p&gt;要访问 TSB Web UI，请执行以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从演示安装命令的输出中获取 URL 和凭据。查找类似于以下内容的输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Controlplane installed successfully!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Management Plane UI accessible at: https://31.224.214.68:8443
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Admin credentials: username: admin, password: yGWx1s!Y@&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;-KBe0V
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用提供的 URL 和管理凭据登录 Web UI。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert-note-title&#34;&gt;
    &lt;p&gt;提示&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
    即使你跳过快速入门，也请考虑&lt;a href=&#34;../../../quickstart/tenant/&#34;&gt;创建租户&lt;/a&gt;，因为遵循本网站上的示例可能需要它。
&lt;/div&gt;

&lt;h2 id=&#34;进一步配置&#34;&gt;进一步配置&lt;/h2&gt;
&lt;p&gt;有关演示安装的其他自定义（例如载入集群），请参阅&lt;a href=&#34;../onboarding-clusters/&#34;&gt;载入集群指南&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Management Plane Installation</title>
      <link>https://lib.jimmysong.io/tsb/setup/self-managed/management-plane-installation/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/self-managed/management-plane-installation/</guid>
      <description>&lt;p&gt;import Tabs from &amp;lsquo;@theme/Tabs&amp;rsquo;;
import TabItem from &amp;lsquo;@theme/TabItem&amp;rsquo;;&lt;/p&gt;
&lt;p&gt;This page will show you how to install the Tetrate Service Bridge management
plane in a production environment.&lt;/p&gt;
&lt;p&gt;Before you start, make sure that you&amp;rsquo;ve:&lt;/p&gt;
&lt;p&gt;✓ Checked the &lt;a href=&#34;../requirements-and-download&#34;&gt;requirements&lt;/a&gt;&lt;br /&gt;
✓ Checked &lt;a href=&#34;../components#management-plane&#34;&gt;TSB management plane components&lt;/a&gt;&lt;br /&gt;
✓ Checked &lt;a href=&#34;../certificate/certificate-setup&#34;&gt;types of certificates&lt;/a&gt; and  &lt;a href=&#34;../certificate/certificate-requirements&#34;&gt;internal certificates requirements&lt;/a&gt;&lt;br /&gt;
✓ Checked &lt;a href=&#34;../firewall_information&#34;&gt;firewall information&lt;/a&gt;&lt;br /&gt;
✓ If you are upgrading from previous version, also check &lt;a href=&#34;../../operations/postgresql&#34;&gt;PostgreSQL backup and restore&lt;/a&gt;&lt;br /&gt;
✓ &lt;a href=&#34;../requirements-and-download#download&#34;&gt;Downloaded&lt;/a&gt; Tetrate Service Bridge CLI (&lt;code&gt;tctl&lt;/code&gt;)&lt;br /&gt;
✓ &lt;a href=&#34;../requirements-and-download#sync-tetrate-service-bridge-images&#34;&gt;Synced&lt;/a&gt; the Tetrate Service Bridge images&lt;/p&gt;
&lt;h2 id=&#34;management-plane-operator&#34;&gt;Management Plane Operator&lt;/h2&gt;
&lt;p&gt;To keep installation simple but still allow a lot of custom configuration
options we have created a management plane operator. The operator will run in
the cluster and bootstraps the management plane as described in a
ManagementPlane Custom Resource. It watches for changes and enacts them. To help
in creating the right Custom Resource Document (CRD) we have added the ability
to our &lt;code&gt;tctl&lt;/code&gt; client to create the base manifests which you can then modify
according to your required set-up. After this you can either apply the manifests
directly to the appropriate clusters or use in your source control operated
clusters.&lt;/p&gt;
&lt;p&gt;:::note Operators
If you would like to know more about the inner workings of Operators, and the
Operator Pattern, review the &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/operator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes documentation&lt;/a&gt;
:::&lt;/p&gt;
&lt;p&gt;Create the manifest allowing you to install the management plane operator
from your private Docker registry:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest management-plane-operator \
  --registry &amp;lt;registry-location&amp;gt; &amp;gt; managementplaneoperator.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;&lt;/p&gt;
  &lt;TabItem value=&#34;Default&#34;&gt;
&lt;p&gt;The &lt;code&gt;managementplaneoperator.yaml&lt;/code&gt; file created by the install manifest command
can be applied directly to the appropriate cluster by using the kubectl client:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f managementplaneoperator.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After applying the manifest you will see the operator running in the &lt;code&gt;tsb&lt;/code&gt;
namespace:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get pod -n tsb
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;p&gt;:::note RedHat Ecosystem Catalog
TSB is certified and listed on RedHat Ecosystem Catalog. TSB can be installed on
Openshift platform by following the instructions below or via &lt;a href=&#34;https://catalog.redhat.com/software/container-stacks/detail/63224dc0bc45b8cf6605f7e8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.
:::&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;managementplaneoperator.yaml&lt;/code&gt; file created by the install manifest command
can be applied directly to the appropriate cluster by using the &lt;code&gt;oc&lt;/code&gt; client:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;oc apply -f managementplaneoperator.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After applying the manifest you will see the operator running in the &lt;code&gt;tsb&lt;/code&gt;
namespace:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;oc get pod -n tsb
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;Example output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                                            READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tsb-operator-management-plane-d4c86f5c8-b2zb5   1/1     Running   0          8s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configuring-secrets&#34;&gt;Configuring Secrets&lt;/h2&gt;
&lt;p&gt;The management plane components need some secrets for both internal and external communication purposes. Following are a list of secrets that you need to create.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Secret name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;admin-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TSB will create a default admin user with name: admin and this is the password&amp;rsquo;s one way hash for this special account. These credentials are kept outside of your IdP while any other credentials must be stored in your IdP.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tsb-certs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;TLS certificate that has type &lt;code&gt;kubernetes.io/tls&lt;/code&gt;. Must have &lt;code&gt;tls.key&lt;/code&gt; and &lt;code&gt;tls.cert&lt;/code&gt; value. The TLS certificates can be self signed or issued by public CA.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;postgres-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains:&lt;br /&gt; 1. Postgres username and password. &lt;br /&gt; 2. The CA certificate to verify Postgres connections when Postgres is configured to present a self-signed certificate. TLS verification only happens if you set &lt;code&gt;sslMode&lt;/code&gt; in Postgres settings to &lt;code&gt;verify-ca&lt;/code&gt; or &lt;code&gt;verify-full&lt;/code&gt;. See &lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec#postgressettings&#34;&gt;PostgresSettings&lt;/a&gt; for more details. &lt;br /&gt; 3. Client certificate and private key if Postgres is configured with mutual TLS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;elastic-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Elasticsearch username and password.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;es-certs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The CA certificate to validate Elasticsearch connections when Elasticsearch is configured to present a self-signed certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ldap-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only set if using LDAP as Identity Provider (IdP). Contain LDAP &lt;code&gt;binddn&lt;/code&gt; and &lt;code&gt;bindpassword&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;custom-host-ca&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only set if using LDAP as IdP. The CA certificate to validate LDAP connections when LDAP is configured to present a self-signed certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;iam-oidc-client-secret&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only set if using OIDC with any IdP. Contain OIDC client-secret and device-client-secret.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;azure-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Only set if using OIDC with Azure AD as IdP. Client secret to connect to Azure AD for team and user synchronization.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xcp-central-cert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;XCP central TLS certificate. Go to &lt;a href=&#34;../certificate/certificate-requirements&#34;&gt;Internal certificate requirements&lt;/a&gt; for more details.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;using-tctl-to-generate-secrets&#34;&gt;Using tctl to Generate Secrets&lt;/h3&gt;
&lt;p&gt;:::note
Since 1.7, TSB supports automated certificate management for TSB management plane TLS certificates, internal certificates and intermediate Istio CA certificates. Go to &lt;a href=&#34;../certificate/automated-certificate-management&#34;&gt;Automated Certificate Management&lt;/a&gt; for more details. This means you don&amp;rsquo;t need to create &lt;code&gt;tsb-certs&lt;/code&gt; and &lt;code&gt;xcp-central-cert&lt;/code&gt; secrets anymore. The following example will assume that you are using automated certificate management.
:::&lt;/p&gt;
&lt;p&gt;These secrets can be generated in the correct format by passing them as command-line flags to the &lt;code&gt;tctl&lt;/code&gt; management-plane-secrets command.&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;OIDC&amp;rdquo;
values={[
{label: &amp;lsquo;OIDC as IdP&amp;rsquo;, value: &amp;lsquo;OIDC&amp;rsquo;},
{label: &amp;lsquo;LDAP as IdP&amp;rsquo;, value: &amp;lsquo;LDAP&amp;rsquo;},
]}&amp;gt;&lt;/p&gt;
  &lt;TabItem value=&#34;OIDC&#34;&gt;
&lt;p&gt;The following command will generate &lt;code&gt;managementplane-secrets.yaml&lt;/code&gt; that contains Elasticsearch, Postgres, OIDC and admin credentials along with TSB TLS certificate.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest management-plane-secrets \
    --elastic-password &amp;lt;elastic-password&amp;gt; \
    --elastic-username &amp;lt;elastic-username&amp;gt; \
    --oidc-client-secret &amp;#34;&amp;lt;oidc-client-secret&amp;gt;&amp;#34; \
    --postgres-password &amp;lt;postgres-password&amp;gt; \
    --postgres-username &amp;lt;postgres-username&amp;gt; \
    --tsb-admin-password &amp;lt;tsb-admin-password&amp;gt; &amp;gt; managementplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;LDAP&#34;&gt;
&lt;p&gt;The following command will generate &lt;code&gt;managementplane-secrets.yaml&lt;/code&gt; that contains Elasticsearch, Postgres, LDAP and admin credentials along with TSB TLS certificate.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest management-plane-secrets \
    --elastic-password &amp;lt;elastic-password&amp;gt; \
    --elastic-username &amp;lt;elastic-username&amp;gt; \
    --ldap-bind-dn &amp;lt;ldap-bind-dn&amp;gt; \
    --ldap-bind-password &amp;lt;ldap-bind-password&amp;gt; \
    --postgres-password &amp;lt;postgres-password&amp;gt; \
    --postgres-username &amp;lt;postgres-username&amp;gt; \
    --tsb-admin-password &amp;lt;tsb-admin-password&amp;gt; &amp;gt; managementplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;br /&gt;
&lt;p&gt;See the &lt;a href=&#34;../../reference/cli/reference/install#tctl-install-manifest-management-plane-secrets&#34;&gt;CLI reference&lt;/a&gt;
documentation for all available options such as providing CA certificates for
&lt;code&gt;Elasticsearch&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt; and &lt;code&gt;LDAP&lt;/code&gt;. You can also check the bundled explanation from &lt;code&gt;tctl&lt;/code&gt; by running this help command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest management-plane-secrets --help
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;applying-secrets&#34;&gt;Applying secrets&lt;/h3&gt;
&lt;p&gt;Once you&amp;rsquo;ve created your secrets manifest, you can add to source control or apply it to your cluster.&lt;/p&gt;
&lt;p&gt;:::note Vault Injection
If you&amp;rsquo;re using &lt;code&gt;Vault&lt;/code&gt; injection for certain components, remove the applicable
secrets from the manifest that you&amp;rsquo;ve created before applying it to your
cluster.
:::&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f managementplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;oc apply -f managementplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;h2 id=&#34;management-plane-installation&#34;&gt;Management Plane Installation&lt;/h2&gt;
&lt;p&gt;Now you&amp;rsquo;re ready to deploy the management plane.&lt;/p&gt;
&lt;p&gt;To deploy the management plane you need to create a &lt;code&gt;ManagementPlane&lt;/code&gt; custom
resource in the Kubernetes cluster that describes the management plane.&lt;/p&gt;
&lt;p&gt;:::warning Organization name
Organization is a root of the TSB object hierarchy. A TSB Management plane can only have one organization.&lt;/p&gt;
&lt;p&gt;To login with &lt;code&gt;tctl&lt;/code&gt;, you will need to specify organization name and it must match with &lt;code&gt;&amp;lt;organization-name&amp;gt;&lt;/code&gt; that you set in the &lt;code&gt;ManagementPlane&lt;/code&gt; CR below. Organization name has to be lowercase to comply with RFC standards.&lt;/p&gt;
&lt;p&gt;If not specified, the default value is &lt;code&gt;tetrate&lt;/code&gt; and it cannot be changed after creation.
:::&lt;/p&gt;
&lt;p&gt;Below is a &lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec&#34;&gt;ManagementPlane&lt;/a&gt;
custom resource (CR) that describes a basic management plane. Save this
&lt;code&gt;managementplane.yaml&lt;/code&gt; and adjust it according to your needs:&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;OIDC&amp;rdquo;
values={[
{label: &amp;lsquo;OIDC as IdP&amp;rsquo;, value: &amp;lsquo;OIDC&amp;rsquo;},
{label: &amp;lsquo;LDAP as IdP&amp;rsquo;, value: &amp;lsquo;LDAP&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;OIDC&#34;&gt;&lt;/p&gt;
&lt;p&gt;The following example uses OIDC as identity provider.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ManagementPlane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;managementplane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tsb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;registry-location&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;organization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;organization-name&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dataStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;postgres-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;postgres-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;database-name&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;telemetryStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;elastic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-version&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;is-elastic-use-self-signed-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;http or https. default to https if not set&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Enable automatic certificates management.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# You can remove this field if you want to manage certificates user other methods&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Note that you will need to provide certificates as secrets in that case.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certIssuer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tsbCerts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusterIntermediateCAs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;identityProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;oidc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clientId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;oidc-client-id&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# authorization code flow for TSB UI login&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;providerConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dynamic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;configurationUri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;oidc-well-known-openid-configuration&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;redirectUri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;oidc-callback&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;scopes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;offline_access&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;internalCertProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;INTERNAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are not using Azure AD an the OIDC Identity provider, follow the steps in &lt;a href=&#34;../../operations/users/user_synchronization&#34;&gt;Users Synchronization&lt;/a&gt; to see how you can create organizations and sync your users and teams into TSB&lt;/p&gt;
  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;LDAP&#34;&gt;
&lt;p&gt;The following uses LDAP as the identity provider&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ManagementPlane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;managementplane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tsb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;registry-location&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;organization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;organization-name&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dataStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;postgres&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;postgres-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;postgres-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;database-name&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;telemetryStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;elastic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-version&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;is-elastic-use-self-signed-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;http or https. default to https if not set&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Enable automatic certificates management.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# You can remove this field if you want to manage certificates user other methods&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Note that you will need to provide certificates as secrets in that case.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certIssuer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tsbCerts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusterIntermediateCAs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;identityProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ldap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;ldap-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;ldap-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;baseDN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;dc=tetrate,dc=io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;iam&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchDN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cn=%s,ou=People,dc=tetrate,dc=io&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(&amp;amp;(objectClass=person)(uid=%s))&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;usersFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(objectClass=person)&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;groupsFilter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(objectClass=groupOfUniqueNames)&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;membershipAttribute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;uniqueMember&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;internalCertProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;INTERNAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;For more information on what each of these sections describes and how to
configure them, please check out the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec#datastore&#34;&gt;Data Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec#telemetrystore&#34;&gt;Telemetry Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec#identityprovider&#34;&gt;Identity Provider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec#tokenissuer&#34;&gt;Token Issuer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/common/common_config#internalcertprovider&#34;&gt;Internal Cert Provider&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Edit the relevant sections, save your configured custom resource to a file and
apply it to your Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f managementplane.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;p&gt;Before applying it, bear in mind that you will have to allow the service accounts
of the different management plane components to your OpenShift Authorization Policies.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;oc adm policy add-scc-to-user anyuid -n tsb -z tsb-iam
oc adm policy add-scc-to-user anyuid -n tsb -z tsb-oap
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you can apply it:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;oc apply -f managementplane.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;Note: TSB will automatically do this every hour, so this command only needs to
be run once after the initial installation.&lt;/p&gt;
&lt;h3 id=&#34;verifying-installation&#34;&gt;Verifying Installation&lt;/h3&gt;
&lt;p&gt;To verify your installation succeeded, log in as the admin user. Try to connect
to the TSB UI or login with the &lt;code&gt;tctl&lt;/code&gt; CLI tool.&lt;/p&gt;
&lt;p&gt;The TSB UI is reachable on port 8443 of the external IP as returned by the
following command:&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get svc -n tsb envoy
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;oc get svc -n tsb envoy
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;To configure &lt;code&gt;tctl&lt;/code&gt;&amp;rsquo;s default config profile to point to your new TSB cluster do
the following:&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;AWS&amp;rsquo;, value: &amp;lsquo;AWS&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl config clusters set default --bridge-address $(kubectl get svc -n tsb envoy --output jsonpath=&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;):8443
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;AWS&#34;&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl config clusters set default --bridge-address $(kubectl get svc -n tsb envoy --output jsonpath=&amp;#39;{.status.loadBalancer.ingress[0].hostname}&amp;#39;):8443
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;Now you can log in with &lt;code&gt;tctl&lt;/code&gt; and provide the organization name and admin account credentials.
The tenant field is optional and can be left blank at this point and configured later,
when tenants are added to the platform.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl login
Organization: tetrate
Tenant:
Username: admin
Password: *****
Login Successful!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Go to &lt;a href=&#34;../tctl_connect&#34;&gt;Connect to TSB with tctl&lt;/a&gt; for more details on how to configure tctl.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Onboarding Clusters</title>
      <link>https://lib.jimmysong.io/tsb/setup/self-managed/onboarding-clusters/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/self-managed/onboarding-clusters/</guid>
      <description>&lt;p&gt;This page explains how to onboard a Kubernetes cluster to an existing Tetrate
Service Bridge management plane.&lt;/p&gt;
&lt;p&gt;Before you start, make sure that you&amp;rsquo;ve:&lt;/p&gt;
&lt;p&gt;✓ Checked the &lt;a href=&#34;../requirements-and-download&#34;&gt;requirements&lt;/a&gt;&lt;br /&gt;
✓ &lt;a href=&#34;./management-plane-installation&#34;&gt;Installed TSB management plane&lt;/a&gt; or &lt;a href=&#34;./demo-installation&#34;&gt;demo installation&lt;/a&gt;&lt;br /&gt;
✓ &lt;a href=&#34;../tctl_connect&#34;&gt;Login to the management plane with tctl&lt;/a&gt;&lt;br /&gt;
✓ Checked &lt;a href=&#34;../components#control-plane&#34;&gt;TSB control plane components&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;:::note isolation boundaries
TSB 1.6 introduces isolation boundaries that allows you to have multiple TSB-managed Istio environments within a Kubernetes cluster, or spanning several clusters. One of the benefits of isolation boundaries is that you can perform canary upgrades of the control plane.&lt;/p&gt;
&lt;p&gt;To enable isolation boundaries, you must update operator deployment with environment variable &lt;code&gt;ISTIO_ISOLATION_BOUNDARIES=true&lt;/code&gt; and control plane CR to include &lt;code&gt;isolationBoundaries&lt;/code&gt; field.
For more information, see &lt;a href=&#34;../isolation-boundaries&#34;&gt;Isolation Boundaries&lt;/a&gt;.
:::&lt;/p&gt;
&lt;h2 id=&#34;creating-cluster-object&#34;&gt;Creating Cluster Object&lt;/h2&gt;
&lt;p&gt;To create the correct credentials for the cluster to communicate with the
management plane, you need to create a cluster object using the management plane
API.&lt;/p&gt;
&lt;p&gt;Adjust the below &lt;code&gt;yaml&lt;/code&gt; object according to your needs and save to a file called &lt;code&gt;new-cluster.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;api.tsb.tetrate.io/v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Cluster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;cluster-name-in-tsb&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;organization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;organization-name&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;:::note Cluster name in TSB
&amp;lt;cluster-name-in-tsb&amp;gt; is the designated name for your cluster in TSB. You
use this name in TSB APIs, such as namespace selector in workspaces and config
groups. You will also use this name when creating a &lt;code&gt;ControlPlane&lt;/code&gt; CR
below. This name must be unique.
:::&lt;/p&gt;
&lt;p&gt;Please refer to the reference docs for details on the configurable fields of a
&lt;a href=&#34;../../refs/tsb/v2/cluster&#34;&gt;Cluster&lt;/a&gt; object.&lt;/p&gt;
&lt;p&gt;To create the cluster object at the management plane, use &lt;code&gt;tctl&lt;/code&gt; to apply the
&lt;code&gt;yaml&lt;/code&gt; file containing the cluster details.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;tctl apply -f new-cluster.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;deploy-operators&#34;&gt;Deploy Operators&lt;/h2&gt;
&lt;p&gt;Next, you need to install the necessary components in the cluster to onboard and
connect it to the management plane.&lt;/p&gt;
&lt;p&gt;There are two operators you must deploy. First, the control plane operator,
which is responsible for managing Istio, SkyWalking, and various other
components. Second, the data plane operator, which is responsible for managing
gateways.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}{outputLines:2}&#34; data-lang=&#34;bash{promptUser:alice}{outputLines:2}&#34;&gt;tctl install manifest cluster-operators \
    --registry &amp;lt;registry-location&amp;gt; &amp;gt; clusteroperators.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;p&gt;The install manifest cluster-operators command outputs the Kubernetes manifests
of the required operators. We can then add this to our source control or apply
it to the cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;kubectl apply -f clusteroperators.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;p&gt;The install manifest cluster-operators command outputs the Kubernetes manifests
of the required operators. We can then add this to our source control or apply
it to the cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;oc apply -f clusteroperators.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;:::note
For &lt;a href=&#34;#configuring-secrets&#34;&gt;configuring secrets&lt;/a&gt; and &lt;a href=&#34;#control-plane-installation&#34;&gt;control plane installation&lt;/a&gt; below, you must
create secrets and custom resource yamls for each cluster individually.
In other words, repeat the steps for each cluster and make sure to pass &lt;code&gt;&amp;lt;cluster-name-in-tsb&amp;gt;&lt;/code&gt;
value that you set above then apply both yamls to the correct cluster.
:::&lt;/p&gt;
&lt;h2 id=&#34;configuring-secrets&#34;&gt;Configuring Secrets&lt;/h2&gt;
&lt;p&gt;The control plane needs secrets in order to authenticate with the management plane.
These include a service account key, Elasticsearch credentials, and CA bundles if using
self-signed certificates for the management plane, XCP or Elasticsearch.
Following are a list of secrets that you need to create.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Secret name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;elastic-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Elasticsearch username and password.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;es-certs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The CA certificate to validate Elasticsearch connections when Elasticsearch is configured to present a self-signed certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;redis-credentials&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains:&lt;br /&gt; 1. Redis password. &lt;br /&gt; 2. Flag to use TLS. &lt;br /&gt;&amp;amp; 3. The CA certificate to verify Redis connections when Postgres is configured to present a self-signed certificate. &lt;br /&gt; 4. Client certificate and private key if Redis is configured with mutual TLS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xcp-central-ca-bundle&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The CA bundle to validate the certificates presented by XCP Central.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;mp-certs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The CA certificate to validate TSB management plane APIs if the management plane is configured to present a self-signed certificate. This is CA that created to sign front-envoy TLS certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cluster-service-account&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The CA bundle to validate the certificates presented by XCP Central.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;:::note front-envoy as Elasticsearch proxy
TSB front-envoy can act as proxy to Elasticsearch that is configured in &lt;code&gt;ManagementPlane&lt;/code&gt; CR.
If you use this, make sure to set &lt;code&gt;es-certs&lt;/code&gt; with &lt;code&gt;front-envoy&lt;/code&gt; TLS certificate.
:::&lt;/p&gt;
&lt;h3 id=&#34;using-tctl-to-generate-secrets&#34;&gt;Using tctl to Generate Secrets&lt;/h3&gt;
&lt;p&gt;These secrets can be generated in the correct format by passing them as command-line flags
to the &lt;code&gt;tctl&lt;/code&gt; control-plane-secrets command.&lt;/p&gt;
&lt;p&gt;First, create service account for the cluster using &lt;code&gt;tctl&lt;/code&gt;, which returns a private key
encoded as a JWK that the cluster will use to authenticate with the management
plane. The private key is needed when rendering the secrets for the cluster.&lt;/p&gt;
&lt;p&gt;Run the following command to generate a service account private key for the cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;tctl install cluster-service-account \
    --cluster &amp;lt;cluster-name-in-tsb&amp;gt; \
    &amp;gt; cluster-&amp;lt;cluster-name-in-tsb&amp;gt;-service-account.jwk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The TSB management plane does not store the private key, so it is recommended to
run the command once and store the the private key in
&lt;code&gt;cluster-&amp;lt;cluster-name&amp;gt;-service-account.jwk&lt;/code&gt; securely. Each time it is run
a new private key will be created and associated with the service account in
addition to the older keys. The older keys will continue to work so it is safe
to run this command multiple times.&lt;/p&gt;
&lt;p&gt;Now use &lt;code&gt;tctl&lt;/code&gt; to render the Kubernetes secrets for the cluster, providing the
cluster name, service account key and Elasticsearch credentials. If using self-signed
certificates for the management plane, XCP or Elasticsearch, the CA bundle must also be
provided here.&lt;/p&gt;
&lt;p&gt;:::note Self signed certificate
If you use self signed certificate, you can use Demo install as reference how to set necessary CA bundle. You should have CA bundle from management plane installation step where you create your self-signed certificates. If you use front-envoy as Elasticsearch proxy, you must use front-envoy CA certificate for &lt;code&gt;--elastic-ca-certificate&lt;/code&gt;
:::note&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Standard&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Standard&amp;rsquo;},
{label: &amp;lsquo;Demo install&amp;rsquo;, value: &amp;lsquo;Demo&amp;rsquo;},
]}&amp;gt;&lt;/p&gt;
  &lt;TabItem value=&#34;Standard&#34;&gt;
&lt;p&gt;The following command will generate &lt;code&gt;controlplane-secrets.yaml&lt;/code&gt; that contains Elasticsearch credentials and service account key.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest control-plane-secrets \
    --cluster &amp;lt;cluster-name-in-tsb&amp;gt; \
    --cluster-service-account=&amp;#34;$(cat cluster-&amp;lt;cluster-name-in-tsb&amp;gt;-service-account.jwk)&amp;#34; \
    &amp;gt; controlplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;Demo&#34;&gt;
&lt;p&gt;To onboard your cluster to existing demo installation, you need to get necessary CA
from existing control and management planes already running in the demo cluster. Before you continue, make sure to use demo cluster kubeconfig.&lt;/p&gt;
&lt;p&gt;Get management plane CA using following command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get -n tsb secret tsb-certs -o jsonpath=&amp;#39;{.data.ca\.crt}&amp;#39; | base64 --decode &amp;gt; mp-certs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Since Elasticsearch is proxied behind front-envoy,
Elasticsearch CA is same as management plane CA and can also get obtained here:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get -n istio-system secret es-certs -o jsonpath=&amp;#39;{.data.ca\.crt}&amp;#39; | base64 --decode &amp;gt; es-certs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Get XCP central CA using following command&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get -n tsb secret xcp-central-cert -o jsonpath=&amp;#39;{.data.ca\.crt}&amp;#39; | base64 --decode &amp;gt; xcp-central-ca-certs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create control plane secrets using following command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest control-plane-secrets \
    --cluster &amp;lt;cluster-name-in-tsb&amp;gt; \
    --cluster-service-account=&amp;#34;$(cat cluster-&amp;lt;cluster-name-in-tsb&amp;gt;-service-account.jwk)&amp;#34; \
    --elastic-ca-certificate=&amp;#34;$(cat es-certs)&amp;#34; \
    --management-plane-ca-certificate=&amp;#34;$(cat mp-certs)&amp;#34; \
    --xcp-central-ca-bundle=&amp;#34;$(cat xcp-central-ca-certs)&amp;#34; \
    &amp;gt; controlplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Before you apply the secrets yaml, make sure switch kubeconfig from demo cluster to the cluster that you want to onboard.&lt;/p&gt;
  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;br /&gt;
&lt;p&gt;For more information, see the CLI reference for the &lt;code&gt;tctl&lt;/code&gt;
&lt;a href=&#34;../../reference/cli/reference/install#tctl-install-manifest-control-plane-secrets&#34;&gt;install control plane secrets&lt;/a&gt;
command. You can also check the bundled explanation from &lt;code&gt;tctl&lt;/code&gt; by running this help command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest control-plane-secrets --help
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;applying-secrets&#34;&gt;Applying secrets&lt;/h3&gt;
&lt;p&gt;Once you&amp;rsquo;ve created your secrets manifest, you can add to source control or apply it to your cluster.&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;kubectl apply -f controlplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;oc apply -f controlplane-secrets.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;h3 id=&#34;intermediate-istio-ca-certificates&#34;&gt;Intermediate Istio CA Certificates&lt;/h3&gt;
&lt;p&gt;By default the Istio CA will generate a self-signed root certificate and key and use them to sign the workload certificates. If you want to deploy a TSB control plane in multi-cluster environment, Istio in all clusters must use the same root certificate. See &lt;a href=&#34;../certificate/certificate-setup#intermediate-istio-ca-certificates&#34;&gt;Intermediate Istio CA Certificates&lt;/a&gt; for more details on how to setup Istio CA in the control plane.&lt;/p&gt;
&lt;p&gt;:::note Automated Certificate Management
Since 1.7, TSB supports automated certificate management intermediate Istio CA certificates. Go to &lt;a href=&#34;../certificate/automated-certificate-management&#34;&gt;Automated Certificate Management&lt;/a&gt; for more details. If you want to use automated certificate management, you can skip this section.&lt;/p&gt;
&lt;p&gt;Make sure that you have enabled this in your &lt;a href=&#34;./management-plane-installation#management-plane-installation&#34;&gt;management plane&lt;/a&gt; installation by setting &lt;code&gt;certIssuer.clusterIntermediateCAs&lt;/code&gt; in the management plane custom resource.&lt;/p&gt;
&lt;p&gt;You also need to enable this in the control plane custom resource by setting &lt;code&gt;components.xcp.centralProvidedCaCert&lt;/code&gt; as shown below.
:::&lt;/p&gt;
&lt;p&gt;:::note Demo installation
Istio control plane that installed in the demo cluster is using generated self-signed root CA.
If you want to include demo control plane in multi-cluster environment you must update Istio &lt;code&gt;cacerts&lt;/code&gt;
in the Demo cluster &lt;code&gt;istio-system&lt;/code&gt; namespace with new one issued using same root CA that is used for other clusters.&lt;/p&gt;
&lt;p&gt;Then restart &lt;code&gt;istiod&lt;/code&gt; and all your workloads in the demo cluster so it will have new root CA. You also need
to restart &lt;code&gt;oap-deployment&lt;/code&gt; in &lt;code&gt;istio-system&lt;/code&gt; namespace so workloads can send access log to OAP.
:::&lt;/p&gt;
&lt;h2 id=&#34;control-plane-installation&#34;&gt;Control Plane Installation&lt;/h2&gt;
&lt;p&gt;Finally, you will need to create a &lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#controleplanespec&#34;&gt;ControlPlane&lt;/a&gt;
custom resource in Kubernetes that describes the control plane you wish to deploy.&lt;/p&gt;
&lt;p&gt;For this step, you will be creating a manifest file that must include several variables:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field Name&lt;/th&gt;
&lt;th&gt;Variable Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hub&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;registry-location&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;URL of your Docker registry.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;managementPlane.clusterName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cluster-name-in-tsb&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Name used when the cluster was &lt;a href=&#34;#creating-cluster-object&#34;&gt;registered&lt;/a&gt; to TSB management plane.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;managementPlane.host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tsb-address&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Address where your TSB management plane is running. This is external IP of &lt;code&gt;front-envoy&lt;/code&gt; service or domain name that you use in your DNS entry. For AWS, use ELB DNS name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;managementPlane.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;tsb-port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Port number where your TSB  management plane is listening. Default is 8443.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;managementPlane.selfSigned&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;is-mp-use-self-signed-certificate&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; is you use self signed certificate for the management plane. If you are not using self-signed certificates, you can either omit these fields or specify an explicit &lt;code&gt;false&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;telemetryStore.elastic.host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elastic-address&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Address where your Elasticsearch instance is running.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;telemetryStore.elastic.port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elastic-port&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Port number where your Elasticsearch instance is listening.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;telemetryStore.elastic.selfSigned&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;is-elastic-use-self-signed-certificate&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set to &lt;code&gt;true&lt;/code&gt; is you use self signed certificate for the Elasticsearch. If you are not using self-signed certificates, you can either omit these fields or specify an explicit &lt;code&gt;false&lt;/code&gt; value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;telemetryStore.elastic.protocol&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elastic-protocol&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Either &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; with default to &lt;code&gt;https&lt;/code&gt;. Note that default value will not stored in CRD.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;telemetryStore.elastic.version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;elastic-version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The major version number of your Elasticsearch instance (e.g. if version is &lt;code&gt;7.13.0&lt;/code&gt;, the value should be &lt;code&gt;7&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;:::note Self signed certificate
If you are using self signed certificate, check example in &lt;code&gt;Demo install&lt;/code&gt; below to set custom SNI.
:::&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;Mirantis&amp;rsquo;, value: &amp;lsquo;MKE&amp;rsquo;},
{label: &amp;lsquo;Demo install&amp;rsquo;, value: &amp;lsquo;Demo&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ControlPlane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;controlplane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;registry-location&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managementPlane&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-address&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusterName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;cluster-name-in-tsb&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;is-mp-use-self-signed-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;telemetryStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;elastic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-version&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;is-elastic-use-self-signed-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;xcp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;centralProvidedCaCert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;internalCertProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;INTERNAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more details on what each of these sections describes and how to configure
them, please check out the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#telemetrystore&#34;&gt;Telemetry Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#managementplanesettings&#34;&gt;Management Plane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/common/common_config#internalcertprovider&#34;&gt;Internal Cert Provider&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can then be applied to your Kubernetes cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;kubectl apply -f controlplane.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;MKE&#34;&gt;
Istio requires the use of the CNI plugin in order to inject the sidecar
in the pods. You will also need an overlay to the Istio CNI DaemonSet
to run them with privileged permissions.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ControlPlane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;controlplane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;xcp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;centralProvidedCaCert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;internalCertProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;INTERNAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;istio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kubeSpec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;CNI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;chained&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;binaryDirectory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/opt/cni/bin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;configurationDirectory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/etc/cni/net.d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Depending in the underlaying machine OS, you will need to uncomment the following&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# lines if istio CNI pods need privileged permissions to run.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#       overlays:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#       - apiVersion: install.istio.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#         kind: IstioOperator&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#         name: tsb-istiocontrolplane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#         patches:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#         - path: spec.components.cni.k8s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#             overlays:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#             - apiVersion: extensions/v1beta1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#               kind: DaemonSet&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#               name: istio-cni-node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#               patches:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#               - path: spec.template.spec.containers.[name:install-cni].securityContext&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#                 value:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#                   privileged: true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;registry-location&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managementPlane&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-address&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusterName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;cluster-name-in-tsb&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;is-mp-use-self-signed-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;telemetryStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;elastic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-hostname-or-ip&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;elastic-version&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;is-elastic-use-self-signed-certificate&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meshExpansion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more details on what each of these sections describes and how to configure
them, please check out the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#telemetrystore&#34;&gt;Telemetry Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#managementplanesettings&#34;&gt;Management Plane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/common/common_config#internalcertprovider&#34;&gt;Internal Cert Provider&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before applying it, bear in mind that you will have to grant &lt;code&gt;cluster-admin&lt;/code&gt;
role to &lt;code&gt;istio-system:istio-operator&lt;/code&gt; service account.&lt;/p&gt;
&lt;p&gt;This can then be applied to your Kubernetes cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;kubectl apply -f controlplane.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;Demo&#34;&gt;
&lt;p&gt;Since demo installation is using auto generated self signed certificate, you have to specify XCP custom SNI to pass TLS validation check. You will use overlay to set XCP central SNI value as shown below.&lt;/p&gt;
&lt;p&gt;Demo installation also use management plane &lt;code&gt;front-envoy&lt;/code&gt; as proxy to the deployed Elasticsearch in the demo cluster. So you will use same &lt;code&gt;&amp;lt;tsb-address&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;tsb-port&amp;gt;&lt;/code&gt; to configure &lt;code&gt;telemetryStore.elastic&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ControlPlane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;controlplane&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;registry-location&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managementPlane&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-address&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusterName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;cluster-name-in-tsb&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;telemetryStore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;elastic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-address&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tsb-port&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selfSigned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;internalCertProvider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;certManager&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;managed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;INTERNAL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;xcp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;centralAuthMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;JWT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;centralProvidedCaCert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kubeSpec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;overlays&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.xcp.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;EdgeXcp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;edge-xcp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;patches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;spec.centralAuthJwt.centralSni&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;central.xcp.tetrate.io&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more details on what each of these sections describes and how to configure
them, please check out the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#telemetrystore&#34;&gt;Telemetry Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#managementplanesettings&#34;&gt;Management Plane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/common/common_config#internalcertprovider&#34;&gt;Internal Cert Provider&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This can then be applied to your Kubernetes cluster:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}&#34; data-lang=&#34;bash{promptUser:alice}&#34;&gt;kubectl apply -f controlplane.yaml
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;p&gt;:::note
To onboard a cluster, you do not need to create any data plane descriptions at
this stage. Data plane descriptions are only needed when adding Gateways. For
more information, see the section on &lt;a href=&#34;../../quickstart/ingress_gateway&#34;&gt;Gateways&lt;/a&gt;
in the &lt;a href=&#34;../../quickstart/introduction&#34;&gt;usage quickstart&lt;/a&gt; guide.
:::&lt;/p&gt;
&lt;h3 id=&#34;verify-onboarded-cluster&#34;&gt;Verify Onboarded Cluster&lt;/h3&gt;
&lt;p&gt;To verify a cluster has been successfully onboarded check that the pods have all
started correctly.&lt;/p&gt;
&lt;p&gt;&amp;lt;Tabs
defaultValue=&amp;ldquo;Default&amp;rdquo;
values={[
{label: &amp;lsquo;Standard&amp;rsquo;, value: &amp;lsquo;Default&amp;rsquo;},
{label: &amp;lsquo;OpenShift&amp;rsquo;, value: &amp;lsquo;OC&amp;rsquo;},
]}&amp;gt;
&lt;TabItem value=&#34;Default&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}{outputLines:2-9,10-11}&#34; data-lang=&#34;bash{promptUser:alice}{outputLines:2-9,10-11}&#34;&gt;kubectl get pod -n istio-system
NAME                                          READY   STATUS    RESTARTS   AGE
edge-66cbf867c6-rshqh                                    1/1     Running   0      1m25s
istio-operator-78446c59c5-dg28c                          1/1     Running   3      1m25s
istio-system-custom-metrics-apiserver-557ffcfbc8-lpw2f   1/1     Running   0      1m25s
istiod-6d474df64f-2w8s8                                  1/1     Running   0      1m25s
oap-deployment-894544dd6-v2w77                           3/3     Running   0      1m25s
onboarding-operator-f68684bf4-txwxn                      1/1     Running   1      1m25s
otel-collector-765d5c6475-6zfnf                          3/3     Running   0      1m25s
tsb-operator-control-plane-554c56d4f4-cnzjg              1/1     Running   3      1m25s
xcp-operator-edge-787fc64b8d-rhlth                       1/1     Running   5      1m25s
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
  &lt;TabItem value=&#34;OC&#34;&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}{outputLines:2-9,10-11}&#34; data-lang=&#34;bash{promptUser:alice}{outputLines:2-9,10-11}&#34;&gt;oc get pod -n istio-system
NAME                                          READY   STATUS    RESTARTS   AGE
edge-66cbf867c6-rshqh                                    1/1     Running   0      1m25s
istio-operator-78446c59c5-dg28c                          1/1     Running   3      1m25s
istio-system-custom-metrics-apiserver-557ffcfbc8-lpw2f   1/1     Running   0      1m25s
istiod-6d474df64f-2w8s8                                  1/1     Running   0      1m25s
oap-deployment-894544dd6-v2w77                           3/3     Running   0      1m25s
onboarding-operator-f68684bf4-txwxn                      1/1     Running   1      1m25s
otel-collector-765d5c6475-6zfnf                          3/3     Running   0      1m25s
tsb-operator-control-plane-554c56d4f4-cnzjg              1/1     Running   3      1m25s
xcp-operator-edge-787fc64b8d-rhlth                       1/1     Running   5      1m25s
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;istio-setup-for-onboarded-applications&#34;&gt;Istio setup for onboarded applications&lt;/h4&gt;
&lt;p&gt;Besides the CNI configuration required in the &lt;code&gt;ControlPlane&lt;/code&gt;, you need to be
aware that any namespace that is going to have workloads with Istio sidecars,
will need a to account for the need of creating a &lt;code&gt;NetworkAttachmentDefinition&lt;/code&gt;
object created so that the pods can be attached to the &lt;code&gt;istio-cni&lt;/code&gt; network.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cat &amp;lt;&amp;lt;EOF | oc -n &amp;lt;target-namespace&amp;gt; create -f -
apiVersion: &amp;#34;k8s.cni.cncf.io/v1&amp;#34;
kind: NetworkAttachmentDefinition
metadata:
  name: istio-cni
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also note that the envoy sidecars injected into the workloads run as user ID
1337, and that is disallowed by default in OpenShift. Hence, we will need to add
the &lt;code&gt;anyuid&lt;/code&gt; SCC (or any other SCC that allows the aforementioned user ID) to
the service accounts used in the application namespace.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:alice}{outputLines:&#34; data-lang=&#34;bash{promptUser:alice}{outputLines:&#34;&gt;oc adm policy add-scc-to-group anyuid \
    system:serviceaccounts:&amp;lt;target-namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;  &lt;/TabItem&gt;
&lt;/Tabs&gt;
&lt;h3 id=&#34;verify-cluster-status&#34;&gt;Verify Cluster Status&lt;/h3&gt;
&lt;p&gt;Then check if cluster status is sent to the management plane. You can do this by using TSB UI. Login to TSB UI, then go to Clusters page and see if your newly onboarded cluster has the following information available: Provider, XCP Version, Istio Version and Last Sync.&lt;/p&gt;
&lt;p&gt;You can also use tctl by executing the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tctl get clusters &amp;lt;cluster-name-in-tsb&amp;gt; -o yaml &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep state: -A &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  state:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    istioVersions:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    - 1.12.4-34a16db007
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    lastSyncTime: &lt;span class=&#34;s2&#34;&gt;&amp;#34;2022-07-01T06:24:34.562924571Z&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    provider: gke
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    xcpVersion: v1.3.0-rc31
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you see Cluster state, it means XCP edge in the control plane has connected to XCP central in the management plane.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TSB Uninstallation</title>
      <link>https://lib.jimmysong.io/tsb/setup/self-managed/uninstallation/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/self-managed/uninstallation/</guid>
      <description>&lt;p&gt;This page describes the procedure to follow to uninstall TSB from a cluster.&lt;/p&gt;
&lt;p&gt;:::note
The process will be similar for all of the planes (management, control, and data
planes), because you&amp;rsquo;ll need to delete any custom resource for the plane, then
delete the operator itself.
:::&lt;/p&gt;
&lt;h2 id=&#34;data-plane&#34;&gt;Data plane&lt;/h2&gt;
&lt;p&gt;As the data plane takes care of deploying ingress gateways in your cluster, the
first step is to delete all of the &lt;code&gt;IngressGateway&lt;/code&gt; custom resources from your
cluster.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete ingressgateways.install.tetrate.io \
    --all --all-namespaces
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will delete all the &lt;code&gt;IngressGateway&lt;/code&gt;&amp;rsquo;s deployed in every namespace in the
cluster. Once you&amp;rsquo;ve run this command, the data plane operator will delete the
deployments and associated resources for every gateway. This may take some time
to ensure that they&amp;rsquo;re all successfully removed.&lt;/p&gt;
&lt;p&gt;To make sure that you gracefully remove the &lt;code&gt;istio-operator&lt;/code&gt; deployment, you
must scale and delete the remaining objects in the data plane operator namespace
in the following order:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl -n istio-gateway scale deployment \
    tsb-operator-data-plane --replicas=0
kubectl -n istio-gateway delete \
    istiooperators.install.istio.io --all
kubectl -n istio-gateway delete deployment --all
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will delete both the TSB and Istio operator deployments stored in the data
plane operator namespace. Now you can clean up the validation and mutation web
hooks.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete \
    validatingwebhookconfigurations.admissionregistration.k8s.io \
    tsb-operator-data-plane-egress \
    tsb-operator-data-plane-ingress \
    tsb-operator-data-plane-tier1
kubectl delete \
    mutatingwebhookconfigurations.admissionregistration.k8s.io \
    tsb-operator-data-plane-egress \
    tsb-operator-data-plane-ingress \
    tsb-operator-data-plane-tier1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Removing the control plane will remove all TSB components as well as the Istio
control plane used by TSB and render any sidecars in the cluster non-functional.&lt;/p&gt;
&lt;h2 id=&#34;control-plane&#34;&gt;Control Plane&lt;/h2&gt;
&lt;p&gt;To delete the TSB control plane, first delete the IstioOperator associated with
it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete controlplanes.install.tetrate.io --all --all-namespaces
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It may take some time for the TSB operator in the istio-system namespace to
clean up the Istio components, but once it&amp;rsquo;s complete, delete the validation
and mutation web hooks.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete \
    validatingwebhookconfigurations.admissionregistration.k8s.io \
    tsb-operator-control-plane
kubectl delete \
    mutatingwebhookconfigurations.admissionregistration.k8s.io \
    tsb-operator-control-plane
kubectl delete \
    validatingwebhookconfigurations.admissionregistration.k8s.io \
    xcp-edge-istio-system
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then delete the &lt;code&gt;istio-system&lt;/code&gt; and &lt;code&gt;xcp-multicluster&lt;/code&gt; namespaces.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete namespace istio-system xcp-multicluster
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In order to clean up the cluster-scoped resources, use the &lt;code&gt;tctl install manifest&lt;/code&gt;
command to render the &lt;code&gt;cluster-operators&lt;/code&gt; manifest and delete the resulting
manifest.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;tctl install manifest cluster-operators --registry=dummy | \
    kubectl delete -f - --ignore-not-found
kubectl delete clusterrole xcp-operator-edge
kubectl delete clusterrolebinding xcp-operator-edge
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now clean up all the control plane related custom resource definitions in your
cluster.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete crd \
    clusters.xcp.tetrate.io \
    controlplanes.install.tetrate.io \
    edgexcps.install.xcp.tetrate.io \
    egressgateways.gateway.xcp.tetrate.io \
    egressgateways.install.tetrate.io \
    gatewaygroups.gateway.xcp.tetrate.io \
    globalsettings.xcp.tetrate.io \
    ingressgateways.gateway.xcp.tetrate.io \
    ingressgateways.install.tetrate.io \
    securitygroups.security.xcp.tetrate.io \
    securitysettings.security.xcp.tetrate.io \
    servicedefinitions.registry.tetrate.io \
    serviceroutes.traffic.xcp.tetrate.io \
    tier1gateways.gateway.xcp.tetrate.io \
    tier1gateways.install.tetrate.io \
    trafficgroups.traffic.xcp.tetrate.io \
    trafficsettings.traffic.xcp.tetrate.io \
    workspaces.xcp.tetrate.io \
    workspacesettings.xcp.tetrate.io \
    --ignore-not-found
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, all the TSB resources in the Kubernetes cluster are removed,
but in order to remove this cluster from TSB configuration, you have to run
the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;tctl delete cluster &amp;lt;cluster&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;management-plane&#34;&gt;Management plane&lt;/h2&gt;
&lt;p&gt;To uninstall the management plane, you need to remove the &lt;code&gt;ManagementPlane&lt;/code&gt; CR
that describes your management plane configuration, which will force the
management plane operator to delete any components related to it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl -n tsb delete managementplanes.install.tetrate.io --all
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, delete the management plane operator.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl -n tsb delete deployment tsb-operator-management-plane
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, delete the validation and mutation web hooks.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete \
    validatingwebhookconfigurations.admissionregistration.k8s.io \
    tsb-operator-management-plane
kubectl delete \
    mutatingwebhookconfigurations.admissionregistration.k8s.io \
    tsb-operator-management-plane
kubectl delete \
    validatingwebhookconfigurations.admissionregistration.k8s.io \
    xcp-central-tsb
kubectl delete \
    mutatingwebhookconfigurations.admissionregistration.k8s.io \
    xcp-central-tsb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To clean up the cluster-scoped resources, use the &lt;code&gt;tctl install manifest&lt;/code&gt;
command to render the &lt;code&gt;management-plane-operator&lt;/code&gt; manifest and delete it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;tctl install manifest management-plane-operator \
    --registry=dummy | \
    kubectl delete -f - --ignore-not-found
kubectl delete clusterrole xcp-operator-central
kubectl delete clusterrolebinding xcp-operator-central
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now clean up all the management plane related custom resource definitions in
your cluster.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promtUser:&#34; data-lang=&#34;bash{promtUser:&#34;&gt;kubectl delete crd \
    centralxcps.install.xcp.tetrate.io \
    clusters.xcp.tetrate.io \
    egressgateways.gateway.xcp.tetrate.io \
    egressgateways.install.tetrate.io \
    gatewaygroups.gateway.xcp.tetrate.io \
    globalsettings.xcp.tetrate.io \
    ingressgateways.gateway.xcp.tetrate.io \
    ingressgateways.install.tetrate.io \
    managementplanes.install.tetrate.io \
    securitygroups.security.xcp.tetrate.io \
    securitysettings.security.xcp.tetrate.io \
    servicedefinitions.registry.tetrate.io \
    serviceroutes.traffic.xcp.tetrate.io \
    tier1gateways.gateway.xcp.tetrate.io \
    tier1gateways.install.tetrate.io \
    trafficgroups.traffic.xcp.tetrate.io \
    trafficsettings.traffic.xcp.tetrate.io \
    workspaces.xcp.tetrate.io \
    workspacesettings.xcp.tetrate.io
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>TSB Upgrade</title>
      <link>https://lib.jimmysong.io/tsb/setup/self-managed/upgrade/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/setup/self-managed/upgrade/</guid>
      <description>&lt;p&gt;This page will walk you through how to upgrade TSB using the &lt;code&gt;tctl&lt;/code&gt; CLI,
rendering the Kubernetes manifests for the different operators and applying them
to the clusters to upgrade using &lt;code&gt;kubectl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before you start, make sure that you have:&lt;/p&gt;
&lt;p&gt;✓ Checked the new version&amp;rsquo;s &lt;a href=&#34;../requirements-and-download#requirements&#34;&gt;requirements&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;The upgrade procedure between operator-based releases is fairly simple. Once the
operator pods are updated with the new release images, the newly spun up
operator pods will upgrade all the necessary components to the new version for
you.&lt;/p&gt;
&lt;h2 id=&#34;create-backups&#34;&gt;Create Backups&lt;/h2&gt;
&lt;p&gt;In order to make sure you can restore everything when something goes wrong, please create backups for the Management Plane and each of your clusters&amp;rsquo; local Control Planes.&lt;/p&gt;
&lt;h3 id=&#34;backup-the-management-plane&#34;&gt;Backup the Management Plane&lt;/h3&gt;
&lt;h4 id=&#34;backup-the-tctl-binary&#34;&gt;Backup the &lt;code&gt;tctl&lt;/code&gt; binary&lt;/h4&gt;
&lt;p&gt;Since each new &lt;code&gt;tctl&lt;/code&gt; binary potentially comes with new operators and configurations to deploy and configure TSB, you should backup the current &lt;code&gt;tctl&lt;/code&gt; binary you are using. Please do this &lt;em&gt;before&lt;/em&gt; syncing the new images.&lt;/p&gt;
&lt;p&gt;Copy the &lt;code&gt;tctl&lt;/code&gt; binary with version suffix (e.g. &lt;code&gt;-1.3.0&lt;/code&gt;) to quickly restore the older one if needed.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;cp ~/.tctl/bin/tctl ~/.tctl/bin/tctl-{version}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you have misplaced your binary, you may be able to find the right version from &lt;a href=&#34;https://binaries.dl.tetrate.io/public/raw/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this URL&lt;/a&gt;. However, it is strongly recommended that you backup your current copy to be sure.&lt;/p&gt;
&lt;h4 id=&#34;backup-the-managementplane-cr&#34;&gt;Backup the ManagementPlane CR&lt;/h4&gt;
&lt;p&gt;Create a backup of the &lt;code&gt;ManagementPlane&lt;/code&gt; CR by executing the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get managementplane -n tsb -o yaml &amp;gt; mp-backup.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;backup-the-postgresql-database&#34;&gt;Backup the PostgreSQL database&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;../../operations/postgresql#create-a-backup-of-tsb-configuration&#34;&gt;Create a backup of your PostgreSQL database&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The exact procedure for connecting to the database may differ depending on your environment, please refer to the documentation for your environment.&lt;/p&gt;
&lt;h3 id=&#34;backup-the-control-plane-custom-resource&#34;&gt;Backup the Control Plane Custom Resource&lt;/h3&gt;
&lt;p&gt;Create a backup of all &lt;code&gt;ControlPlane&lt;/code&gt; CRs by executing the following command on each of your onboarded clusters:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl get controlplane -n istio-system -o yaml &amp;gt; cp-backup.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;upgrade-procedure&#34;&gt;Upgrade Procedure&lt;/h2&gt;
&lt;h3 id=&#34;download-tctl-and-sync-images&#34;&gt;Download &lt;code&gt;tctl&lt;/code&gt; and Sync Images&lt;/h3&gt;
&lt;p&gt;Now that you have taken backups, &lt;a href=&#34;../requirements-and-download#download&#34;&gt;download the new version&amp;rsquo;s &lt;code&gt;tctl&lt;/code&gt; binary&lt;/a&gt;,
then obtain the new TSB container images.&lt;/p&gt;
&lt;p&gt;Details on how to do this is described in the &lt;a href=&#34;../requirements-and-download#sync-tetrate-service-bridge-images&#34;&gt;Requirements and Download page&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-the-management-plane-operator&#34;&gt;Create the Management Plane Operator&lt;/h3&gt;
&lt;p&gt;Create the base manifest which will allow you to update the management
plane operator from your private Docker registry:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest management-plane-operator \
    --registry &amp;lt;your-docker-registry&amp;gt; \
    &amp;gt; managementplaneoperator.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;:::note Management namespace name
Starting with TSB 0.9.0 the default Management Plane namespace name is &lt;code&gt;tsb&lt;/code&gt; as
opposed to &lt;code&gt;tcc&lt;/code&gt; used in older versions. If you installed TSB using an earlier
version than 0.9.0, your Management Plane probably lives in the &lt;code&gt;tcc&lt;/code&gt; namespace.
You will need to add a &lt;code&gt;--management-namespace tcc&lt;/code&gt; flag to reflect this.
:::&lt;/p&gt;
&lt;p&gt;:::note Customization
The managementplaneoperator.yaml file created by the install command can now be
used as a base template for your Management Plane upgrade. If your existing TSB
configuration contains specific adjustments on top of the standard configuration,
you should copy them over to the new template.
:::&lt;/p&gt;
&lt;p&gt;Now, add the manifest to source control or apply it directly to the management
plane cluster by using the kubectl client:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f managementplaneoperator.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After applying the manifest, you will see the new operator running in the &lt;code&gt;tsb&lt;/code&gt;
namespace:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get pod -n tsb
NAME                                            READY   STATUS    RESTARTS   AGE
tsb-operator-management-plane-d4c86f5c8-b2zb5   1/1     Running   0          8s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For more information on the manifest and how to configure it, please review the
&lt;a href=&#34;../../refs/install/managementplane/v1alpha1/spec&#34;&gt;&lt;code&gt;ManagementPlane&lt;/code&gt; CR reference&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;create-the-control-and-data-plane-operators&#34;&gt;Create the Control and Data Plane operators&lt;/h3&gt;
&lt;p&gt;To deploy the new Control and Data Plane operators in your application clusters,
you must run &lt;a href=&#34;../../reference/cli/reference/install#tctl-install-manifest-cluster-operators&#34;&gt;&lt;code&gt;tctl install manifest cluster-operators&lt;/code&gt;&lt;/a&gt;
to retrieve the Control Plane and Data Plane operator manifests for the new
version.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl install manifest cluster-operators \
    --registry &amp;lt;your-docker-registry&amp;gt; \
    &amp;gt; clusteroperators.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;:::note Customization
The clusteroperators.yaml file can now be used for your cluster upgrade. If your
existing control and Data Planes have specific adjustments on top of the
standard configuration, you should copy them over to the template.
:::&lt;/p&gt;
&lt;h3 id=&#34;review-tier1gateways-and-ingressgateways&#34;&gt;Review tier1gateways and ingressgateways&lt;/h3&gt;
&lt;p&gt;Due to a fix introduced in &lt;a href=&#34;https://github.com/istio/istio/pull/36928&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 1.14&lt;/a&gt;, when both &lt;code&gt;replicaCount&lt;/code&gt; and &lt;code&gt;autoscaleEnaled&lt;/code&gt; are set, &lt;code&gt;replicaCount&lt;/code&gt; will be ignored
and only autoscale configuration will be applied. This could lead to issues where the &lt;code&gt;tier1gateways&lt;/code&gt; and &lt;code&gt;ingressgateways&lt;/code&gt; scale down to 1 replica
temporally during the upgrade until the autoscale configuration is applied.
In order to avoid this issue, you can edit the &lt;code&gt;tier1gateway&lt;/code&gt; or &lt;code&gt;ingressgateway&lt;/code&gt; spec and remove the &lt;code&gt;replicas&lt;/code&gt; field, and since the current
deployment will be already managed by the HPA controller, then this will allow you to upgrade the pods with the desired configuration.&lt;/p&gt;
&lt;p&gt;You can get all the &lt;code&gt;tier1gateways&lt;/code&gt; or &lt;code&gt;ingressgateways&lt;/code&gt; by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get tier1gateway.install -A
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get ingressgateway.install -A
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;applying-the-manifest&#34;&gt;Applying the Manifest&lt;/h3&gt;
&lt;p&gt;Now, add the manifest to source control or apply it directly to the appropriate
clusters by using the kubectl client:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f clusteroperators.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For more information on each of these manifests and how to configure them,
please check out the following guides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec&#34;&gt;ControlPlane resource reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/dataplane/v1alpha1/spec&#34;&gt;Data Plane resources reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../refs/install/kubernetes/k8s&#34;&gt;Kubernetes overrides reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rollback&#34;&gt;Rollback&lt;/h2&gt;
&lt;p&gt;In case something goes wrong and you want to rollback TSB to the previous version, you will need to rollback both the Management Plane and the Control Planes.&lt;/p&gt;
&lt;h3 id=&#34;rollback-the-control-plane&#34;&gt;Rollback the Control Plane&lt;/h3&gt;
&lt;h4 id=&#34;scale-down-istio-operator-and-tsb-operator&#34;&gt;Scale down &lt;code&gt;istio-operator&lt;/code&gt; and &lt;code&gt;tsb-operator&lt;/code&gt;&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl scale deployment \
   -l &amp;#34;platform.tsb.tetrate.io/component in (tsb-operator,istio)&amp;#34; \
   -n istio-system \
   --replicas=0
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;delete-the-istiooperator-resource&#34;&gt;Delete the &lt;code&gt;IstioOperator&lt;/code&gt; Resource&lt;/h4&gt;
&lt;p&gt;Delete the operator will require to remove the finalizer protecting the istio object with the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl patch iop tsb-istiocontrolplane -n istio-system --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;remove&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/metadata/finalizers&amp;#34;, &amp;#34;value&amp;#34;:&amp;#34;&amp;#34;}]&amp;#39;


kubectl delete istiooperator -n istio-system --all
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;scale-down-istio-operator-and-tsb-operator-for-the-data-plane-operator&#34;&gt;Scale down &lt;code&gt;istio-operator&lt;/code&gt; and &lt;code&gt;tsb-operator&lt;/code&gt; for the Data Plane operator&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl scale deployment \
   -l &amp;#34;platform.tsb.tetrate.io/component in (tsb-operator,istio)&amp;#34; \
   -n istio-gateway \
   --replicas=0
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;delete-the-istiooperator-resources-for-the-data-plane&#34;&gt;Delete the &lt;code&gt;IstioOperator&lt;/code&gt; Resources for the Data Plane&lt;/h4&gt;
&lt;p&gt;Since 1.5.11 the IOP containing the ingressgateways is split to have one IOP per ingressgateway. In order to rollback to the old Istio version, we
will need to remove the finalizer protecting the istio objects and delete all the operators with the following commands:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;for iop in $(kubectl get iop -n istio-gateway --no-headers | grep -i &amp;#34;tsb-ingress&amp;#34; | awk &amp;#39;{print $1}&amp;#39;); do kubectl patch iop $iop -n istio-gateway --type=&amp;#39;json&amp;#39; -p=&amp;#39;[{&amp;#34;op&amp;#34;: &amp;#34;remove&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;/metadata/finalizers&amp;#34;, &amp;#34;value&amp;#34;:&amp;#34;&amp;#34;}]&amp;#39;; done

kubectl delete istiooperator -n istio-gateway --all
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-the-cluster-operators-and-rollback-the-controlplane-cr&#34;&gt;Create the Cluster Operators, and rollback the ControlPlane CR&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;tctl&lt;/code&gt; binary from the previous version, follow &lt;a href=&#34;#create-the-control-and-data-planes&#34;&gt;the instructions to create the cluster operators&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then apply the the backup of the &lt;code&gt;ControlPlane&lt;/code&gt; CR:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f cp-backup.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;rollback-the-management-plane&#34;&gt;Rollback the Management Plane&lt;/h3&gt;
&lt;h4 id=&#34;scale-down-pods-in-management-plane&#34;&gt;Scale Down Pods in Management Plane&lt;/h4&gt;
&lt;p&gt;Scale down all of the pods in the Management Plane so that the it is inactive.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl scale deployment tsb iam -n tsb --replicas=0
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;restore-postgresql&#34;&gt;Restore PostgreSQL&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;../../operations/postgresql#restore-a-backup&#34;&gt;Restore your PostgreSQL database from your backup&lt;/a&gt;. The exact procedure for connecting to the database may differ depending on your environment, please refer to the documentation for your environment.&lt;/p&gt;
&lt;h4 id=&#34;restore-tctl-and-create-the-management-plane-operator&#34;&gt;Restore &lt;code&gt;tctl&lt;/code&gt; and create the Management Plane operator&lt;/h4&gt;
&lt;p&gt;Restore &lt;code&gt;tctl&lt;/code&gt; from  the backup copy that you made, or &lt;a href=&#34;https://binaries.dl.tetrate.io/public/raw/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;download the binary for the specific version you would like to use&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;mv ~/.tctl/bin/tctl-{version} ~/.tctl/bin/tctl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Follow the &lt;a href=&#34;#create-the-management-plane-operator&#34;&gt;instructions for upgrading&lt;/a&gt; to create the Management Plane operator. Then apply the backup of the &lt;code&gt;ManagementPlane&lt;/code&gt; CR:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f mp-backup.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;scale-back-the-deployments&#34;&gt;Scale back the deployments&lt;/h4&gt;
&lt;p&gt;Finally, scale back the deployments.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl scale deployment tsb iam -n tsb --replicas 1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
