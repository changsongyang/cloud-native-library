<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rate Limiting Traffic | 云原生资料库</title>
    <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/</link>
      <atom:link href="https://lib.jimmysong.io/tsb/howto/rate-limiting/index.xml" rel="self" type="application/rss+xml" />
    <description>Rate Limiting Traffic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 09 Aug 2023 12:00:00 +0800</lastBuildDate>
    <image>
      <url>https://lib.jimmysong.io/media/sharing.png</url>
      <title>Rate Limiting Traffic</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/</link>
    </image>
    
    <item>
      <title>Enabling the Internal Rate Limiting Server</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/internal-rate-limiting/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/howto/rate-limiting/internal-rate-limiting/</guid>
      <description>&lt;p&gt;TSB comes with a rate limiting server component for every control plane cluster. By default this is disabled.&lt;/p&gt;
&lt;p&gt;This section will only discuss installation procedures for the &lt;a href=&#34;../rate_limiting#internal-rate-limiting&#34;&gt;internal mode&lt;/a&gt;, and not for installation of &lt;a href=&#34;../rate_limiting#external-rate-limiting&#34;&gt;external servers&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;
&lt;p&gt;The rate limit server can be enabled by explicitly specifying configuration for the &lt;code&gt;rateLimitServer&lt;/code&gt; component in the &lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#controlplanecomponentset&#34;&gt;ControlPlane Operator API&lt;/a&gt; or &lt;a href=&#34;../../setup/helm/controlplane#installation&#34;&gt;Helm values&lt;/a&gt; and applying it to the relevant control plane clusters.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rateLimitServer&lt;/code&gt; requires a Redis backend to keep track of the rate limiting attribute counts and its details need to be included in the configuration.&lt;/p&gt;
&lt;p&gt;Your Control Plane operator configuration may look like the example below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rateLimitServer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;domain&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;backend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;redis-uri&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note the introduction of &lt;code&gt;rateLimitServer&lt;/code&gt; in the &lt;code&gt;components&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;The value for &lt;code&gt;domain&lt;/code&gt; is used to group the storage metadata for rate limits. Specifying the same &lt;code&gt;domain&lt;/code&gt; for all Control Planes will effectively allow you to configure global rate limiting across all clusters. If you use different values for &lt;code&gt;domain&lt;/code&gt;, then the rate limiting effects are localized to only those clusters that are looking at the same &lt;code&gt;domain&lt;/code&gt;. This assumes that the Control Planes are specifying the same Redis server.&lt;/p&gt;
&lt;p&gt;We recommend that you specify the same domain only within clusters in the same geographic region, for example &lt;code&gt;us-east&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The value for &lt;code&gt;redis-uri&lt;/code&gt; is the server name and port of the Redis instance to use.
You are responsible in making sure that this URI is reachable from the control plane cluster(s).&lt;/p&gt;
&lt;h2 id=&#34;redis-authentication&#34;&gt;Redis Authentication&lt;/h2&gt;
&lt;p&gt;If your Redis database requires a password, you can either create the secret yourself:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -n istio-system create secret generic \
  redis-credentials \
  --from-literal=REDIS_AUTH=&amp;lt;password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are running TSB &amp;gt;= 1.4.0, you can specify it in using the &lt;code&gt;--redis-password&lt;/code&gt; argument in the &lt;a href=&#34;../../reference/cli/reference/install#tctl-install-manifest-control-plane-secrets&#34;&gt;&lt;code&gt;tctl install manifest control-plane-secrets&lt;/code&gt;&lt;/a&gt; command to generate the appropriate secrets.&lt;/p&gt;
&lt;h3 id=&#34;tls&#34;&gt;TLS&lt;/h3&gt;
&lt;p&gt;If your Redis database supports in-transit encryption (TLS), you will need to enable TLS in
the Ratelimit Redis client by setting the &lt;code&gt;REDIS_TLS&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;redis-credentials&lt;/code&gt; secret:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -n istio-system create secret generic \
  redis-credentials \
  --from-literal=REDIS_AUTH=&amp;lt;password&amp;gt;
  --from-literal=REDIS_TLS=true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are running TSB &amp;gt;= 1.5.0, you can specify it in using the &lt;code&gt;--redis-tls&lt;/code&gt; argument in the &lt;a href=&#34;../../reference/cli/reference/install#tctl-install-manifest-control-plane-secrets&#34;&gt;&lt;code&gt;tctl install manifest control-plane-secrets&lt;/code&gt;&lt;/a&gt; command to generate the appropriate secrets. You can also specify a custom CA certificate to validate the TLS connection using the &lt;code&gt;--redis-tls-ca-cert&lt;/code&gt; argument as well as the Redis Client key and certificate (if client certificate authentication is enabled) using &lt;code&gt;--redis-tls-client-key&lt;/code&gt; and &lt;code&gt;redis-tls-client-cert&lt;/code&gt; respectively in the &lt;a href=&#34;../../reference/cli/reference/install#tctl-install-manifest-control-plane-secrets&#34;&gt;&lt;code&gt;tctl install manifest control-plane-secrets&lt;/code&gt;&lt;/a&gt; command which will generate the appropriate &lt;code&gt;redis-credentials&lt;/code&gt; secret.&lt;/p&gt;
&lt;h2 id=&#34;deploying-the-server&#34;&gt;Deploying The Server&lt;/h2&gt;
&lt;p&gt;Create a manifest using the example shown so far. Make sure to include all of the necessary fields for the Control Plane that has been omitted in the previous example.&lt;/p&gt;
&lt;p&gt;If you are updating an existing Control Plane, you can use &lt;code&gt;kubectl get controlplane -n istio-system -o yaml&lt;/code&gt; to obtain the current values.&lt;/p&gt;
&lt;p&gt;Save the manifest into a file, e.g. &lt;code&gt;control-plane-with-rate-limiting.yaml&lt;/code&gt;, and then apply it using &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f control-plane-with-rate-limiting.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To check if the rate limit server is properly running in the cluster, execute the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get pods -n istio-system | grep ratelimit
ratelimit-server-864654b5b5-d77bq                       1/1     Running   2          2d1h
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rate Limiting in Ingress Gateway</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/ingress-gateway/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/howto/rate-limiting/ingress-gateway/</guid>
      <description>&lt;p&gt;In this document, we will enable a rate limit in the Ingress Gateway and show how to rate limit based on the HTTP request &lt;code&gt;user-agent&lt;/code&gt; string.&lt;/p&gt;
&lt;p&gt;Before you get started, make sure you: &lt;br /&gt;
✓ Familiarize yourself with &lt;a href=&#34;../../concepts/toc&#34;&gt;TSB concepts&lt;/a&gt; &lt;br /&gt;
✓ Install the TSB environment. You can use &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; for quick install&lt;br /&gt;
✓ Completed &lt;a href=&#34;../../quickstart&#34;&gt;TSB usage quickstart&lt;/a&gt;. This document assumes you already created Tenant and are familiar with Workspace and Config Groups. Also you need to configure tctl to your TSB environment.&lt;br/&gt;&lt;/p&gt;
&lt;h2 id=&#34;enable-rate-limiting-server&#34;&gt;Enable Rate Limiting Server&lt;/h2&gt;
&lt;p&gt;Read and follow the instructions on &lt;a href=&#34;./internal_rate_limiting&#34;&gt;Enabling the Rate Limiting Server document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;:::note Demo Installation
If you are using the &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; installation, you already have rate limit service running and ready to use, and can skip this section.
:::note&lt;/p&gt;
&lt;h2 id=&#34;deploy-httpbin-service&#34;&gt;Deploy &lt;code&gt;httpbin&lt;/code&gt; Service&lt;/h2&gt;
&lt;p&gt;Follow &lt;a href=&#34;../../reference/samples/httpbin&#34;&gt;the instructions in this document&lt;/a&gt; to create the &lt;code&gt;httpbin&lt;/code&gt; service. You can skip the sections &amp;ldquo;Create Certificates&amp;rdquo; and &amp;ldquo;Onboard &lt;code&gt;httpbin&lt;/code&gt; Application&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;rate-limit-based-on-user-agent&#34;&gt;Rate limit based on User-agent&lt;/h2&gt;
&lt;p&gt;Create a file called &lt;code&gt;rate-limiting-ingress-config.yaml&lt;/code&gt; which edits the existing Ingress Gateway to also rate limit every value for User-agent header at 5 requests/minute. Replace the &lt;code&gt;organization&lt;/code&gt; and &lt;code&gt;tenant&lt;/code&gt; with appropriate values&lt;/p&gt;
&lt;p&gt;Details for other rate limiting options can be found in &lt;a href=&#34;../../refs/tsb/gateway/v2/ingress_gateway&#34;&gt;this document&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;gateway.tsb.tetrate.io/v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;IngressGateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin-gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Need not be the same as spec.labels.app&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;organization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;organization&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tenant&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin-gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workloadSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin-ingress-gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# name of Ingress Gateway created for httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;httpbin.tetrate.com&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;routing&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;httpbin/httpbin.httpbin.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rateLimiting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;dimensions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;user-agent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;requestsPerUnit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;MINUTE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configure the Ingress Gateway with &lt;code&gt;tctl&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl apply -f rate-limiting-ingress-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;You can test the rate limiting by sending HTTP requests from an external machine or your local environment to the &lt;code&gt;httpbin&lt;/code&gt; Ingress Gateway, and observe the rate limiting take effect after a certain number of requests.&lt;/p&gt;
&lt;p&gt;In the following example, since you do not control &lt;code&gt;httpbin.tetrate.com&lt;/code&gt;, you will have to trick &lt;code&gt;curl&lt;/code&gt; into thinking that &lt;code&gt;httpbin.tetrate.com&lt;/code&gt; resolves to the IP address of the Tier-1 Gateway.&lt;/p&gt;
&lt;p&gt;Obtain the IP address of the Tier-1 Gateway that you previously created using the following command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -n httpbin get service httpbin-ingress-gateway -o jsonpath=&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then execute the following command to send HTTP requests to the &lt;code&gt;httpbin&lt;/code&gt; service through the Ingress Gateway. Replace the &lt;code&gt;gateway-ip&lt;/code&gt; with the value you obtained in the previous step.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -k -v &amp;#34;http://httpbin.tetrate.com/get&amp;#34; \
    --resolve &amp;#34;httpbin.tetrate.com:80:&amp;lt;gateway-ip&amp;gt;&amp;#34; \
    -s \
    -o /dev/null \
    -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For the first 5 requests you should see &amp;ldquo;200&amp;rdquo; on your screen. After that,
you should start seeing &amp;ldquo;429&amp;rdquo; instead.&lt;/p&gt;
&lt;p&gt;You can change the &lt;code&gt;user-agent&lt;/code&gt; header to another unique value to get a successful response.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -k -v -A &amp;#34;another-agent&amp;#34; \
    &amp;#34;http://httpbin.tetrate.com/get&amp;#34; \
    --resolve &amp;#34;httpbin.tetrate.com:80:&amp;lt;gateway-ip&amp;gt;&amp;#34; \
    -s \
    -o /dev/null \
    -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After 5 requests, you should start seeing &amp;ldquo;429&amp;rdquo; again, until you change the header again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Service to service rate limiting</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/service-to-service/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/howto/rate-limiting/service-to-service/</guid>
      <description>&lt;p&gt;TSB is capable of applying rate limits for both gateways and sidecars. In this document, we will enable rate limiting for sidecars to control quota for service to service traffic.&lt;/p&gt;
&lt;p&gt;Before you get started, make sure you: &lt;br /&gt;
✓ Familiarize yourself with &lt;a href=&#34;../../concepts/toc&#34;&gt;TSB concepts&lt;/a&gt; &lt;br /&gt;
✓ Install the TSB environment. You can use &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; for quick install&lt;br /&gt;
✓ Completed &lt;a href=&#34;../../quickstart&#34;&gt;TSB usage quickstart&lt;/a&gt;. This document assumes you already created Tenant and are familiar with Workspace and Config Groups. Also you need to configure tctl to your TSB environment.&lt;br/&gt;&lt;/p&gt;
&lt;h2 id=&#34;enable-rate-limiting-server&#34;&gt;Enable Rate Limiting Server&lt;/h2&gt;
&lt;p&gt;Read and follow the instructions on &lt;a href=&#34;./internal_rate_limiting&#34;&gt;Enabling the Rate Limiting Server document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;:::note Demo Installation
If you are using the &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; installation, you already have rate limit service running and ready to use, and can skip this section.
:::note&lt;/p&gt;
&lt;p&gt;If you intend to use the same rate limiting server in a multi-cluster setup, all clusters must point to the same &lt;a href=&#34;../../refs/install/controlplane/v1alpha1/spec#ratelimitserver&#34;&gt;Redis backend and domain&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploy-httpbin-service&#34;&gt;Deploy &lt;code&gt;httpbin&lt;/code&gt; Service&lt;/h2&gt;
&lt;p&gt;Follow &lt;a href=&#34;../../reference/samples/httpbin&#34;&gt;the instructions in this document&lt;/a&gt; to create the &lt;code&gt;httpbin&lt;/code&gt; service. You can skip the sections &amp;ldquo;Expose the &lt;code&gt;httpbin&lt;/code&gt; Service&amp;rdquo;, &amp;ldquo;Create Certificates&amp;rdquo;, and &amp;ldquo;Onboard &lt;code&gt;httpbin&lt;/code&gt; Application&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;create-trafficsetting&#34;&gt;Create TrafficSetting&lt;/h2&gt;
&lt;p&gt;Create a TrafficSetting object in a file named &lt;code&gt;service-to-service-rate-limiting-traffic-setting.yaml&lt;/code&gt;. In this example the rate limit is set to maximum of 4 requests per minute per path. Replace the &lt;code&gt;organization&lt;/code&gt; and &lt;code&gt;tenant&lt;/code&gt; with appropriate values&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;traffic.tsb.tetrate.io/v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TrafficSetting&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;organization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;organization&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;tenant&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin-traffic&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin-traffic-settings-ratelimit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rateLimiting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;dimensions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:path&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;requestsPerUnit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;MINUTE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Apply the manifest using &lt;code&gt;tctl&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl apply -f service-to-service-rate-limiting-traffic-setting.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;deploy-sleep-service&#34;&gt;Deploy &lt;code&gt;sleep&lt;/code&gt; Service&lt;/h2&gt;
&lt;p&gt;Since you will be configuring service-to-service rate limiting, another service to act as a client to your &lt;code&gt;httpbin&lt;/code&gt; service is necessary.&lt;/p&gt;
&lt;p&gt;Follow &lt;a href=&#34;../../reference/samples/sleep_service&#34;&gt;the instructions in this document&lt;/a&gt; to create the &lt;code&gt;sleep&lt;/code&gt; service. You can skip the section on &amp;ldquo;Create a &lt;code&gt;sleep&lt;/code&gt; Workspace&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;You can test the rate limiting by sending HTTP requests from the &lt;code&gt;sleep&lt;/code&gt; service to &lt;code&gt;httpbin&lt;/code&gt; service, and observe the rate limiting take effect after a certain number of requests.&lt;/p&gt;
&lt;p&gt;To send a request from sleep service, you need to identify the pod within your sleep service.
Execute the following command to find out the pod name:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get pod -n sleep -l app=sleep -o jsonpath={.items..metadata.name}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then send a request from this pod to the &lt;code&gt;httpbin&lt;/code&gt; service, which should be reachable at &lt;code&gt;http://httpbin.httpbin:8000&lt;/code&gt;. Make sure to replace the value for &lt;code&gt;sleep-pod&lt;/code&gt; with an appropriate value:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl exec &amp;lt;sleep-pod&amp;gt; -n sleep -c sleep -- \
  curl http://httpbin.httpbin:8000/get \
    -s \
    -o /dev/null \
    -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Repeat executing the above command more than 4 times. After 4 requests, the response code that you see should change from 200 to 429.&lt;/p&gt;
&lt;p&gt;Since the rate limiting rule was based on the request path, accessing another path on the &lt;code&gt;httpbin&lt;/code&gt;, you should see a 200 response again:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl exec &amp;lt;sleep-pod&amp;gt; -n sleep -c sleep -- \
  curl http://httpbin.httpbin:8000/headers \
    -s \
    -o /dev/null \
    -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Similar to the previous example, repeating the above command more than 4 times should result in the rate limiting activating, and you should start getting a 429 instead of 200.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rate limiting in Tier-1 Gateway</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/tier1-gateway/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/howto/rate-limiting/tier1-gateway/</guid>
      <description>&lt;p&gt;In this document, we will enable a rate limit in the Tier-1 Gateway and show how to rate limit based on the client IP address.&lt;/p&gt;
&lt;p&gt;Before you get started, make sure you: &lt;br /&gt;
✓ Familiarize yourself with &lt;a href=&#34;../../concepts/toc&#34;&gt;TSB concepts&lt;/a&gt; &lt;br/&gt;
✓ Install the TSB environment. You can use &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; for quick install&lt;br /&gt;
✓ Completed &lt;a href=&#34;../../quickstart&#34;&gt;TSB usage quickstart&lt;/a&gt;. This document assumes you already created Tenant and are familiar with Workspace and Config Groups. Also you need to configure tctl to your TSB environment.&lt;br/&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploy-tier-1-gateway-and-ingress-gateway&#34;&gt;Deploy Tier-1 Gateway and Ingress Gateway&lt;/h2&gt;
&lt;p&gt;Before applying any rate limits, please read &lt;a href=&#34;../gateway/multi-cluster-traffic-shifting&#34;&gt;Multi-cluster traffic shifting with Tier-1 Gateway&lt;/a&gt; and familiarize yourself with setting up multi-cluster setup using Tier-1 Gateways.&lt;/p&gt;
&lt;p&gt;The rest of the documentation assumes that you have completed the above.&lt;/p&gt;
&lt;h2 id=&#34;enable-rate-limiting-server&#34;&gt;Enable Rate Limiting Server&lt;/h2&gt;
&lt;p&gt;Read and follow the instructions on &lt;a href=&#34;./internal_rate_limiting&#34;&gt;Enabling the Rate Limiting Server document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;:::note Demo Installation
If you are using the &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; installation, you already have rate limit service running and ready to use, and can skip this section.
:::note&lt;/p&gt;
&lt;h2 id=&#34;deploy-httpbin-service&#34;&gt;Deploy &lt;code&gt;httpbin&lt;/code&gt; Service&lt;/h2&gt;
&lt;p&gt;Follow &lt;a href=&#34;../../reference/samples/httpbin&#34;&gt;the instructions in this document&lt;/a&gt; to create the &lt;code&gt;httpbin&lt;/code&gt; service, and make sure the service is exposed at &lt;code&gt;httpbin.tetrate.com&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-tier-1-gateway&#34;&gt;Create Tier-1 Gateway&lt;/h2&gt;
&lt;p&gt;Create a file called &lt;code&gt;rate-limiting-tier1-config.yaml&lt;/code&gt; which edits the existing Tier-1 Gateway to also rate limit every unique client(source) IP Address at 10 requests/minute. Replace the cluster name with the cluster where the &lt;code&gt;httpbin&lt;/code&gt; service is deployed to.&lt;/p&gt;
&lt;p&gt;Details for other rate limiting options can be found in &lt;a href=&#34;../../refs/tsb/gateway/v2/ingress_gateway#ratelimitdimension-1&#34;&gt;this document&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;gateway.tsb.tetrate.io/v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Tier1Gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tier1-gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tier1-gateway-group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tier1-workspace&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tenant&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tetrate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;organization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tetrate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workloadSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tier1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tier1-gateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;externalServers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin.tetrate.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rateLimiting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;settings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;dimensions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;remoteAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;requestsPerUnit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;MINUTE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;SIMPLE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# make sure to use correct secret name that you created previously&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;secretName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;httpbin-certs&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;cluster&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configure the Tier-1 gateway using tctl:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl apply -f rate-limiting-tier1-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;You can test the rate limiting by sending HTTP requests from an external machine or your local environment to the &lt;code&gt;httpbin&lt;/code&gt; service, and observe the rate limiting take effect after a certain number of requests.&lt;/p&gt;
&lt;p&gt;In the following example, since you do not control &lt;code&gt;httpbin.tetrate.com&lt;/code&gt;, you will have to trick &lt;code&gt;curl&lt;/code&gt; into thinking that &lt;code&gt;httpbin.tetrate.com&lt;/code&gt; resolves to the IP address of the Tier-1 Gateway.&lt;/p&gt;
&lt;p&gt;Obtain the IP address of the Tier-1 Gateway that you previously created using the following command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -n tier1 get service tier1-gateway -o jsonpath=&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then execute the following command to send HTTP requests to the &lt;code&gt;httpbin&lt;/code&gt; service through the Tier-1 Gateway. Replace the &lt;code&gt;gateway-ip&lt;/code&gt; with the value you obtained in the previous step. You also need to pass the CA cert, which you should have created in the step to deploy the &lt;code&gt;httpbin&lt;/code&gt; service.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -I &amp;#34;https://httpbin.tetrate.com/get&amp;#34; \
  --resolve &amp;#34;httpbin.tetrate.com:443:&amp;lt;gateway-ip&amp;gt;&amp;#34; \
  --cacert httpbin.crt \
  -s \
  -o /dev/null \
  -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Repeat executing the above command more than 10 times in a minute. After 10 requests, the response code that you see should change from 200 to 429.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting Up an External Rate Limiting Server</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/external-rate-limiting/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/howto/rate-limiting/external-rate-limiting/</guid>
      <description>&lt;p&gt;TSB supports using external rate limiting servers. This document will describe how to configure &lt;a href=&#34;https://github.com/envoyproxy/ratelimit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy rate limit service&lt;/a&gt; and use it as external rate limiting server in TSB&amp;rsquo;s Ingress Gateway through an example.&lt;/p&gt;
&lt;p&gt;Before you get started, make sure you: &lt;br /&gt;
✓ Familiarize yourself with &lt;a href=&#34;../../concepts/toc&#34;&gt;TSB concepts&lt;/a&gt; &lt;br /&gt;
✓ Install the TSB environment. You can use &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; for quick install&lt;br /&gt;
✓ Completed &lt;a href=&#34;../../quickstart&#34;&gt;TSB usage quickstart&lt;/a&gt;. This document assumes you already created Tenant and are familiar with Workspace and Config Groups. Also you need to configure tctl to your TSB environment.&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;:::note
While this document will only describe how to apply rate limiting using an external server for Ingress Gateway, you can do the same for Tier-1 Gateways and service-to-service (through TSB Traffic Settings) using a similar configuration.
:::&lt;/p&gt;
&lt;h2 id=&#34;create-the-namespace&#34;&gt;Create the Namespace&lt;/h2&gt;
&lt;p&gt;In this example we will install the external rate limit service in &lt;code&gt;ext-ratelimit&lt;/code&gt; namespace.
Create the namespace if not already present in the target cluster by running the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl create namespace ext-ratelimit
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;configure-rate-limit-service&#34;&gt;Configure Rate Limit Service&lt;/h3&gt;
&lt;p&gt;:::note
Please read the &lt;a href=&#34;https://github.com/envoyproxy/ratelimit#configuration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy rate limit documentation&lt;/a&gt; to learn the details about the concept of domains and descriptors.
:::&lt;/p&gt;
&lt;p&gt;Create a file name &lt;a href=&#34;../../assets/howto/rate_limiting/ext-ratelimit-config.yaml&#34;&gt;&lt;code&gt;ext-ratelimit-config.yaml&lt;/code&gt;&lt;/a&gt; with the following content. This configuration specifies that requests to every unique request path should be limited to 4 requests/minute.&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {extRateLimitConfigYAML}
&lt;/CodeBlock&gt;
&lt;p&gt;Then create a &lt;code&gt;ConfigMap&lt;/code&gt; using the file you created:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -n ext-ratelimit apply -f ext-ratelimit-config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;deploy-rate-limit-server-and-redis&#34;&gt;Deploy Rate Limit Server and Redis&lt;/h3&gt;
&lt;p&gt;Deploy Redis and &lt;code&gt;envoyproxy/ratelimit&lt;/code&gt;. Create a file called &lt;a href=&#34;../../assets/howto/rate_limiting/redis-ratelimit.yaml&#34;&gt;&lt;code&gt;redis-ratelimit.yaml&lt;/code&gt;&lt;/a&gt; with the following contents:&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {redisRateLimitYAML}
&lt;/CodeBlock&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -f redis-ratelimit.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If everything is successful, you should have a working rate limit server.
Make sure that Redis and the rate limit server are running by executing the following command:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get pods -n ext-ratelimit
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You should see an output resembling the following:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME                        READY   STATUS    RESTARTS   AGE
ratelimit-d5c5b64ff-m87dt   1/1     Running   0          14s
redis-7d757c948f-42sxg      1/1     Running   0          14s
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;configure-ingress-gateway&#34;&gt;Configure Ingress Gateway&lt;/h2&gt;
&lt;p&gt;This example assumes that you are applying rate limit to the &lt;a href=&#34;../../reference/samples/httpbin&#34;&gt;&lt;code&gt;httpbin&lt;/code&gt;&lt;/a&gt; workload. If you have not already done so, deploy the &lt;code&gt;httpbin&lt;/code&gt; service, create &lt;code&gt;httpbin&lt;/code&gt; Workspace and Config Groups and expose the service through an Ingress Gateway.&lt;/p&gt;
&lt;p&gt;The following sample sets rate limiting on requests in the &lt;code&gt;httpbin-ratelimit&lt;/code&gt; domain. The request path is stored in &lt;code&gt;descriptorKey&lt;/code&gt; named &lt;code&gt;request-path&lt;/code&gt;, which is then used by the rate limit server.&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {extRateLimitIngressGatewayYAML}
&lt;/CodeBlock&gt;
&lt;p&gt;Save this to a file named &lt;a href=&#34;../../assets/howto/rate_limiting/ext-ratelimit-ingress-gateway.yaml&#34;&gt;&lt;code&gt;ext-ratelimit-ingress-gateway.yaml&lt;/code&gt;&lt;/a&gt;, and apply it using &lt;code&gt;tctl&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl apply -f ext-ratelimit-ingress-gateway.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;
&lt;p&gt;You can test the rate limiting by sending HTTP requests from an external machine or your local environment to the httpbin Ingress Gateway, and observe the rate limiting take effect after a certain number of requests.&lt;/p&gt;
&lt;p&gt;In the following example, since you do not control httpbin.tetrate.com, you will have to trick curl into thinking that httpbin.tetrate.com resolves to the IP address of the Ingress Gateway.&lt;/p&gt;
&lt;p&gt;Obtain the IP address of the Ingress Gateway that you previously created using the following command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl -n httpbin get service httpbin-ingress-gateway \
  -o jsonpath=&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then execute the following command to send HTTP requests to the httpbin service through the Ingress Gateway. Replace the gateway-ip with the value you obtained in the previous step.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -k &amp;#34;http://httpbin.tetrate.com/get&amp;#34; \
    --resolve &amp;#34;httpbin.tetrate.com:80:&amp;lt;gateway-ip&amp;gt;&amp;#34; \
    -s \
    -o /dev/null \
    -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For the first 4 requests you should see &amp;ldquo;200&amp;rdquo; on your screen. After that, you should start seeing &amp;ldquo;429&amp;rdquo; instead.&lt;/p&gt;
&lt;p&gt;You can change the request path to another unique value to get a successful response.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;curl -k &amp;#34;http://httpbin.tetrate.com/headers&amp;#34; \
    --resolve &amp;#34;httpbin.tetrate.com:80:&amp;lt;gateway-ip&amp;gt;&amp;#34; \
    -s \
    -o /dev/null \
    -w &amp;#34;%{http_code}\n&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After 4 requests, you should start seeing &amp;ldquo;429&amp;rdquo; again, until you change the request path.&lt;/p&gt;
&lt;h2 id=&#34;considerations-for-using-rate-limiting-server-over-multiple-clusters&#34;&gt;Considerations for Using Rate Limiting Server over Multiple Clusters&lt;/h2&gt;
&lt;p&gt;In case you would like to share the same rate limiting rules against multiple cluster, there are two possible choices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deploy a single rate limit service in one cluster, and make it reachable from all other clusters that share the rules, or&lt;/li&gt;
&lt;li&gt;Deploy rate limit services in each cluster, but make them all use the same Redis backend.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the second scenario, you will have to make Redis accessible from all clusters. Each rate limit server should also use the same domain value.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Rate Limiting with TLS Verification</title>
      <link>https://lib.jimmysong.io/tsb/howto/rate-limiting/tls-validation/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/howto/rate-limiting/tls-validation/</guid>
      <description>&lt;p&gt;Once you have configured &lt;a href=&#34;./external_rate_limiting&#34;&gt;an external rate limit server&lt;/a&gt;, you may want to secure the traffic to the rate limit service. TSB supports specifying &lt;a href=&#34;../../refs/tsb/auth/v2/auth#clienttlssettings&#34;&gt;TLS or mTLS&lt;/a&gt; parameters for securing communication to external rate limit servers. This document will show you how to configure TLS validation for an external rate limit server by adding CA certificate to the rate limiting configuration.&lt;/p&gt;
&lt;p&gt;Before you get started, make sure you: &lt;br /&gt;
✓ Familiarize yourself with &lt;a href=&#34;../../concepts/toc&#34;&gt;TSB concepts&lt;/a&gt; &lt;br /&gt;
✓ Install the TSB environment. You can use &lt;a href=&#34;../../setup/self_managed/demo-installation&#34;&gt;TSB demo&lt;/a&gt; for quick install&lt;br /&gt;
✓ Completed &lt;a href=&#34;../../quickstart&#34;&gt;TSB usage quickstart&lt;/a&gt;. This document assumes you already created Tenant and are familiar with Workspace and Config Groups. Also you need to configure tctl to your TSB environment.&lt;br/&gt;
✓ Competed &lt;a href=&#34;./external_rate_limiting&#34;&gt;Setting Up an External Rate Limiting Server&lt;/a&gt;. This document will continue what you have done in Setting Up an External Rate Limiting Server. You will work in &lt;code&gt;ext-ratelimit&lt;/code&gt; namespace, and should already have an Ingress Gateway with external rate limit properly configured&lt;br/&gt;&lt;/p&gt;
&lt;h2 id=&#34;tls-certificate&#34;&gt;TLS certificate&lt;/h2&gt;
&lt;p&gt;To enable TLS for Ingress Gateway to rate limit service traffic, you must have a TLS certificate. This document assumes you already have TLS certificates which usually include server certificate and private key along with the CA as root certificate that will be used by the client.&lt;/p&gt;
&lt;p&gt;This document assumes the presence of the following files. If you are using different file names, please change them accordingly:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ratelimit.crt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The server certificate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ratelimit.key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The certificate private key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ratelimit-ca.crt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The CA certificate&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;:::note self signed certificate
For the purpose of example, you may opt to use a self-signed certificate.
You may generate a self-signed certificate using &lt;a href=&#34;../../quickstart/ingress_gateway#certificate-for-gateway&#34;&gt;the script show here&lt;/a&gt;, but make sure to adjust the input parameters accordingly.
:::note&lt;/p&gt;
&lt;p&gt;Once you have the certificate files, create Kubernetes secret using server certificate and private key.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl create secret tls -n ext-ratelimit ratelimit-certs \
  --cert=ratelimit.crt \
  --key=ratelimit.key
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;deploy-rate-limit-service-with-tls-certificate&#34;&gt;Deploy Rate Limit Service with TLS certificate&lt;/h2&gt;
&lt;p&gt;In this example you will use the Envoy rate limit service. The Envoy proxy sidecar acts as pass through proxy that will validate and terminate TLS before sending the request to the rate limit service.&lt;/p&gt;
&lt;p&gt;Create a configuration file for Envoy with the following content as &lt;a href=&#34;../../assets/howto/rate_limiting/proxy-config-tls.yaml&#34;&gt;&lt;code&gt;proxy-config-tls.yaml&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {proxyConfigTlsYAML}
&lt;/CodeBlock&gt;
&lt;p&gt;Execute the following to store the configuration in Kubernetes as a &lt;code&gt;ConfigMap&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl create configmap -n ext-ratelimit ratelimit-proxy \
  --from-file=proxy-config-tls.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will need to deploy the rate limit service with an Envoy sidecar to terminate TLS.
Create a file called &lt;a href=&#34;../../assets/howto/rate_limiting/ratelimit-tls.yaml&#34;&gt;&lt;code&gt;ratelimit-tls.yaml&lt;/code&gt;&lt;/a&gt; with the following content.&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {ratelimitTlsYAML}
&lt;/CodeBlock&gt;
&lt;p&gt;Then apply this using &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f ratelimit-tls.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once you applied the new configuration, make sure that the &lt;code&gt;ratelimit-tls&lt;/code&gt; service is running properly.
Note that if you have followed the instructions from &lt;a href=&#34;./external_rate_limiting&#34;&gt;Setting Up an External Rate Limiting Server&lt;/a&gt;, you will also see &lt;code&gt;ratelimit&lt;/code&gt; and &lt;code&gt;redis&lt;/code&gt; services as well.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl get pods -n ext-ratelimit

NAME                             READY   STATUS    RESTARTS   AGE
ratelimit-d5c5b64ff-m87dt        1/1     Running   0          2h
ratelimit-tls-568c5cdc69-z82xf   2/2     Running   0          89s
redis-7d757c948f-42sxg           1/1     Running   0          2h
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;enable-tls-validation-for-rate-limit-server-in-ingress-gateway&#34;&gt;Enable TLS validation for rate limit server in Ingress Gateway&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;ratelimit-tls&lt;/code&gt; service can now terminate TLS, but the Ingress Gateway must also be configured to validate the TLS connections.&lt;/p&gt;
&lt;p&gt;First, create a &lt;code&gt;ConfigMap&lt;/code&gt; named &lt;code&gt;ratelimit-ca&lt;/code&gt; to store the CA information from &lt;code&gt;ratelimit-ca.crt&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl create configmap -n httpbin ratelimit-ca \
  --from-file=ratelimit-ca.crt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then add the &lt;code&gt;ratelimit-ca&lt;/code&gt; &lt;code&gt;ConfigMap&lt;/code&gt; into the Ingress Gateway pod. To do this, you will need to edit &lt;a href=&#34;../../reference/samples/httpbin#expose-the-httpbin-service&#34;&gt;the &lt;code&gt;httpbin-ingress-gateway.yaml&lt;/code&gt; file&lt;/a&gt; and add an overlay that reads the &lt;code&gt;ConfigMap&lt;/code&gt; you have created in the previous steps, then mount the configuration in the ingress gateway deployment.&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {httpbinIngressGatewayTlsYAML}
&lt;/CodeBlock&gt;
&lt;p&gt;Apply with kubectl to update existing ingress gateway&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;kubectl apply -f httpbin-ingress-gateway.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, update &lt;a href=&#34;./external_rate_limiting#configure-ingress-gateway&#34;&gt;the Ingress Gateway configuration in &lt;code&gt;ext-ratelimit-ingress-gateway.yaml&lt;/code&gt;&lt;/a&gt; and enable TLS validation:&lt;/p&gt;
&lt;CodeBlock className=&#34;language-yaml&#34;&gt;
  {extRatelimitIngressGatewayTlsYAML}
&lt;/CodeBlock&gt;
&lt;p&gt;And apply with tctl&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-bash{promptUser:&#34; data-lang=&#34;bash{promptUser:&#34;&gt;tctl apply -f ext-ratelimit-ingress-gateway-tls.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;testing&#34;&gt;Testing&lt;/h2&gt;
&lt;p&gt;To verify that the setup is working, you can use the same testing steps as shown in &lt;a href=&#34;./external_rate_limiting#testing&#34;&gt;the Testing steps for &amp;ldquo;Setting Up an External Rate Limiting Server&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
