<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>知识库和 FAQ | 云原生资料库</title>
    <link>https://lib.jimmysong.io/tsb/knowledge-base/</link>
      <atom:link href="https://lib.jimmysong.io/tsb/knowledge-base/index.xml" rel="self" type="application/rss+xml" />
    <description>知识库和 FAQ</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 09 Aug 2023 12:00:00 +0800</lastBuildDate>
    <image>
      <url>https://lib.jimmysong.io/media/sharing.png</url>
      <title>知识库和 FAQ</title>
      <link>https://lib.jimmysong.io/tsb/knowledge-base/</link>
    </image>
    
    <item>
      <title>Service Mesh and GitOps</title>
      <link>https://lib.jimmysong.io/tsb/knowledge-base/gitops/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/knowledge-base/gitops/</guid>
      <description>&lt;p&gt;GitOps is a practice that uses Git repositories as a source of truth for application/system state. Changes to the state are performed through Pull Request (PR) and approval workflow and will be automatically applied to the system by a CD process. This is illustrated in the following image.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-overview.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;There are three core practices in GitOps:&lt;/p&gt;
&lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure-as-Code&lt;/h3&gt;
&lt;p&gt;This describes the practice of keeping all infrastructure and application configurations stored as code in Git.&lt;/p&gt;
&lt;h3 id=&#34;using-pull-requests-for-changes&#34;&gt;Using Pull Requests for Changes&lt;/h3&gt;
&lt;p&gt;Changes are proposed on a branch, and a PR is made to merge the changes into the main branch. Using PRs allows for collaboration between operations engineers for peer review along with the development teams, security teams, and other stakeholders.&lt;/p&gt;
&lt;h3 id=&#34;ci-continuous-integration-and-cd-continuous-deployment-automation&#34;&gt;CI (Continuous Integration) and CD (Continuous Deployment) Automation&lt;/h3&gt;
&lt;p&gt;In an ideal scenario, no manual changes are made to a GitOps-managed environment. Instead, CI and CD serve as a type of reconciliation loop. Each time a change is made, the automation tool compares the state of the environment to the source of truth defined in the Git repository.&lt;/p&gt;
&lt;h2 id=&#34;gitops-benefits&#34;&gt;GitOps Benefits&lt;/h2&gt;
&lt;p&gt;There are several benefits that you can get by using GitOps practice&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Revisions with history&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since every change is stored in Git, it is easy to discover what changes have been made. In most cases, the change can be traced back to a specific incident or change request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ownership&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since the changes can be looked up in the Git history, it is possible to find out who owns the relevant files (in this case mostly the manifest/YAML files). This also means that owners of the resulting contains can be deduced and used during operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Immutability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Any build or deployment is reproducible and immutable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Deterministic&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Even if there are manual changes to the containers/clusters, the operator responsible for applying the configuration is watching and will fix it based on the information stored in Git.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;separating-build-ci-and-deployment-cd&#34;&gt;Separating Build (CI) and Deployment (CD)&lt;/h2&gt;
&lt;p&gt;While you can have a single pipeline for both application code and configuration, you might want to separate both for following reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Separation of Concerns&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Application &lt;strong&gt;developers&lt;/strong&gt; commit code and create releases, which can be done in the CI. Application &lt;strong&gt;operators&lt;/strong&gt; deploy artifacts to the clusters, which can be done in the CD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Multiple Deployments&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Single application code can be deployed to many environments from the CD, without having to go through the CI over and over.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Repeated Deployments&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Recreating a deployment should not require a new build. Artifacts can be managed in CD without having to go through the CI over and over.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-ci-cd.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;You can connect CI with CD by using a reconciliation loop that will check for new artifact releases and create PR to the application configuration repository to update the application image tag.&lt;/p&gt;
&lt;h2 id=&#34;push-and-pull&#34;&gt;Push and Pull&lt;/h2&gt;
&lt;p&gt;There are two approaches for GitOps: &lt;strong&gt;Push&lt;/strong&gt; and &lt;strong&gt;Pull&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;push&lt;/strong&gt; approach, once a commit has been made on a git repository or a CI pipeline was executed successfully,
an external system (mostly CD pipelines) is triggered to deploy the artifacts to the cluster. In this approach, the pipeline system requires the relevant permissions to access to the cluster.&lt;/p&gt;
&lt;p&gt;Example of push solutions include: &lt;a href=&#34;https://github.com/features/actions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github actions&lt;/a&gt;, &lt;a href=&#34;https://azure.microsoft.com/en-us/services/devops/pipelines/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure Pipelines&lt;/a&gt;, &lt;a href=&#34;https://docs.gitlab.com/ee/ci/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitlabCI&lt;/a&gt; and &lt;a href=&#34;https://circleci.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CircleCI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-push.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;pull&lt;/strong&gt; approach, an agent inside the destination cluster regularly scans the associated git repositories. If a change is detected, the cluster state will be updated from inside the cluster. As seen in the following image, the CD components are moved to side the clusters.&lt;/p&gt;
&lt;p&gt;Examples of pull solutions include: &lt;a href=&#34;https://circleci.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Argo CD&lt;/a&gt; and &lt;a href=&#34;https://fluxcd.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-pull.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;There are pros and cons for both approaches. Please check these articles if you are interested in reading more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://thenewstack.io/push-vs-pull-in-gitops-is-there-really-a-difference/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Push vs. Pull in GitOps: Is There Really a Difference?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://faun.pub/gitops-comparison-pull-and-push-88fcbaadfe45&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitOps — Comparison Pull and Push&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There will never be a single solution that will fit all possible use cases, as each scenario varies greatly. As always, weighing the needs of your team or organization with the pros and cons of each approach will help you decide on which approach to use (or even use both of them!).&lt;/p&gt;
&lt;h2 id=&#34;cluster-provisioning-pipeline&#34;&gt;Cluster Provisioning Pipeline&lt;/h2&gt;
&lt;p&gt;With Kubernetes, you also need to plan on how to provision a cluster using the GitOps pipeline.&lt;/p&gt;
&lt;p&gt;This involves creating clusters, installing common infrastructure components into clusters: logging, monitoring, secrets, certificates, access controls, service mesh components like Tetrate Service Bridge (TSB) and others.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-cluster-pipeline.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;the-challenge-of-gitops&#34;&gt;The Challenge of GitOps&lt;/h2&gt;
&lt;p&gt;Like any technology, the path to successful adoption is about managing expectations and being fully aware of a technology&amp;rsquo;s strengths and weaknesses. It is important to understand them to accurately determine which solution is right for your culture, environment, and/or process, if at all.&lt;/p&gt;
&lt;p&gt;The following is a list of some of challenges with adopting GitOps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitOps breaks down with auto-scaling and dynamic resources.&lt;/strong&gt; Since GitOps expects state to be stored in Git, dynamic aspects such as auto-scaling can cause problems when attempting to sync the state. Tools like ArgoCD have &lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;custom diffs&lt;/a&gt; to handle this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitOps does not address promotion of releases between environments.&lt;/strong&gt; Configurations for each environment will probably be stored in different Git branches. Templating solutions such as &lt;a href=&#34;https://helm.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helm&lt;/a&gt; and &lt;a href=&#34;https://kustomize.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kustomize&lt;/a&gt; are usually used to provide a base template that can be then customized on each environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Auditing is problematic despite having all information in Git.&lt;/strong&gt; While Git has the change history, it is hard to answer certain questions without additional tools to analyze data in multiple Git repositories. For example, What percentage of deployments to environment X were successful and what had to be rolled back? How many features exist in environment X but are not in environment Y yet?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Large scale deployment with large number of clusters and services will pose a challenge.&lt;/strong&gt; Operations that affect a large number of resources such as adding a new company-wide label on all deployment may be problematic, as you may be dealing with multiple services whose configurations are stored in multiple different Git repositories.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lack of standard practice.&lt;/strong&gt; A good example where there still isn&amp;rsquo;t a single accepted practice on how configuration should be managed is secrets. If secrets are stored in Git, they need to be encrypted, and thus will have to have their own workflow to process them during a deployment. If they are not stored in Git, then you no longer will be able to store your cluster&amp;rsquo;s state in Git. In practice organizations tend to use external secret management tools such as Vault&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lack of visibility and runtime validation.&lt;/strong&gt; Git does not provide visibility into what has happened during runtime. For example, if a single update causes other dependent services, there&amp;rsquo;s no easy way to find it out.&lt;/p&gt;
&lt;h2 id=&#34;gitops-for-service-mesh&#34;&gt;GitOps for Service Mesh&lt;/h2&gt;
&lt;p&gt;A service mesh decouples operations from development by addressing networking, security, and observability issues across applications with an independent networking layer, or a &amp;ldquo;mesh&amp;rdquo; that controls communications between services. The mesh is formed by connected sidecars that act as proxy to services participating in the mesh. Service mesh provides capabilities to control and secure application networking without any changes to the application itself.&lt;/p&gt;
&lt;p&gt;Service mesh introduces control plane components to manage proxies and distribute runtime configurations to proxies. You will need to deploy and manage mesh control planes lifecycle in your GitOps pipeline. This could be added to the existing pipeline that you already have to provision a cluster or on a different pipeline.&lt;/p&gt;
&lt;p&gt;Since service mesh runs outside of your application, you will have another configuration that you need to add to your GitOps pipeline in addition to application deployment configuration. With &lt;a href=&#34;https://istio.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt;, this would be Istio resources, e.g. &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/gateway/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;Gateway&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/virtual-service/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;VirtualService&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/destination-rule/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;DestinationRule&lt;/code&gt;&lt;/a&gt; and others.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-service-mesh.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;gitops-for-tsb&#34;&gt;GitOps for TSB&lt;/h2&gt;
&lt;p&gt;TSB adds a Management Plane (MP) on top of a multi-cluster control plane and provides a unified way to connect and secure services across an entire mesh-managed environment. You will need to keep note of several factors when you incorporate TSB in your GitOps pipeline.&lt;/p&gt;
&lt;h3 id=&#34;tsb-api-structure&#34;&gt;TSB API Structure&lt;/h3&gt;
&lt;p&gt;TSB has two API&amp;rsquo;s: installation and configuration. Installation API is usually used in provisioning both Management Plane and Control Plane clusters. Installation API are Kubernetes YAML files and can be added to cluster provisioning pipeline.&lt;/p&gt;
&lt;p&gt;To configure application mesh behavior with TSB, you can do it in two ways:&lt;/p&gt;
&lt;h4 id=&#34;tsb-based&#34;&gt;TSB-based&lt;/h4&gt;
&lt;p&gt;You will need to use TSB API or use TSB CLI (&lt;code&gt;tctl&lt;/code&gt;) to apply TSB configurations. TSB configurations must be applied to the TSB Management Plane, and not directly into clusters. MP will distribute configurations to the Kubernetes clusters based on the specified &lt;code&gt;namespaceSelector&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../assets/knowledge_base/gitops-tsb.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;And since TSB requires application networking configuration to be applied to the TSB management plane, you will need to add &lt;code&gt;tctl&lt;/code&gt; to your CD pipeline.&lt;/p&gt;
&lt;h4 id=&#34;kubernetes-based&#34;&gt;Kubernetes-based&lt;/h4&gt;
&lt;p&gt;It requires the application clusters to have &lt;a href=&#34;../operations/features/configure_gitops&#34;&gt;GitOps enabled&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once that&amp;rsquo;s done, you can add the TSB Kubernetes YAML files to the provisioning pipeline of each cluster.&lt;/p&gt;
&lt;p&gt;You can read more about &lt;a href=&#34;../howto/gitops&#34;&gt;how to do it in the GitOps howtos&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;rollback-options&#34;&gt;Rollback Options&lt;/h3&gt;
&lt;p&gt;Different systems and applications follow different rollback methodologies based on their dependencies.&lt;/p&gt;
&lt;p&gt;For TSB, and all onboarded clusters, the source of configurations is stored within TSB.
And because TSB configuration formats are (to a degree) tied to the specific version of TSB used, it is important to make sure the deployed TSB version, the configurations in TSB, and the configurations stored in Git are kept in sync. This is especially true when you attempt perform a rollback.&lt;/p&gt;
&lt;p&gt;You will need to investigate what specific considerations you will need to take into account depending on your rollback scenario, which is outside of the scope of this document as they vary greatly from environment to environment. Examples may include rolling back TSB Configurations for an application or a set of applications in tandem with the Git config changes, rollback related to a particular Control Plane version or rollback of TSB Management plane, etc.&lt;/p&gt;
&lt;h3 id=&#34;disaster-recovery-setup&#34;&gt;Disaster Recovery Setup&lt;/h3&gt;
&lt;p&gt;Enterprises could have a mirrored environment set up for Disaster Recovery (DR) including a TSB DR. Kubernetes manifests and TSB configurations are applied to the DR clusters in sync with Primary clusters.&lt;/p&gt;
&lt;p&gt;Another scenario is to have a single TSB manage both Primary and DR user clusters. In this case a duplicate set of configurations identical to the primary except for the resource names, cluster and namespace names can be created and applied to TSB.&lt;/p&gt;
&lt;h2 id=&#34;journey-into-gitops&#34;&gt;Journey into GitOps&lt;/h2&gt;
&lt;p&gt;For journeys into GitOps, organizations can start evaluating existing solutions and validate each solution against organization objectives while keeping in mind what the limitations and challenges with current GitOps solutions are.&lt;/p&gt;
&lt;p&gt;Templating will play an important role in abstracting and scaling GitOps for large clusters and services. You will need to experiment and look at what feels right for your organization.&lt;/p&gt;
&lt;p&gt;As with any changes that you want to introduce to your organization, start small with single application team and build success stories that can motivate others to start adopting GitOps. GitOps adoption will require the stakeholders&amp;rsquo; buy-in. They need to see that GitOps will help them solve their problems and make their work easier and effective.&lt;/p&gt;
&lt;p&gt;GitOps is a relatively new practice and it&amp;rsquo;s still maturing. As this technology grows, open-source communities and vendors will work to solve some of its limitations. If you are interested in exploring this topic further, you can check GitOps Working Group from CNCF.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TSB 常见问题解答</title>
      <link>https://lib.jimmysong.io/tsb/knowledge-base/faq/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/tsb/knowledge-base/faq/</guid>
      <description>&lt;h2 id=&#34;如何确定-envoy-是否正常&#34;&gt;如何确定 Envoy 是否正常？&lt;/h2&gt;
&lt;p&gt;确定 Envoy 是否正常的最佳方法是检查其健康和就绪端点（&lt;code&gt;healthz&lt;/code&gt;）。要检查已加入的集群中应用程序的 Envoy 的 &lt;code&gt;healthz&lt;/code&gt; 端点，你需要直接连接到应用程序的旁路 Envoy 边车。&lt;/p&gt;
&lt;p&gt;假设你在集群的 &lt;code&gt;bookinfo&lt;/code&gt; 命名空间中有一个名为 &lt;code&gt;details-v1-57f8794694-hc7gd&lt;/code&gt; 的 Pod，该 Pod 托管你的应用程序。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;kubectl port-forward&lt;/code&gt; 建立本地机器到 Envoy 边车上的端口 &lt;code&gt;15021&lt;/code&gt; 的端口转发：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl port-forward -n bookinfo details-v1-57f8794694-hc7gd 15021:15021
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一旦上述命令成功执行，你现在应该能够将你喜爱的工具指向 URL &lt;code&gt;http://localhost:15021/healthz/ready&lt;/code&gt; 并直接访问 Envoy 的 &lt;code&gt;healthz&lt;/code&gt; 端点。请避免使用浏览器进行此操作，因为如果正确配置并运行，则 Envoy 代理将返回一个带有空主体的 &lt;code&gt;200 OK&lt;/code&gt; 响应。&lt;/p&gt;
&lt;p&gt;例如，你可以使用 &lt;code&gt;curl&lt;/code&gt; 以详细模式执行如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -v http://localhost:15021/healthz/ready
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这应该会产生类似以下的输出。如果响应状态为 &lt;code&gt;200 OK&lt;/code&gt;，则 Envoy 正常工作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -v http://localhost:15021/healthz/ready
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;*   Trying 127.0.0.1:15021...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* TCP_NODELAY &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* Connected to localhost &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;127.0.0.1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; port &lt;span class=&#34;m&#34;&gt;15021&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#0)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; GET /healthz/ready HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; Host: localhost:15021
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; User-Agent: curl/7.68.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; Accept: */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* Mark bundle as not supporting multiuse
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt; HTTP/1.1 &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt; OK
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt; date: Fri, &lt;span class=&#34;m&#34;&gt;02&lt;/span&gt; Jul &lt;span class=&#34;m&#34;&gt;2021&lt;/span&gt; 13:32:05 GMT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt; content-length: &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt; x-envoy-upstream-service-time: &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt; server: envoy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;* Connection &lt;span class=&#34;c1&#34;&gt;#0 to host localhost left intact&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tctl-连接到集群失败&#34;&gt;&lt;code&gt;tctl&lt;/code&gt; 连接到集群失败&lt;/h2&gt;
&lt;p&gt;请检查你的 &lt;code&gt;tctl&lt;/code&gt; 配置文件中是否包含与集群相关的正确组织和租户信息。&lt;/p&gt;
&lt;p&gt;首先，通过执行以下命令获取当前活动配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tctl config profiles list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你应该会看到类似以下的输出。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  CURRENT  NAME     CLUSTER  ACCOUNT
           default  default  admin-user
  *        gke-tsb  gke-tsb  gke-user
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;带有星号（&lt;code&gt;*&lt;/code&gt;）的条目是当前活动配置文件。要配置当前配置文件 &lt;code&gt;gke-tsb&lt;/code&gt;，使 &lt;code&gt;gke-user&lt;/code&gt; 使用组织名称 &lt;code&gt;organization-name&lt;/code&gt; 和租户名称 &lt;code&gt;tenant-name&lt;/code&gt; 连接到集群，请执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tctl config users &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;gke-user&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --org &amp;lt;organization-name&amp;gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --tenant &amp;lt;tenant-name&amp;gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --username &amp;lt;username&amp;gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  --password &amp;lt;password&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;组织名称和租户名称可以通过 Web 用户界面获取。&lt;/p&gt;
&lt;p&gt;此后，当你执行 &lt;code&gt;tctl&lt;/code&gt; 命令时，将会针对指定的组织和租户运行。对于需要身份验证的每个 &lt;code&gt;tctl&lt;/code&gt; 子命令，也可以通过显式指定 &lt;code&gt;--org&lt;/code&gt; 和 &lt;code&gt;--tenant&lt;/code&gt; 参数来完成相同的操作。&lt;/p&gt;
&lt;h2 id=&#34;是否可以在多个集群之间共享单个-tsb-实例&#34;&gt;是否可以在多个集群之间共享单个 TSB 实例？&lt;/h2&gt;
&lt;p&gt;是的。单个 TSB &lt;a href=&#34;../../concepts/terminology/#management-plane&#34;&gt;管理平面&lt;/a&gt; 能够管理大量集群。你需要将要关联到同一管理平面的每个集群都加入。此外，请参阅文档 &lt;a href=&#34;../../setup/resource_planning&#34;&gt;TSB 资源消耗和容量规划&lt;/a&gt; 以获取有关随着参与集群数量增加可能需要的资源量的详细信息。&lt;/p&gt;
&lt;p&gt;如果需要为每个集群配置不同的权限或团队，请使用 &lt;a href=&#34;../../concepts/terminology/#workspace&#34;&gt;工作区&lt;/a&gt; 和 &lt;a href=&#34;../../concepts/terminology/#group&#34;&gt;组&lt;/a&gt; 进行逻辑分区。&lt;/p&gt;
&lt;p&gt;请查看我们的安装指南，了解如何将集群加入 &lt;a href=&#34;../../setup/self_managed/onboarding-clusters&#34;&gt;TSB&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;使用自定义证书时出现-openssl_verify-失败-错误&#34;&gt;使用自定义证书时出现 &amp;ldquo;OPENSSL_VERIFY 失败&amp;rdquo; 错误。&lt;/h2&gt;
&lt;p&gt;当你使用&lt;a href=&#34;../../operations/vault/istiod-ca&#34;&gt;中间 CA&lt;/a&gt;或自己的证书时，客户端 Envoy 可能会出现 &amp;ldquo;OPENSSL_VERIFY 失败&amp;rdquo; 错误。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;OPENSSL_VERIFY 失败&amp;rdquo; 错误可能由多种原因引起。你应该采取的一般方法是获取证书并验证其内容。请注意，诊断证书本身不在本文档的范围之内，你将不得不自行准备进行此操作。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;istioctl&lt;/code&gt; 提供了用于比较工作负载之间的 CA 包的内置命令：&lt;code&gt;istioctl proxy-config rootca-compare pod/&amp;lt;pod-1&amp;gt;.&amp;lt;namespace-1&amp;gt; pod/&amp;lt;pod-2&amp;gt;.&amp;lt;namespace-2&amp;gt;&lt;/code&gt;。该命令自动化了下面的手动过程，并应该是在诊断 OPENSSL_VERIFY 错误时的首选选择。&lt;/p&gt;
&lt;h3 id=&#34;手动检查证书&#34;&gt;手动检查证书&lt;/h3&gt;
&lt;p&gt;要获取目标 Envoy 实例正在使用的证书，可以使用以下示例中的 &lt;code&gt;istioctl&lt;/code&gt;。将 &lt;code&gt;&amp;lt;server-pod-ID&amp;gt;&lt;/code&gt; 替换为你正在调试的 Envoy 实例的适当值：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istioctl proxy-config secret &amp;lt;server-pod-ID&amp;gt; -ojson &amp;gt; server-tls.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文件 &lt;code&gt;server-tls.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将包含 Istio 互联网 TLS 证书，我们可以从中提取单独的证书。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat server-tls.json &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  jq -r &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;.dynamicActiveSecrets&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;.secret.tlsCertificate.certificateChain.inlineBytes&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  base64 --decode &amp;gt; server.crt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在以下示例中，我们将分离出服务器证书和其余链以进行演示，并使用 &lt;code&gt;openssl verify&lt;/code&gt; 来检查证书。将以下 bash 脚本复制到名为 &lt;code&gt;check-chain.sh&lt;/code&gt; 的文件中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 用户提供的文件名。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;usercert&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 临时文件和清理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;tmpfirst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;mktemp&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;tmpchain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;mktemp&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; cleanup_tmpfiles &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpfirst&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpfirst&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpchain&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpchain&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;trap&lt;/span&gt; cleanup_tmpfiles EXIT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;trap&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;trap - EXIT; cleanup_tmpfiles; exit -1&amp;#39;&lt;/span&gt; INT PIPE TERM
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;outfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpfirst&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -r line
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; *-&lt;span class=&#34;s2&#34;&gt;&amp;#34;BEGIN CERTIFICATE&amp;#34;&lt;/span&gt;-* &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$count&lt;/span&gt; + 1&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;nv&#34;&gt;outfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpchain&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$line&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$outfile&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt; &amp;lt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$usercert&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl verify -CAfile &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpchain&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tmpfirst&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$?&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;OK&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后针对你在上一步中获得的文件运行它：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ bash check-chain.sh server.crt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果在执行上述脚本时验证失败，则证书未正确链接。例如，CA 证书主体可能与工作负载证书的发行者不匹配。&lt;/p&gt;
&lt;h2 id=&#34;istio-cni-如何与像-cilium-或-calico-这样的-kubernetes-cni-协同工作它会替代它们吗&#34;&gt;Istio CNI 如何与像 Cilium 或 Calico 这样的 Kubernetes CNI 协同工作？它会替代它们吗？&lt;/h2&gt;
&lt;p&gt;Istio 的 CNI 不会替代 Cilium 或 Calico 等 CNI 插件，但 Istio 的 CNI 会作为这些插件的附加组件与任何其他 Kubernetes CNI 协同工作（在 CNI 规范的术语中称为 &amp;ldquo;&lt;a href=&#34;https://github.com/containernetworking/cni/blob/master/SPEC#section-2-execution-protocol&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;链接插件&lt;/a&gt;&amp;quot;）。&lt;/p&gt;
&lt;p&gt;你的主要 CNI 插件将运行并构建你的 Pod 的 Kubernetes 网络，然后 Istio 的 CNI 将运行并重写网络规则以通过 Envoy 捕获流量。Istio 的 CNI 执行与 &lt;code&gt;istio-init&lt;/code&gt; 容器完全相同的代码来重写这些网络规则（请查看 &lt;a href=&#34;https://istio.io/latest/blog/2019/data-plane-setup/#traffic-flow-from-application-container-to-sidecar-proxy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 网站上的此博客&lt;/a&gt; 以深入了解流量拦截的工作原理）。&lt;/p&gt;
&lt;p&gt;来自 &lt;a href=&#34;https://istio.io/latest/docs/setup/additional-setup/cni/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方网站&lt;/a&gt; 的解释描述得很好：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;默认情况下，Istio 在部署到网格中的 Pod 中注入一个名为 &lt;code&gt;istio-init&lt;/code&gt; 的初始化容器。&lt;code&gt;istio-init&lt;/code&gt; 容器设置了将流量重定向到/从 Istio sidecar 代理的 Pod 网络流量。这需要部署到网格中的用户或服务帐户具有足够的 Kubernetes RBAC 权限以部署具有 &lt;code&gt;NET_ADMIN&lt;/code&gt; 和 &lt;code&gt;NET_RAW&lt;/code&gt; 能力的 &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;容器&lt;/a&gt;。要求 Istio 用户具备提升的 Kubernetes RBAC 权限对某些组织的安全合规性来说是有问题的。Istio CNI 插件是 &lt;code&gt;istio-init&lt;/code&gt; 容器的替代品，执行相同的网络功能，但无需 Istio 用户启用提升的 Kubernetes RBAC 权限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;如何在-tsb-中启用-istio-cni&#34;&gt;如何在 TSB 中启用 Istio CNI？&lt;/h2&gt;
&lt;p&gt;请查看我们的 &lt;a href=&#34;../../operations/features/istio_cni#enable-istio-cni-in-control-plane&#34;&gt;Istio CNI 管理指南&lt;/a&gt;，了解如何在 TSB 中配置 Istio CNI。&lt;/p&gt;
&lt;h2 id=&#34;如果更改我的-cni-插件我需要在-tsb-或-istio-中进行哪些操作&#34;&gt;如果更改我的 CNI 插件，我需要在 TSB 或 Istio 中进行哪些操作？&lt;/h2&gt;
&lt;p&gt;不需要进行任何操作：Istio 的 CNI 插件会自行配置以在主要插件之后运行。更改你的 CNI 提供程序并重新构建集群会确保 Istio 的 CNI 仍然在主要插件之后运行。&lt;/p&gt;
&lt;h2 id=&#34;配置-aws-内部-elb&#34;&gt;配置 AWS 内部 ELB&lt;/h2&gt;
&lt;p&gt;在某些情况下，你可能希望部署在 EKS 集群中的服务所产生的 AWS 负载均衡器是内部的，而不是暴露给互联网。TSB 运算符 API 为你提供了在每个特定组件的 Kubernetes 服务中设置注释的途径，以便你可以添加 &lt;code&gt;service.beta.kubernetes.io/aws-load-balancer-scheme&lt;/code&gt; 或 &lt;code&gt;service.beta.kubernetes.io/aws-load-balancer-internal&lt;/code&gt; 注释。&lt;/p&gt;
&lt;p&gt;例如，以下代码片段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;frontEnvoy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kubeSpec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;service.beta.kubernetes.io/aws-load-balancer-scheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;internal&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将配置前端 Envoy（TSB API 和 UI 的主要入口点）的 Kubernetes 服务为内部负载均衡器。类似地，你可以为集群中部署的网关执行相同操作。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;install.tetrate.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;IngressGateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bookinfo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bookinfo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kubeSpec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;service.beta.kubernetes.io/aws-load-balancer-scheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;internal    &lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
