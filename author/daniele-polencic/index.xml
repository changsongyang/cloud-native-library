<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daniele Polencic | 云原生资料库</title>
    <link>https://lib.jimmysong.io/author/daniele-polencic/</link>
      <atom:link href="https://lib.jimmysong.io/author/daniele-polencic/index.xml" rel="self" type="application/rss+xml" />
    <description>Daniele Polencic</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 12 Apr 2023 22:00:00 +0800</lastBuildDate>
    <image>
      <url>https://lib.jimmysong.io/media/sharing.png</url>
      <title>Daniele Polencic</title>
      <link>https://lib.jimmysong.io/author/daniele-polencic/</link>
    </image>
    
    <item>
      <title>如何在 Kubernetes 中实现多租户隔离：命名空间、RBAC 和网络策略的应用</title>
      <link>https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/</link>
      <pubDate>Wed, 12 Apr 2023 22:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/</guid>
      <description>&lt;p&gt;您是否应该让多个团队使用同一个 Kubernetes 集群?&lt;/p&gt;
&lt;p&gt;您是否可以安全地运行来自不信任用户的不信任工作负载?&lt;/p&gt;
&lt;p&gt;Kubernetes 是否具备多租户功能?&lt;/p&gt;
&lt;p&gt;本文将探讨在运行具有多个租户的集群时面临的挑战。&lt;/p&gt;
&lt;p&gt;多租户可分为:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;软多租户&lt;/strong&gt;，适用于信任您的租户 - 比如与同一家公司的团队共享集群时。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬多租户&lt;/strong&gt;，适用于您不信任的租户。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;您还可以混合使用！&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/1_hub010b799c9cb055081923208ac003d1d_88441_54324777d4cff77911f835edfb4e9388.webp 400w,
               /blog/multi-tenancy-in-kubernetes/1_hub010b799c9cb055081923208ac003d1d_88441_ce0153887201475e05465cd91e540563.webp 760w,
               /blog/multi-tenancy-in-kubernetes/1_hub010b799c9cb055081923208ac003d1d_88441_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/1_hub010b799c9cb055081923208ac003d1d_88441_54324777d4cff77911f835edfb4e9388.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在租户之间共享集群的基本构建块是命名空间。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;命名空间在逻辑上对资源进行分组，它们不提供任何安全机制，也不能保证所有资源都部署在同一节点上。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/2_hue5183d55ea9a19a120924a5df46e5c59_35674_6588a6053c03a0e5208228232c8d8c58.webp 400w,
               /blog/multi-tenancy-in-kubernetes/2_hue5183d55ea9a19a120924a5df46e5c59_35674_c9fd616dc10a56a2730492b8fb56c3fa.webp 760w,
               /blog/multi-tenancy-in-kubernetes/2_hue5183d55ea9a19a120924a5df46e5c59_35674_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/2_hue5183d55ea9a19a120924a5df46e5c59_35674_6588a6053c03a0e5208228232c8d8c58.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命名空间中的 Pod 仍然可以与集群中的所有其他 Pod 通信，向 API 发出请求并使用它们想要的任何资源。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认情况下，任何用户都可以访问任何命名空间。&lt;/p&gt;
&lt;p&gt;那应该怎么阻止它？&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/3_hue36364efba01cc4a5dfa2af0f3cd4abf_111900_bc4c42caff3ac40bffe43385f77d7cf6.webp 400w,
               /blog/multi-tenancy-in-kubernetes/3_hue36364efba01cc4a5dfa2af0f3cd4abf_111900_e9817f330c1973a9a4db82f184f2644d.webp 760w,
               /blog/multi-tenancy-in-kubernetes/3_hue36364efba01cc4a5dfa2af0f3cd4abf_111900_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/3_hue36364efba01cc4a5dfa2af0f3cd4abf_111900_bc4c42caff3ac40bffe43385f77d7cf6.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learnk8s.io/rbac-kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;通过 RBAC，您可以限制用户和应用程序对命名空间内和命名空间中的内容所能做的事情。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;常见的操作是授予有限用户权限。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/4_hu72fb626d99050de6945ee1c6eeed2b34_95587_23e1eac1dfc3c2f477534f237f05bb8f.webp 400w,
               /blog/multi-tenancy-in-kubernetes/4_hu72fb626d99050de6945ee1c6eeed2b34_95587_8a4353fb7ae162d3e3e42df76bf9770f.webp 760w,
               /blog/multi-tenancy-in-kubernetes/4_hu72fb626d99050de6945ee1c6eeed2b34_95587_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/4_hu72fb626d99050de6945ee1c6eeed2b34_95587_23e1eac1dfc3c2f477534f237f05bb8f.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/policy/resource-quotas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 Quotas 和 LimitRanges，您可以限制命名空间中部署的资源以及可以使用的内存、CPU 等。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果您想限制租户对其命名空间所能做的事情，这是一个绝妙的想法。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/5_hu1788e08c1f15c87a9464addb74ea20bb_144656_231b80d617a42e3f5ea572991cd0b9da.webp 400w,
               /blog/multi-tenancy-in-kubernetes/5_hu1788e08c1f15c87a9464addb74ea20bb_144656_9f7f2132cff364077904871b9e2cdb64.webp 760w,
               /blog/multi-tenancy-in-kubernetes/5_hu1788e08c1f15c87a9464addb74ea20bb_144656_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/5_hu1788e08c1f15c87a9464addb74ea20bb_144656_231b80d617a42e3f5ea572991cd0b9da.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认情况下，所有 Pod 都可以与 Kubernetes 中的任何 Pod 通信。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于多租户来说这不是很好，但您可以使用 &lt;a href=&#34;https://github.com/ahmetb/kubernetes-network-policy-recipes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Policies&lt;/a&gt; 来更正。&lt;/p&gt;
&lt;p&gt;网络策略类似于防火墙规则，可让您隔离出站和入站流量。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/6_hu4afccc99d7039c800d62e45641a8928b_48860_976b1b6ac1f7bf177e7d05148b6b7277.webp 400w,
               /blog/multi-tenancy-in-kubernetes/6_hu4afccc99d7039c800d62e45641a8928b_48860_62d74d4c90e555153ba7c6f6a161ddd5.webp 760w,
               /blog/multi-tenancy-in-kubernetes/6_hu4afccc99d7039c800d62e45641a8928b_48860_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/6_hu4afccc99d7039c800d62e45641a8928b_48860_976b1b6ac1f7bf177e7d05148b6b7277.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;太好了，命名空间现在安全了吗？&lt;/p&gt;
&lt;p&gt;不要这么快。&lt;/p&gt;
&lt;p&gt;虽然 RBAC、Network Policies、Quotas 等为多租户提供了基本构建块，但这还不够。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kubernetes 有几个共享组件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个很好的例子是 Ingress 控制器，通常每个集群部署一个。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果您提交了一个具有相同路径的 Ingress 模板，则最后一个会覆盖定义，只有一个会起作用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/7_hudf4281ee95003b421757dfce56e23eb3_62514_681827a13941b5d9e195e85177ec0fbe.webp 400w,
               /blog/multi-tenancy-in-kubernetes/7_hudf4281ee95003b421757dfce56e23eb3_62514_8a4bdc3f234bd8dfc6c113b416aba679.webp 760w,
               /blog/multi-tenancy-in-kubernetes/7_hudf4281ee95003b421757dfce56e23eb3_62514_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/7_hudf4281ee95003b421757dfce56e23eb3_62514_681827a13941b5d9e195e85177ec0fbe.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最好的方法是在每个命名空间中部署一个控制器。&lt;/p&gt;
&lt;p&gt;另一个有趣的挑战是 CoreDNS。&lt;/p&gt;
&lt;p&gt;如果其中一个租户滥用 DNS 怎么办？&lt;/p&gt;
&lt;p&gt;整个集群也会受到影响。&lt;/p&gt;
&lt;p&gt;您可以使用额外的插件 &lt;a href=&#34;https://github.com/coredns/policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/coredns/policy&lt;/a&gt; 限制请求。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/8_hu1abef7a39a22165491f952cddcbb2c5f_112695_03d636b5a5cc29e177d1aeaf03057c4e.webp 400w,
               /blog/multi-tenancy-in-kubernetes/8_hu1abef7a39a22165491f952cddcbb2c5f_112695_947ef94bd728dbeece9dc0f971d8bef2.webp 760w,
               /blog/multi-tenancy-in-kubernetes/8_hu1abef7a39a22165491f952cddcbb2c5f_112695_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/8_hu1abef7a39a22165491f952cddcbb2c5f_112695_03d636b5a5cc29e177d1aeaf03057c4e.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;同样的挑战也适用于 Kubernetes API 服务器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kubernetes 不知道租户，如果 API 收到太多请求，将对所有人进行限流。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我不知道是否有解决方法！&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/9_hu70c75ceeb6640946cf88a03f02be4976_114945_0edaf59e4c3f3595a62a4ea66c599bdd.webp 400w,
               /blog/multi-tenancy-in-kubernetes/9_hu70c75ceeb6640946cf88a03f02be4976_114945_ffe18b22249a677829d3c7259b10ce9c.webp 760w,
               /blog/multi-tenancy-in-kubernetes/9_hu70c75ceeb6640946cf88a03f02be4976_114945_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/9_hu70c75ceeb6640946cf88a03f02be4976_114945_0edaf59e4c3f3595a62a4ea66c599bdd.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;假设您成功解决了共享资源的问题，还有 kubelet 和工作负载的挑战。&lt;/p&gt;
&lt;p&gt;正如 Philippe Bogaerts 在&lt;a href=&#34;https://xxradar.medium.com/exploiting-applications-using-livenessprobes-in-kubernetes-cdff6329d320&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这篇文章&lt;/a&gt;中所解释的那样，一个租户可以通过 (滥) 使用活动探针来接管集群中的节点。&lt;/p&gt;
&lt;p&gt;修复不是微不足道的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/10_huc50a61880589eaa2e837d6f78884e0d6_94001_43eb387e3fe3fa7d6afa79a13a784b44.webp 400w,
               /blog/multi-tenancy-in-kubernetes/10_huc50a61880589eaa2e837d6f78884e0d6_94001_d4a41e03be7e1612768d9d8109d93c58.webp 760w,
               /blog/multi-tenancy-in-kubernetes/10_huc50a61880589eaa2e837d6f78884e0d6_94001_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/10_huc50a61880589eaa2e837d6f78884e0d6_94001_43eb387e3fe3fa7d6afa79a13a784b44.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;您可以将代码质量检查器作为 CI/CD 过程的一部分，或使用准入控制器验证提交到集群的资源是否安全。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/open-policy-agent/gatekeeper-library&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里是 Open Policy Agent 的规则库。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/11_hub0ef7c32137f97cd270248acc6f35448_73962_7e9adeb3774449956abea6654b1c21ff.webp 400w,
               /blog/multi-tenancy-in-kubernetes/11_hub0ef7c32137f97cd270248acc6f35448_73962_6eac1eb7ad6a0616f4018286c884b0a5.webp 760w,
               /blog/multi-tenancy-in-kubernetes/11_hub0ef7c32137f97cd270248acc6f35448_73962_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/11_hub0ef7c32137f97cd270248acc6f35448_73962_7e9adeb3774449956abea6654b1c21ff.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;容器也提供了比虚拟机更弱的隔离机制。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JaMJJTb_bEE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lewis Denham-Parry 在这个视频中展示了如何从容器中逃脱。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该怎么办？&lt;/p&gt;
&lt;p&gt;您可以使用容器沙箱，例如 &lt;a href=&#34;https://gvisor.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gVisor&lt;/a&gt;、轻量级虚拟机作为容器 (&lt;a href=&#34;https://katacontainers.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kata containers&lt;/a&gt;、&lt;a href=&#34;https://github.com/firecracker-microvm/firecracker-containerd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;firecracker + containerd&lt;/a&gt;) 或全虚拟机 (&lt;a href=&#34;https://github.com/Mirantis/virtlet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;virtlet 作为 CRI&lt;/a&gt;)。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/multi-tenancy-in-kubernetes/12_hua6929bd8dcf1355d38154899830558c6_91319_180906a902509dd462d1fe9e15aa3ed9.webp 400w,
               /blog/multi-tenancy-in-kubernetes/12_hua6929bd8dcf1355d38154899830558c6_91319_0b771fe87db83953f743dc35e543f5fe.webp 760w,
               /blog/multi-tenancy-in-kubernetes/12_hua6929bd8dcf1355d38154899830558c6_91319_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/multi-tenancy-in-kubernetes/12_hua6929bd8dcf1355d38154899830558c6_91319_180906a902509dd462d1fe9e15aa3ed9.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;希望您已经意识到了这个主题的复杂性以及在 Kubernetes 中提供严格的网络、工作负载和控制器之间的分隔边界的难度。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.jessfraz.com/post/hard-multi-tenancy-in-kubernetes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这就是为什么不建议在 Kubernetes 中提供硬多租户。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果您需要硬多租户，则建议使用多个集群或 Cluster-as-a-Service 工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cluster API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/openshift/hypershift&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HyperShift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/clastix/kamaji&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kamaji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gardener.cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gardener&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您可以容忍较弱的多租户模型，以换取简单和便利，则可以推出您的 RBAC、Quotas 等规则。&lt;/p&gt;
&lt;p&gt;但是，有一些工具可以为您抽象出这些问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api-provider-nested/tree/main/virtualcluster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Virtual Cluster (wg-multitenancy)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vcluster.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vcluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/clastix/capsule&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Capsule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/loft-sh/kiosk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kiosk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，如果您喜欢这个主题，您可能还会喜欢：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learnk8s 在运行的 Kubernetes 工作坊 &lt;a href=&#34;https://learnk8s.io/training&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://learnk8s.io/training&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;过去的主题集合 &lt;a href=&#34;https://twitter.com/danielepolencic/status/1298543151901155330&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://twitter.com/danielepolencic/status/1298543151901155330&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;我每周发布的 Kubernetes 通讯 &lt;a href=&#34;https://learnk8s.io/learn-kubernetes-weekly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://learnk8s.io/learn-kubernetes-weekly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
