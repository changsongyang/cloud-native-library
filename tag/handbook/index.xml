<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>handbook | 云原生资料库</title>
    <link>https://jimmysong.io/docs/tag/handbook/</link>
      <atom:link href="https://jimmysong.io/docs/tag/handbook/index.xml" rel="self" type="application/rss+xml" />
    <description>handbook</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 18 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jimmysong.io/docs/media/logo_hu217dae2ad2bcd8acb156327d70759d70_15430_300x300_fit_lanczos_3.png</url>
      <title>handbook</title>
      <link>https://jimmysong.io/docs/tag/handbook/</link>
    </image>
    
    <item>
      <title>Envoy基础教程🔥</title>
      <link>https://jimmysong.io/docs/book/envoy-handbook/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      <guid>https://jimmysong.io/docs/book/envoy-handbook/</guid>
      <description>&lt;p&gt;Envoy 基础教程，本手册梳理了 Envoy 基础知识，适用于初学者，帮你快速掌握 Envoy 代理。&lt;/p&gt;
&lt;h2 id=&#34;关于本书&#34;&gt;关于本书&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://envoyproxy.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt; 是一个开源的边缘和服务代理，专为云原生应用而设计。Envoy 与每个应用程序一起运行，通过提供网络相关的功能，如重试、超时、流量路由和镜像、TLS 终止等，以一种平台无关的方式抽象出网络。由于所有的网络流量都流经 Envoy 代理，因此很容易观察到流量和问题区域，调整性能，并准确定位延迟来源。&lt;/p&gt;
&lt;p&gt;本书为 &lt;a href=&#34;https://tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate&lt;/a&gt; 出品的《Envoy 基础教程》的文字内容，其配套的 8 节实验及 19 个测试，请访问 &lt;a href=&#34;https://academy.tetrate.io/courses/envoy-fundamentals-zh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate 学院&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;如何阅读本书&#34;&gt;如何阅读本书&lt;/h2&gt;
&lt;p&gt;您可以使用以下方式阅读：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/envoy-handbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线阅读&lt;/a&gt;（建议）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/envoy-handbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载 PDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：PDF 非实时编译，内容可能落后于在线版本，建议在线阅读。&lt;/p&gt;
&lt;h2 id=&#34;关于作者&#34;&gt;关于作者&lt;/h2&gt;
&lt;p&gt;宋净超（Jimmy Song），CNCF Ambassador，&lt;a href=&#34;https://cloudnative.to&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;创始人，个人网站 &lt;a href=&#34;https://jimmysong.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jimmysong.io&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;您可以使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;  协议共享。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Istio服务网格基础教程🔥</title>
      <link>https://jimmysong.io/docs/book/istio-handbook/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate>
      <guid>https://jimmysong.io/docs/book/istio-handbook/</guid>
      <description>&lt;h2 id=&#34;关于本书&#34;&gt;关于本书&lt;/h2&gt;
&lt;p&gt;本书的主题包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务网格概念解析&lt;/li&gt;
&lt;li&gt;控制平面和数据平面的原理&lt;/li&gt;
&lt;li&gt;Istio 架构详解&lt;/li&gt;
&lt;li&gt;基于 Istio 的自定义扩展&lt;/li&gt;
&lt;li&gt;迁移到 Istio 服务网格&lt;/li&gt;
&lt;li&gt;构建云原生应用网络&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如何阅读本书&#34;&gt;如何阅读本书&lt;/h2&gt;
&lt;p&gt;本书基于 Istio 1.11+ 版本编写，您可以通过以下地址参与到本书的编写或阅读本书：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/istio-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;自行构建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/istio-handbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线浏览&lt;/a&gt;（推荐）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;书中部分内容来自 Tetrate 出品的 &lt;a href=&#34;https://academy.tetrate.io/courses/istio-fundamentals-zh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 基础教程&lt;/a&gt;，请访问 &lt;a href=&#34;https://academy.tetrate.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate 学院&lt;/a&gt;，解锁全部教程及测试，获得 Tetrate 认证的 Istio 认证。&lt;/p&gt;
&lt;h2 id=&#34;致谢&#34;&gt;致谢&lt;/h2&gt;
&lt;p&gt;感谢 &lt;a href=&#34;https://www.servicemesher.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ServiceMesher&lt;/a&gt; 及&lt;a href=&#34;https://cloudnative.to/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;先后负责翻译了 &lt;a href=&#34;https://cloudnative.to/envoy/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt; 及 &lt;a href=&#34;https://istio.io/latest/zh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt; 官方文档，为本书的成书提供了大量参考资料。&lt;/p&gt;
&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;本书所有内容支持使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;  协议共享。&lt;/p&gt;
&lt;h2 id=&#34;参与本书&#34;&gt;参与本书&lt;/h2&gt;
&lt;p&gt;请参考 &lt;a href=&#34;https://istio.io/latest/about/contribute/style-guide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 文档样式指南&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kubernetes中文指南🔥</title>
      <link>https://jimmysong.io/docs/book/kubernetes-handbook/</link>
      <pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://jimmysong.io/docs/book/kubernetes-handbook/</guid>
      <description>&lt;p&gt;本书起始于2017年3月，记录了本人从零开始学习和使用Kubernetes的心路历程，着重于经验分享和总结，同时也会有相关的概念解析，希望能够帮助大家少踩坑，少走弯路，还会指引大家关注Kubernetes生态周边，如微服务构建、DevOps、大数据应用、服务网格（Service Mesh）、云原生等领域。&lt;/p&gt;
&lt;h3 id=&#34;开始之前&#34;&gt;开始之前&lt;/h3&gt;
&lt;p&gt;在阅读本书之前希望您掌握以下知识和准备以下环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux 操作系统原理&lt;/li&gt;
&lt;li&gt;Linux 常用命令&lt;/li&gt;
&lt;li&gt;Docker 容器原理及基本操作&lt;/li&gt;
&lt;li&gt;一台可以上网的电脑，Mac/Windows/Linux 皆可&lt;/li&gt;
&lt;li&gt;安装 Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本书主题&#34;&gt;本书主题&lt;/h3&gt;
&lt;p&gt;本书的主题不局限于Kubernetes，还包括以下几大主题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;云原生开源组件&lt;/li&gt;
&lt;li&gt;云原生应用与微服务架构&lt;/li&gt;
&lt;li&gt;基于Kubernetes的Service Mesh架构&lt;/li&gt;
&lt;li&gt;Kubernetes与微服务结合实践&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;起初写作本书时，安装的所有组件、所用示例和操作等皆基于 &lt;strong&gt;Kubernetes 1.6+&lt;/strong&gt; 版本，同时我们也将密切关注Kubernetes的版本更新，随着它的版本更新升级，本书中的Kubernetes版本和示例也将随之更新。&lt;/p&gt;
&lt;h3 id=&#34;使用方式&#34;&gt;使用方式&lt;/h3&gt;
&lt;p&gt;您可以通过以下方式使用本书：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/kubernetes-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitBook 在线浏览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载本书的发行版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;按照&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/blob/master/CODE_OF_CONDUCT.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;说明&lt;/a&gt;自行编译成离线版本&lt;/li&gt;
&lt;li&gt;Fork 一份添加你自己的笔记自行维护，有余力者可以一起参与进来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意：本书中的 Service Mesh 相关内容已不再维护，请转至 &lt;a href=&#34;https://www.servicemesher.com/istio-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;istio-handbook&lt;/a&gt; 浏览。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;快速开始&#34;&gt;快速开始&lt;/h2&gt;
&lt;p&gt;如果您想要学习Kubernetes和云原生应用架构但是又不想自己从头开始搭建和配置一个集群，那么可以直接使用&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-vagrant-centos-cluster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubernetes-vagrant-centos-cluster&lt;/a&gt;项目直接在本地部署一个3节点的分布式集群及其他如Heapster、EFK、Istio等可选组件，或者使用更加轻量级的&lt;a href=&#34;https://github.com/rootsongjc/cloud-native-sandbox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cloud-native-sandbox&lt;/a&gt;在个人电脑上使用Docker运行单节点的Kubernetes、Istio等组件。&lt;/p&gt;
&lt;h2 id=&#34;贡献与致谢&#34;&gt;贡献与致谢&lt;/h2&gt;
&lt;p&gt;感谢大家对本书做出的贡献！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/graphs/contributors&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;查看贡献者列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/blob/master/CONTRIBUTING.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;查看如何贡献&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/blob/master/CODE_OF_CONDUCT.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;查看文档的组织结构与使用方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Serverless实战</title>
      <link>https://jimmysong.io/docs/book/serverless-handbook/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://jimmysong.io/docs/book/serverless-handbook/</guid>
      <description>&lt;p&gt;Serverless（无服务器架构）是指服务端逻辑由开发者实现，应用运行在无状态的计算容器中，由事件触发，完全被第三方管理，其业务层面的状态则存储在数据库或其他介质中。&lt;/p&gt;
&lt;p&gt;Serverless 是云原生技术发展的高级阶段，可以使开发者更聚焦在业务逻辑，而减少对基础架构的关注。&lt;/p&gt;
&lt;h3 id=&#34;关于本书&#34;&gt;关于本书&lt;/h3&gt;
&lt;p&gt;本书是本人学习和实践 Serverless 过程中所整理的资料，目前主要关注的 Serverless 开源项目是 &lt;a href=&#34;https://github.com/knative&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Knative&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;使用方式&#34;&gt;使用方式&lt;/h3&gt;
&lt;p&gt;您可以通过以下方式使用本书：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/serverless-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线浏览&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Docker指南</title>
      <link>https://jimmysong.io/docs/book/docker-handbook/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://jimmysong.io/docs/book/docker-handbook/</guid>
      <description>&lt;p&gt;此书是 &lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes Handbook&lt;/a&gt; 的前传，本书中主要介绍 Docker 1.13 新特性和帮助大家了解 Docker 集群的管理和使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/docker-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/docker-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线访问地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;容器是微服务的最佳载体，Kubernetes 是微服务的最佳运行平台，&lt;a href=&#34;https://istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt; 是 Kubernetes 上最佳的 service mesh。&lt;/p&gt;
&lt;p&gt;2017年4月 Docker 项目改名为 moby，10月的 DockerCon 在哥本哈根 Docker 公司宣布拥抱 Kubernetes，对于容器编排领域 Kubernetes 已经成为事实上的王者。&lt;/p&gt;
&lt;h3 id=&#34;关于&#34;&gt;关于&lt;/h3&gt;
&lt;p&gt;本书中引用了一些公开的分享与链接并加以整理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本书作于2017年初，现已停止更新。&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo实战手册</title>
      <link>https://jimmysong.io/docs/book/hugo-handbook/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://jimmysong.io/docs/book/hugo-handbook/</guid>
      <description>&lt;p&gt;本手册将指导你如何使用&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;构建静态网站用于个人博客或者项目展示。&lt;/p&gt;
&lt;p&gt;手把手教你如何从0开始构建一个静态网站，这不需要有太多的编程和开发经验和时间投入，也基本不需要多少成本（除了个性化域名），使用GitHub和Hugo模板即可快速构建和上线一个网站。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/hugo-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在线浏览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rootsongjc/hugo-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;目标读者&#34;&gt;目标读者&lt;/h3&gt;
&lt;p&gt;本文档适用于以下用户：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对网站构建不太了解，没有web开发经验的用户&lt;/li&gt;
&lt;li&gt;希望快速构建一个网站，个性化需求不多，不想花费太多精力打理，更新不多的用户&lt;/li&gt;
&lt;li&gt;希望学习网站构建、网站模板、web开发的用户&lt;/li&gt;
&lt;li&gt;对Go语言感兴趣，希望从事开源项目的用户👏&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;贡献者&#34;&gt;贡献者&lt;/h3&gt;
&lt;p&gt;感谢此书的&lt;a href=&#34;https://github.com/rootsongjc/hugo-handbook/graphs/contributors&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;贡献者&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
