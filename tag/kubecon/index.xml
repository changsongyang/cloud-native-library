<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KubeCon | 云原生资料库</title>
    <link>https://lib.jimmysong.io/tag/kubecon/</link>
      <atom:link href="https://lib.jimmysong.io/tag/kubecon/index.xml" rel="self" type="application/rss+xml" />
    <description>KubeCon</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Mon, 13 Nov 2023 16:00:00 +0800</lastBuildDate>
    <image>
      <url>https://lib.jimmysong.io/media/sharing.png</url>
      <title>KubeCon</title>
      <link>https://lib.jimmysong.io/tag/kubecon/</link>
    </image>
    
    <item>
      <title>KubeCon North America 2023:5 个有趣的主题演讲摘要</title>
      <link>https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/</link>
      <pubDate>Mon, 13 Nov 2023 16:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/</guid>
      <description>&lt;p&gt;摘要：本文回顾了 KubeCon NA 2023 五个引人入胜的主题演讲，涵盖微型容器、Kubernetes LTS、Kubernetes 未来愿景、优化 Kubernetes 资源使用、生成式 AI 在平台工程的应用。讨论了微型容器的尺寸对可持续性的影响，稳定性与创新的平衡，Kubernetes 未来发展方向，以及 AI 和资源优化在云原生环境中的重要性。整体看，Kubernetes 作为云原生平台在稳定性、安全性、简易性方面迎来了新的发展阶段。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;KubeCon + CloudNativeCon North America 2023，云原生的旗舰会议，已于几天前正式结束。本文包含了这三天中最有趣的演讲和公告。废话不多说，让我们进入回顾吧。✌️&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/1_hu491208e70ff9059d8fc0fcd8faca76b0_47741_82293a75194efa27b7d3d343b82976c6.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/1_hu491208e70ff9059d8fc0fcd8faca76b0_47741_0520d55a2a714fec5d6a07b5147b16be.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/1_hu491208e70ff9059d8fc0fcd8faca76b0_47741_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/1_hu491208e70ff9059d8fc0fcd8faca76b0_47741_82293a75194efa27b7d3d343b82976c6.webp&#34;
               width=&#34;760&#34;
               height=&#34;562&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;微型容器的微型讨论--eric-gregorymirantis&#34;&gt;微型容器的微型讨论 — Eric Gregory，Mirantis&lt;/h2&gt;
&lt;p&gt;镜像大小的问题对可持续性、存储和网络效率等方面产生了重要影响。这就是为什么我们将首先讨论的话题是 Eric Gregory 的“微型容器的微型讨论”。这个话题对我个人也很有兴趣，我尝试过使用 Docker Slim 来减小镜像大小（包括集成到 CI/CD 流水线中），结果确实令人印象深刻。然而，我们还看到了更进一步的示例，例如使用 WebAssembly，如下图所示。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/2_hu51cd4bc371fd2036b0f8180558878230_233981_1466dec2baa32ff1f3699d15a3a355d5.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/2_hu51cd4bc371fd2036b0f8180558878230_233981_61060cc46f04744c32ab96967741075c.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/2_hu51cd4bc371fd2036b0f8180558878230_233981_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/2_hu51cd4bc371fd2036b0f8180558878230_233981_1466dec2baa32ff1f3699d15a3a355d5.webp&#34;
               width=&#34;760&#34;
               height=&#34;294&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;因此，下面的截图显示了一个相当简单的 Go 应用程序的 Dockerfile，以及相同的示例，但基于更轻量的 Alpine Linux 基础镜像。这相当有趣，因为在保存所有功能的情况下，最终镜像大小的差异（85.79 MB vs. 301.86 MB）超过了 3 倍。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/3_hud6f869ff73e05a99abc6b7fc25a60029_273647_ac8bfc2ee6147d81f7ee7203522d6b86.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/3_hud6f869ff73e05a99abc6b7fc25a60029_273647_c81a35b405329479ae3f47f830f36e32.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/3_hud6f869ff73e05a99abc6b7fc25a60029_273647_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/3_hud6f869ff73e05a99abc6b7fc25a60029_273647_ac8bfc2ee6147d81f7ee7203522d6b86.webp&#34;
               width=&#34;760&#34;
               height=&#34;294&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/4_huef5771305aae28841709bdb0171afaa9_272380_45f67043d8e425767e039b071c6f52d4.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/4_huef5771305aae28841709bdb0171afaa9_272380_face5e4353833da0d66f40fd27cedbd0.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/4_huef5771305aae28841709bdb0171afaa9_272380_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/4_huef5771305aae28841709bdb0171afaa9_272380_45f67043d8e425767e039b071c6f52d4.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;实际上，Dockerfile 中唯一改变的是基础镜像，但大小显著减小。事实上，这是一个良好的实践和应该考虑的事项 — 总是选择最小必要的基础镜像和一套工具。对于单一二进制文件，手头的选择甚至更多。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/5_hue7f0753fc1d4f793240effe01bb229d3_230698_1b260bd8648a2946ff12381d3a0e8f2e.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/5_hue7f0753fc1d4f793240effe01bb229d3_230698_2862e3a6bf231e9e8024714d50d78628.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/5_hue7f0753fc1d4f793240effe01bb229d3_230698_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/5_hue7f0753fc1d4f793240effe01bb229d3_230698_1b260bd8648a2946ff12381d3a0e8f2e.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;对于基于 Windows 的镜像，你还可以优化大小 — 例如，使用 Windows Nanoserver 基础镜像，其大小为 116 MB，并从中构建容器化软件。一些可能将这一步提升到一个新水平的新方法是在 Kubernetes 上使用 WebAssembly，这需要更多的研究，但将允许更令人印象深刻的镜像优化。&lt;/p&gt;
&lt;h2 id=&#34;由社区支持的-kubernetes-lts-确保稳定性和兼容性同时推动创新--jeremy-rickard微软-azure-首席软件工程师&#34;&gt;由社区支持的 Kubernetes LTS: 确保稳定性和兼容性同时推动创新 — Jeremy Rickard，微软 Azure 首席软件工程师&lt;/h2&gt;
&lt;p&gt;尽管 KubeCon 在很大程度上致力于云原生平台的创新，但关于与创新紧密相连的稳定性和兼容性的主题并没有被忽视。这是由微软 Azure 首席软件工程师 Jeremy Rickard 告诉我们的。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/6_hu4efd7668035643d7da578abd2baf5751_409195_57a32884947401d2dce6fa12043f1e73.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/6_hu4efd7668035643d7da578abd2baf5751_409195_72896aed51bd4b56a8aa34e130c2ef9c.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/6_hu4efd7668035643d7da578abd2baf5751_409195_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/6_hu4efd7668035643d7da578abd2baf5751_409195_57a32884947401d2dce6fa12043f1e73.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在这个主题中听到有关 AI 的讲解，或者更直接地说是关于 ChatGPT，是相当预料之中的，考虑到微软与 OpenAI 之间的密切联系。我们被展示了“kubectl ai”工具，它允许您根据您的请求轻松生成 YAML，但立即强调 AI 不能做到一切 — 例如，集群升级过程。随后在演示过程中，多次展示了 Bing 回答有关 Kubernetes 的各种问题的能力。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/7_hu25a6b2abc8a88164c65bb5a708dc2280_303012_eee4db95835809891c77e8b29e85bfec.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/7_hu25a6b2abc8a88164c65bb5a708dc2280_303012_7dceb7bbde58369314722e62138f1111.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/7_hu25a6b2abc8a88164c65bb5a708dc2280_303012_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/7_hu25a6b2abc8a88164c65bb5a708dc2280_303012_eee4db95835809891c77e8b29e85bfec.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;多年来，Kubernetes 的发布频率变得更低，但更稳定 — 是的，现在默认只发布稳定的 API，有关弃用的警告等等。然而，升级过程（通常意味着从一个几乎不再受支持的版本顺序升级到最新版本之一）经常让用户头疼。此外，从 2023 年 5 月的调查数据显示，大多数用户仍在他们的集群中使用已经不再受支持的 Kubernetes 版本，这令人印象深刻。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/8_hu4796bc086f0376176aa305bf386e91d8_400431_98c80e290cc5ad915aa590def57a9d78.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/8_hu4796bc086f0376176aa305bf386e91d8_400431_983fcf187d0200b79b4d220831d4cbac.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/8_hu4796bc086f0376176aa305bf386e91d8_400431_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/8_hu4796bc086f0376176aa305bf386e91d8_400431_98c80e290cc5ad915aa590def57a9d78.webp&#34;
               width=&#34;760&#34;
               height=&#34;292&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;解决方案是相当明显的 — 长期支持 (LTS)，但关于支持应该持续多长时间，选择哪些版本等问题存在很多疑问。微软已经从版本 1.27 开始提供 LTS — 提供两年的支持和安全更新，该 GA 日期是传统一年的两倍。目前，来自最流行的云供应商代表组成的团队正在研究这些问题，以帮助确定 Kubernetes LTS 的共同路径。因此，这将是推广 Kubernetes 并使其成为更稳定且易于维护的平台的又一步。&lt;/p&gt;
&lt;h2 id=&#34;视觉的愿景--kubernetes-在其第二个十年的发展--tim-hockingoogle-杰出工程师&#34;&gt;视觉的愿景 — Kubernetes 在其第二个十年的发展 — Tim Hockin，Google 杰出工程师&lt;/h2&gt;
&lt;p&gt;我们回顾中的下一个主题是由 Google 杰出工程师 Tim Hockin 介绍的 Kubernetes 过去十年的发展路径。基本上，第一个十年已经过去，现在我们准备看看 Kubernetes 作为一个平台在下一个十年可能会发生什么，因为它已经发展了很多，但仍有很多要来。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/9_hu9c9f50345d37ff391cbb44702d19c063_239840_fbc7b7b27b7eb8f06600386c6a158a4d.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/9_hu9c9f50345d37ff391cbb44702d19c063_239840_495e7a8517534248c890e3ac731596f8.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/9_hu9c9f50345d37ff391cbb44702d19c063_239840_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/9_hu9c9f50345d37ff391cbb44702d19c063_239840_fbc7b7b27b7eb8f06600386c6a158a4d.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;由于AI/ML是“大事物”之一（就像互联网、智能手机、电动汽车、云等的出现一样），计算资源的使用将增加，因此需要从更高效的角度来解决这个问题。是的，推断（基于他人的AI解决方案而不是自己进行训练的AI应用程序）是新的Web应用程序。Kubernetes有可能成为AI/ML应用程序的首选选择，但仍需要进行调查、问题和答案以及进一步的改进。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/10_hu20eddf57d0bb897f4282b148e6a05fbe_215203_65623576460b5d65219db41fb85466c3.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/10_hu20eddf57d0bb897f4282b148e6a05fbe_215203_bc4e9e6cbc7f3f61046f07f1ac10ece4.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/10_hu20eddf57d0bb897f4282b148e6a05fbe_215203_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/10_hu20eddf57d0bb897f4282b148e6a05fbe_215203_65623576460b5d65219db41fb85466c3.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;接下来肯定会处理的一个问题是多集群工作负载。目前，这个过程仍然相当复杂，未来的发展将致力于使这个过程变得更无缝和 less 复杂。此外，将专注于减少最终用户的复杂性。很可能，由于受众的扩大，下一代 Kubernetes 用户将更加关注可靠性和安全性，而不是新功能（这与受众需求的 LTS 的动机相呼应）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/11_hued1f3f14dffb9e258faf0b1764db4623_270332_72503d0fca61125d98b3ad6622783f32.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/11_hued1f3f14dffb9e258faf0b1764db4623_270332_fb8cb91029c0c1f7c5944a6662138e94.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/11_hued1f3f14dffb9e258faf0b1764db4623_270332_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/11_hued1f3f14dffb9e258faf0b1764db4623_270332_72503d0fca61125d98b3ad6622783f32.webp&#34;
               width=&#34;760&#34;
               height=&#34;294&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;主题演讲的主要思想是，Kubernetes 不应过分关注生态系统的增长和广泛的机会，而应专注于为终端用户优化、提高安全性、稳定性和简易性。&lt;/p&gt;
&lt;h2 id=&#34;减少重复使用循环利用--nathan-taberaws-kubernetes-产品负责人&#34;&gt;减少、重复使用、循环利用 — Nathan Taber，AWS Kubernetes 产品负责人&lt;/h2&gt;
&lt;p&gt;我们列表中的下一个主题来自 AWS Kubernetes 产品负责人 Nathan Taber。AWS 代表已将过去十年的 Kubernetes 与之前的 CPU 技术流程缩小（晶体管尺寸）相比，以提高能效和性能。效率应该是第一优先级，因为这可以节省时间、资源和金钱。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/12_hu16b3c7d901e95a63306335e487aceaaa_343746_5aa312e6866979bba24d5b2d979f9caa.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/12_hu16b3c7d901e95a63306335e487aceaaa_343746_84c94469aab3ce3bc3e1006dd7477369.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/12_hu16b3c7d901e95a63306335e487aceaaa_343746_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/12_hu16b3c7d901e95a63306335e487aceaaa_343746_5aa312e6866979bba24d5b2d979f9caa.webp&#34;
               width=&#34;760&#34;
               height=&#34;293&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;主要推动因素包括识别成本驱动因素、优化最有效的优化以及使用共享和动态资源。开源已经提供了在这些目标上工作的相当成熟的项目 — 用于在云原生环境中监控资金的 OpenCost，用于节点自动缩放的 Karpenter 等。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/13_hue34c4e0d11de83872c42d33cdc42aeb9_372945_769041ac826d91976eaed52059711fb2.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/13_hue34c4e0d11de83872c42d33cdc42aeb9_372945_8ce7391311d6a7fd09b8f3255ec392ae.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/13_hue34c4e0d11de83872c42d33cdc42aeb9_372945_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/13_hue34c4e0d11de83872c42d33cdc42aeb9_372945_769041ac826d91976eaed52059711fb2.webp&#34;
               width=&#34;760&#34;
               height=&#34;294&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;此外，任何平台上使用 Kubernetes 都会影响能源足迹，因为它提供了按需共享的资源，可以轻松进行水平和垂直扩展。尽管代表当然首先提到了 AWS，但他指出我们谈论的是所有遵循这种方法的云平台 — 在这里，选择权在用户手中。&lt;/p&gt;
&lt;h2 id=&#34;用于平台工程的生成式-ai--jeremy-lewisailplane-ai&#34;&gt;用于平台工程的生成式 AI — Jeremy Lewi，Sailplane AI&lt;/h2&gt;
&lt;p&gt;最后，在我们的列表中仍然在所有头条新闻中保留的是 AI，AI，AI（特别是生成式 AI）。生成式 AI 可以解决的两个潜在目标是平台的创建及其运营，包括自主诊断和问题解决。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/14_hu347d0ae73b6284ca539283a7e2bcbc16_326143_b33bac04df884ca9ae5ccb123707f12b.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/14_hu347d0ae73b6284ca539283a7e2bcbc16_326143_8aac68dd6b3bbd0a1a3a7610b51c5449.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/14_hu347d0ae73b6284ca539283a7e2bcbc16_326143_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/14_hu347d0ae73b6284ca539283a7e2bcbc16_326143_b33bac04df884ca9ae5ccb123707f12b.webp&#34;
               width=&#34;760&#34;
               height=&#34;294&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;作为在平台工程中使用生成式 AI 的一个例子，我们看到了创建 Custom Resource VectorDB 的过程 — 这是现代 LLMs 的关键组件。将期望的 YAML 提供给 AI 作为输入，输出是用 Go 编写的 Custom Resource 的 Kubernetes 控制器的完整实现。这样，使用生成式 AI，计划消除控制器和 CRD 创建之间的差距，从而加速和简化平台工程的过程。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-na-5-interesting-keynotes/15_hu944e147d29ca7153be19a3cc70b0e870_317314_e840a49e6b60bd8f2a29dc896972f8d2.webp 400w,
               /blog/kubecon-na-5-interesting-keynotes/15_hu944e147d29ca7153be19a3cc70b0e870_317314_0725cb27eaecb78faf87f41e7757c15c.webp 760w,
               /blog/kubecon-na-5-interesting-keynotes/15_hu944e147d29ca7153be19a3cc70b0e870_317314_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-na-5-interesting-keynotes/15_hu944e147d29ca7153be19a3cc70b0e870_317314_e840a49e6b60bd8f2a29dc896972f8d2.webp&#34;
               width=&#34;760&#34;
               height=&#34;296&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;如果我们谈论在操作平台时，使用生成式 AI 进行故障排除、诊断和问题解决，这个过程涉及使用 LLM 科学调试。这是一个迭代的过程，涉及提供有关问题的输出，执行建议的命令，并提供新信息，循环往复直到问题解决。您可以在上图中看到这个过程的视觉示例。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;在过去的十年里，Kubernetes 取得了长足的发展，拥有了庞大的用户群体。KubeCon 作为一个聚集来自不同行业的不同人士演讲的大会，充分展示了这一点。想要了解所有演讲和主题演讲，需要花费很多天甚至周来深入了解。因此，我尝试汇总了我最喜欢的内容，希望这些主题演讲的摘要能够让您获得一些有趣的行业见解。&lt;/p&gt;
&lt;h2 id=&#34;引用&#34;&gt;引用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.accelevents.com/e/kubecon-cloudnativecon-north-america-2023/portal/stage/311604&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;微型容器的微型讨论 — Eric Gregory, Mirantis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.accelevents.com/e/kubecon-cloudnativecon-north-america-2023/portal/stage/311759&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;社区支持的 Kubernetes LTS：确保稳定性和兼容性，同时推动创新 — Jeremy Rickard, 微软 Azure 首席软件工程师&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.accelevents.com/e/kubecon-cloudnativecon-north-america-2023/portal/stage/311607&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;视觉的愿景 — Kubernetes 在其第二个十年的展望 — Tim Hockin, 谷歌杰出工程师&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.accelevents.com/e/kubecon-cloudnativecon-north-america-2023/portal/stage/311607&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;减少、重复利用、回收 — Nathan Taber, 亚马逊 Web Services Kubernetes 产品负责人&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.accelevents.com/e/kubecon-cloudnativecon-north-america-2023/portal/stage/311604&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;用于平台工程的生成式人工智能 — Jeremy Lewi, Sailplane AI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>KubeCon Chicago 主要收获：人工智能（AI）的缓慢崛起，平台工程的主导地位，以及 KubeCon NA 2023 对开发者体验的重新关注</title>
      <link>https://lib.jimmysong.io/blog/kubecon-chicago-key-takeaways/</link>
      <pubDate>Mon, 13 Nov 2023 07:00:00 +0800</pubDate>
      <guid>https://lib.jimmysong.io/blog/kubecon-chicago-key-takeaways/</guid>
      <description>&lt;p&gt;本文译自：&lt;a href=&#34;https://danielbryantuk.medium.com/kubecon-chicago-key-takeaways-3de5ca13b375&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://danielbryantuk.medium.com/kubecon-chicago-key-takeaways-3de5ca13b375&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：本文讨论了 KubeCon 的主要议题，包括平台工程、Kubernetes 的不断发展、开发者体验的重要性、对应用开发和集成的关注、云原生通信的捆绑问题、安全问题的重要性、对可持续性的关注，以及社区的力量。文章强调了在标准化和创新之间取得平衡的重要性，并预测云原生的未来将看到更多的 AI/LLMs。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这次 KubeCon NA 对我来说是一次非常不同的体验，因为我不是代表公司或办展位。然而，我仍然度过了一段愉快的时光，与云原生社区的许多人见面真是太棒了。回到芝加哥也很不错，这座城市对我们很好 —— 我几乎忘记了我有多喜欢芝加哥式深盘披萨！&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-chicago-key-takeaways/f1_hu4164b9bad2fea2a2013299fb70947f4c_127745_4159c88f1ab0e3f5c8db6a47eb7df806.webp 400w,
               /blog/kubecon-chicago-key-takeaways/f1_hu4164b9bad2fea2a2013299fb70947f4c_127745_c4bf27d2653ae6ecdaad24a3fb149c7a.webp 760w,
               /blog/kubecon-chicago-key-takeaways/f1_hu4164b9bad2fea2a2013299fb70947f4c_127745_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-chicago-key-takeaways/f1_hu4164b9bad2fea2a2013299fb70947f4c_127745_4159c88f1ab0e3f5c8db6a47eb7df806.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;以下是我从 KubeCon NA 2023 中得出的主要收获：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;云原生社区正在缓慢接受AI/LLM&lt;/li&gt;
&lt;li&gt;DevOps 已经过时：平台工程万物&lt;/li&gt;
&lt;li&gt;山中有金！在平台激战中销售镐和铲子&lt;/li&gt;
&lt;li&gt;Kubernetes 应该保持不完整（并不断发展）&lt;/li&gt;
&lt;li&gt;别忘了开发者体验！&lt;/li&gt;
&lt;li&gt;增加对应用程序开发和集成的关注&lt;/li&gt;
&lt;li&gt;云原生通信：打包获胜？&lt;/li&gt;
&lt;li&gt;安全是大生意&lt;/li&gt;
&lt;li&gt;更加关注可持续性：可观察性、扩展性和 FinOps&lt;/li&gt;
&lt;li&gt;社区，社区，社区&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;背景设定迎来了后期采用者&#34;&gt;背景设定：迎来了后期采用者&lt;/h2&gt;
&lt;p&gt;我从参加 KubeCon 芝加哥得到的总体感觉是，我们已经完全进入了&lt;a href=&#34;https://en.wikipedia.org/wiki/Diffusion_of_innovations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;创新扩散&lt;/a&gt;的后期采用者阶段。&lt;/p&gt;
&lt;p&gt;当然，像 KubeCon 这样的会议存在一个危险，即陷入（云原生）泡沫，走出会议时很容易认为整个世界都在运行 Kubernetes。这并不是真的，而且“&lt;a href=&#34;https://www.gartner.com/en/newsroom/press-releases/2023-10-30-gartner-says-50-percent-of-critical-enterprise-applications-will-reside-outside-of-centralized-public-cloud-locations-through-2027&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gartner 表示到 2027 年，50% 的关键企业应用将存储在集中的公共云位置之外&lt;/a&gt;”。然而，如果你睁大眼睛看，几乎 50% 的工作负载正在云中运行（或将要运行），这标志着后期采用者的到来。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-chicago-key-takeaways/f2_hu91ab04416f541095f56350d945cdf648_193229_5133806e3b1d4d9c646b9f8ead723528.webp 400w,
               /blog/kubecon-chicago-key-takeaways/f2_hu91ab04416f541095f56350d945cdf648_193229_0c718aea026aacb73c27d94929f83495.webp 760w,
               /blog/kubecon-chicago-key-takeaways/f2_hu91ab04416f541095f56350d945cdf648_193229_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-chicago-key-takeaways/f2_hu91ab04416f541095f56350d945cdf648_193229_5133806e3b1d4d9c646b9f8ead723528.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我从活动的主题演讲和厂商展厅中感受到了这种转变。更多的强调放在了可靠性和值得信赖性上，而不是创新，产品套件和易于集成而不是“最佳解决方案”，以及伙伴关系和合作而不是个别组织的开创性。&lt;/p&gt;
&lt;p&gt;有了这个背景，让我们更深入地了解这些主要收获！&lt;/p&gt;
&lt;h2 id=&#34;云原生社区正在缓慢接受aillm&#34;&gt;云原生社区正在缓慢接受AI/LLM&lt;/h2&gt;
&lt;p&gt;与同一天举行的 KubeCon NA 同期活动的 &lt;a href=&#34;https://devday.openai.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenAI DevDay&lt;/a&gt; 形成鲜明对比，KubeCon 上几乎没有关于人工智能的内容。如果你还没有观看 &lt;a href=&#34;https://www.youtube.com/watch?v=U9mJuUkhUzk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenAI DevDay 的主题演讲&lt;/a&gt;，我鼓励你看看。Ed Sim 在他的每周 &lt;a href=&#34;https://www.whatshotit.vc/p/whats-in-enterprise-itvc-367&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;企业IT/VC快讯&lt;/a&gt; 中也提供了一个很好的总结。&lt;/p&gt;
&lt;p&gt;当然，KubeCon 的第一天主题演讲以人工智能为主题，但这似乎有点“外挂”，更侧重于为 AI/LLM 提供基础设施，而不是在开发或运营工作流中使用。在这里我不想过于判断，因为像 KubeCon 这样的活动需要数月的策划，而 AI 的发展是以每天的速度发生的。&lt;/p&gt;
&lt;p&gt;一些厂商的展位专注于“云端的 ChatGPT”，但我与赞助商的大多数交谈都集中在构建平台的现有问题上。如果你对在平台空间中使用 AI 的潜力感兴趣，我建议你在最近的 &lt;a href=&#34;https://www.infoq.com/podcasts/cloud-devops-trends-2023/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;InfoQ 云和 DevOps 趋势报告播客&lt;/a&gt; 中与几位云原生和 DevOps 领导人，包括 Helen Beal、Abby Bangser、Matt Campbell 和 Steef-Jan Wiggers 一起聊一聊。&lt;/p&gt;
&lt;h2 id=&#34;devops-已经过时平台工程万物&#34;&gt;DevOps 已经过时：平台工程万物！&lt;/h2&gt;
&lt;p&gt;我相信我们都看过 Minions/Gru 平台工程和 DevOps 的表情包（如果没有，在我 &lt;a href=&#34;https://blog.getambassador.io/kubecon-eu-cloudnativecon-2023-summary-devex-debugging-and-doubling-down-on-community-82abee5853b3#acc6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KubeCon EU 2023 摘要&lt;/a&gt; 中提到过），而在 KubeCon 上每个人都在强调这一点。如果你搜索 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/program/schedule/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;程序日程&lt;/a&gt;，你会发现至少有两倍于提到 DevOps 的演讲数量的演讲提到了平台工程，而几乎没有一个演讲是以 DevOps 为标题的。&lt;/p&gt;
&lt;p&gt;这是这个领域的自然演变，伴随着这种变化的好与坏。&lt;/p&gt;
&lt;p&gt;“好”的是，我们正在围绕这个主题形成一个社区，并在行业内形成最佳实践。我要向云原生计算基金会（CNCF）TAG App 交付团队致以崇高的赞扬，因为他们发布了他们的“&lt;a href=&#34;https://tag-app-delivery.cncf.io/whitepapers/platform-eng-maturity-model/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平台工程成熟度模型&lt;/a&gt;”（以及向云原生猫的 Abby Bangser 致以特别的赞扬）&lt;/p&gt;
&lt;p&gt;在 KubeCon EU 2024 中还将举办 &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/co-located-events/platform-engineering-day/#call-for-proposals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;平台工程日同期活动&lt;/a&gt;。自从我整理了一堆关于社区中出现的平台工程思想，并在 KubeCon 2022 上呈现了“&lt;a href=&#34;https://www.youtube.com/watch?v=btUYeOa7JPI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;从 Kubernetes 到 PaaS 再到…嗯，下一步是什么？&lt;/a&gt;”的想法后，我们走了很长的路。&lt;/p&gt;
&lt;h2 id=&#34;山中有金在平台激战中销售镐和铲子&#34;&gt;山中有金！在平台激战中销售镐和铲子&lt;/h2&gt;
&lt;p&gt;每个人都采用平台工程的坏处是，许多供应商面临“平台洗牌”的危险。当然，许多现有的 CNCF 景观灵感来自的产品在官方成为一个事物之前就帮助人们构建了平台。但是我不确定我在 KubeCon 上看到的一切都被市场营销为与平台工程友好。这意味着最终用户在购买产品时必须更仔细地查看，以确保它们符合他们的需求。&lt;/p&gt;
&lt;p&gt;如果一个工具与现有的云原生堆栈集成不良，没有被构建来解决明确的用例（即“工作要完成的任务”），并且不能以自助服务的方式使用，那么它可能没有考虑到平台工程的概念。&lt;/p&gt;
&lt;p&gt;当然，在任何（平台工程）淘金热中，总是有机会卖镐和铲子。&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-应该保持不完整并不断发展&#34;&gt;Kubernetes 应该保持不完整（并不断发展）&lt;/h2&gt;
&lt;p&gt;我非常喜欢 Tim Hockins 在最后一天的主题演讲，““愿景的愿景 — Kubernetes 在其第二个十年的表现”，他在演讲中谈到了在短期内做出妥协以获得长期愿景的价值。&lt;/p&gt;
&lt;p&gt;社区本可以尝试解决所有云原生挑战，并将所有平台工具集成到 Kubernetes 中。然而，Tim 强调了这在 OpenStack 中已经尝试过了…并且结果存疑。&lt;/p&gt;
&lt;p&gt;这个概念在 Tim Bannister 的一条推文中得到了很好的总结，Tim 在大屏幕上分享了这条推文：“Kubernetes 应该保持不完整。”引用我最喜欢的漫画/电影系列之一，Kubernetes 也许是“&lt;a href=&#34;https://batmanfactor.com/not-the-hero-we-deserve-why-the-quote-is-significant/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gotham 需要的英雄，但现在此刻理应拥有的英雄&lt;/a&gt;”。&lt;/p&gt;
&lt;h2 id=&#34;别忘了开发者体验&#34;&gt;别忘了开发者体验！&lt;/h2&gt;
&lt;p&gt;很高兴在 KubeCon NA 的主题演讲中看到几次提到开发者体验和重要性。KubeCon 历来是一个基础设施和运维焦点的事件，但我们不能忘记我们的主要（平台）客户：开发者。&lt;/p&gt;
&lt;p&gt;如果你不知道你的用户是谁以及他们最大的痛点是什么，你无法成功地定位你的产品。开发者是一群聪明的人，喜欢解决自己的问题，而且往往你的产品将与使用胶带和包线但能够“足够好地”完成工作的现状解决方案正面对决。&lt;/p&gt;
&lt;h2 id=&#34;加大对应用开发和集成的关注&#34;&gt;加大对应用开发和集成的关注&lt;/h2&gt;
&lt;p&gt;长期以来，我一直对 &lt;a href=&#34;https://dapr.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dapr&lt;/a&gt; 社区的工作印象深刻，可以说他们在突显云原生社区内应用开发者需求方面处于领先地位。对于不熟悉 CNCF 项目的人来说，Dapr 提供了用于通信、状态和工作流的集成 API。对于一些拥有一些灰发的人来说，可以将其视为云时代企业中间件（做得很好）。&lt;/p&gt;
&lt;p&gt;即使在云原生空间迅速采用 AI/LLMs，我们仍然需要关注定义正确抽象的问题；否则，我们将能够生成大量难以理解的代码！&lt;/p&gt;
&lt;p&gt;在我看来，Dapr 提供了构建分布式应用所需的几个非常有用的抽象，如发布 - 订阅、状态管理、分布式锁等。&lt;/p&gt;
&lt;p&gt;我参加了几次 Dapr 的讲座并留下了深刻印象。如果我要构建一个全新的云原生应用（甚至是演变中的旧应用），我会首先考虑这个项目：&lt;/p&gt;
&lt;p&gt;开源社区非常强大，Diagrid 的团队提供了几个出色的商业解决方案，减少了管理后端基础设施的摩擦和运营负担。我与 &lt;a href=&#34;https://twitter.com/mfussell&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mark Fussell&lt;/a&gt; 和 &lt;a href=&#34;https://twitter.com/bibryam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bilgin Ibryam&lt;/a&gt; 进行了几次很好的交流，我鼓励你在 X 上关注他们。我的 InfoQ 朋友 Thomas Betts 还撰写了对最新的 Diagrid 商业发布的摘要：“&lt;a href=&#34;https://www.infoq.com/news/2023/11/diagrid-managed-dapr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diagrid 推出 Catalyst，一个无服务器、全托管的 Dapr 产品&lt;/a&gt;。”&lt;/p&gt;
&lt;h2 id=&#34;云原生通信捆绑是否王道&#34;&gt;云原生通信：捆绑是否王道？&lt;/h2&gt;
&lt;p&gt;正如 Netscape 的前首席执行官 Jim Barksdale 曾经著名地说过的，创造利润的方式只有两种：一种是捆绑，另一种是解绑。而在云原生生态系统中，我们看到了很多捆绑！&lt;/p&gt;
&lt;p&gt;这种观察在云原生通信栈领域尤为突出。&lt;/p&gt;
&lt;p&gt;我多次讨论过这一点，包括最近的演讲：“&lt;a href=&#34;https://speakerdeck.com/danielbryantuk/devopscon-the-busy-platform-engineers-guide-to-api-gateways&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;忙碌的平台工程师指南：API 网关&lt;/a&gt;” 。在这个栈中，大多数平台构建者将需要三个组件：API 网关（用于南北流量管理）、服务网格（用于东西流量）和容器本地接口或 CNI（用于所有底层软件定义网络）。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /blog/kubecon-chicago-key-takeaways/f3_hu4874f52d0f216b9017c8c9c34030c728_733513_97f683a665b5d587047105fb7a72c6bc.webp 400w,
               /blog/kubecon-chicago-key-takeaways/f3_hu4874f52d0f216b9017c8c9c34030c728_733513_e2518345718e96ef2aa16e08ffa97e19.webp 760w,
               /blog/kubecon-chicago-key-takeaways/f3_hu4874f52d0f216b9017c8c9c34030c728_733513_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://lib.jimmysong.io/blog/kubecon-chicago-key-takeaways/f3_hu4874f52d0f216b9017c8c9c34030c728_733513_97f683a665b5d587047105fb7a72c6bc.webp&#34;
               width=&#34;760&#34;
               height=&#34;480&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我会坦言我的偏见——曾在 Ambassador Labs 工作，制造 &lt;a href=&#34;https://www.getambassador.io/products/edge-stack/api-gateway&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Edge Stack&lt;/a&gt;，并且是 &lt;a href=&#34;https://linkerd.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linkerd&lt;/a&gt; 团队的大支持者——我喜欢选择“最佳解决方案”并进行集成。&lt;/p&gt;
&lt;p&gt;然而，商业趋势正在朝着捆绑方向发展。我看到该领域的各种供应商在其最新产品中上下移动，例如 Isovalent（Cilium CNI 的创建者）通过拥抱服务网格和 API 网关而向上移动。Solo 通过将 CNI（Cilium）纳入其 Istio 服务网格和 API 网关产品中而向下移动。Tetrate、Kong、Tyk、Traefik 等公司也在进行类似的尝试。&lt;/p&gt;
&lt;p&gt;如果你追踪（和关注）这个循环（和资金），明智的做法似乎是倾向于捆绑。&lt;/p&gt;
&lt;p&gt;我相信这种学习不仅适用于云原生通信领域。总的来说，企业正在寻求整合供应商，减少自己动手解决方案的总体拥有成本（TCO），并将云支出承诺转移到云市场内提供的端到端解决方案上。&lt;/p&gt;
&lt;p&gt;在相关的讨论中，由 &lt;a href=&#34;https://twitter.com/danielbryantuk/status/1722034551650648507&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Keith Mattix&lt;/a&gt; 主持的服务网格辩论小组是我在会议上最喜欢的会话之一。与通常的所有人都同意的形式不同，参与者没有保留，导致了一场有趣而富有信息的讨论！&lt;/p&gt;
&lt;h2 id=&#34;安全是大生意&#34;&gt;安全是大生意&lt;/h2&gt;
&lt;p&gt;我将最后的三个要点保持简短，但我想提到展厅里满是安全解决方案，从安全的供应链解决方案到网络入侵检测和权限管理。这个领域有很多兴趣（和资金）。&lt;/p&gt;
&lt;p&gt;演讲还很好地涵盖了这些主题，KubeCon 共同主席 &lt;a href=&#34;https://twitter.com/ffkiv&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Frederick Kautz&lt;/a&gt; 和 CNCF 的成员们强调了安全（以及相关的 CNCF 项目）在主题演讲中的重要性。&lt;/p&gt;
&lt;h2 id=&#34;更加关注可持续性可观测性扩展性和-finops&#34;&gt;更加关注可持续性：可观测性、扩展性和 FinOps&lt;/h2&gt;
&lt;p&gt;关键演讲中突出的另一个话题是可持续性。有一个有趣的小组讨论：“&lt;a href=&#34;https://sched.co/1R4Tl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云中的环境可持续性并非神话&lt;/a&gt;” ，甚至 AWS 赞助的主题演讲也侧重于这一点。&lt;/p&gt;
&lt;p&gt;这是一个重要的话题，通过可观测性、自动扩展和 FinOps 来探讨理解和监控你的云（碳）足迹的基本驱动因素是很好的。&lt;/p&gt;
&lt;p&gt;对于对 FinOps 这个主题不熟悉的人，我从 Roi Ravhon 那里学到了很多，他在我最近与他录制的 InfoQ 播客中分享了一些内容：“&lt;a href=&#34;https://www.infoq.com/podcasts/finops-cloud-cost-optimization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Roi Ravhon 谈 FinOps、应用单元经济学和云成本优化&lt;/a&gt;。”&lt;/p&gt;
&lt;h2 id=&#34;社区社区社区&#34;&gt;社区，社区，社区&lt;/h2&gt;
&lt;p&gt;我不能写一篇 KubeCon 总结而不提到社区的力量。在主题演讲中看到了许多成功故事和奖项真是太棒了。&lt;/p&gt;
&lt;p&gt;我参加这些活动的主要原因之一就是与社区的成员见面和交流。走向云原生的道路并不总是容易，我喜欢与同行交流故事。今年我有点懒，照片没拍多少，但我的 devrel 朋友 Marino Wijay 和 Daniel Oh 帮我拍了一些。&lt;/p&gt;
&lt;p&gt;我还有机会与我想见的每个人交流（KubeCon 很忙！），所以如果你想安排一个 Zoom 会话，可以通过社交媒体与我联系。否则，希望我们很快在会议上见面！&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;正如我在文章开头提到的，参加这次 KubeCon 让我感到非常愉快。社区和周围的支持体系显然正在不断发展，现在我们面临的困难任务是在标准化和创新之间取得平衡。&lt;/p&gt;
&lt;p&gt;我相信云原生的未来光明无限。然而，我认为我们将在未来看到更多种类的 AI/LLMs 🙂&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
