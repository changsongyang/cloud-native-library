<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开源 | 云原生资料库</title>
    <link>https://jimmysong.io/docs/tag/%E5%BC%80%E6%BA%90/</link>
      <atom:link href="https://jimmysong.io/docs/tag/%E5%BC%80%E6%BA%90/index.xml" rel="self" type="application/rss+xml" />
    <description>开源</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Tue, 17 May 2022 11:00:00 +0800</lastBuildDate>
    <image>
      <url>https://jimmysong.io/docs/media/sharing.jpg</url>
      <title>开源</title>
      <link>https://jimmysong.io/docs/tag/%E5%BC%80%E6%BA%90/</link>
    </image>
    
    <item>
      <title>Envoy API Gateway——推动网关的进一步发展</title>
      <link>https://jimmysong.io/docs/translation/the-gateway-to-a-new-frontier/</link>
      <pubDate>Tue, 17 May 2022 11:00:00 +0800</pubDate>
      <guid>https://jimmysong.io/docs/translation/the-gateway-to-a-new-frontier/</guid>
      <description>&lt;p&gt;今天，Envoy 社区&lt;a href=&#34;https://www.cncf.io/blog/2022/05/16/introducing-envoy-gateway/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;宣布了&lt;/a&gt;一个令人兴奋的新项目。 &lt;a href=&#34;https://github.com/envoyproxy/gateway&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy Gateway&lt;/a&gt;。该项目将行业领导者联合起来，精简由 Envoy 驱动的应用网关的好处。这种方法使 Envoy Gateway 能够立即为快速创新打下坚实的基础。该项目将提供一套服务来管理 Envoy 代理机群，通过易用性来推动采用，并通过定义明确的扩展机制来支持众多的用例。&lt;/p&gt;
&lt;h2 id=&#34;我们为什么要这样做&#34;&gt;我们为什么要这样做？&lt;/h2&gt;
&lt;p&gt;Tetrate 是 Envoy Proxy 的第一贡献者（按提交量计算），也是 Envoy Gateway 指导小组的成员，其贡献者涵盖技术和管理领域。我们相信，我们强大的伙伴关系和在开源软件方面的深厚经验将有助于确保 Envoy Gateway 的成功。Tetrate 推动了 EG 计划，因为我们致力于上游项目，因为我们相信这将降低 Envoy Proxy 用户的进入门槛，也因为这与我们开发服务网格作为零信任架构基础的使命相一致。Tetrate 将大力投资建设 Envoy Gateway 的安全功能，包括支持 OAuth2 和 &lt;a href=&#34;https://letsencrypt.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Let’s Encrypt&lt;/a&gt; 集成等 API 功能。&lt;/p&gt;
&lt;h3 id=&#34;对上游项目的承诺&#34;&gt;对上游项目的承诺&lt;/h3&gt;
&lt;p&gt;Tetrate 从第一天起就站在服务网格的最前沿，始终相信上游项目和它们的社区。因此，我们一直在为 Istio 和 Envoy 的上游项目提供帮助和支持。我们看到不同的人在使用 Envoy，并创建他们自己的控制平面和 API 网关实现，导致碎片化，创新速度慢，功能差距大，以及缺乏对一个代码库的支持。由于我们与 Matt Klein 和 Envoy 社区长期以来关系密切，当我们提议将其纳入 Envoy 的标准化实现，并将其整合到一个官方的上游实现中时，我们得到了 Matt 和其他 CNCF 项目的强烈支持。我们一直在幕后与其他指导委员会成员（&lt;a href=&#34;https://www.getambassador.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ambassador Labs&lt;/a&gt;、&lt;a href=&#34;https://www.fidelity.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fidelity Investments&lt;/a&gt;、&lt;a href=&#34;https://projectcontour.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Project Contour&lt;/a&gt; 和 &lt;a href=&#34;https://www.vmware.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VMware&lt;/a&gt; 辛勤工作，以定义 Envoy Gateway。&lt;/p&gt;
&lt;p&gt;我们知道，艰苦的工作才刚刚开始，我们致力于这个项目以及 CNCF 内其他几个项目的长期成功。&lt;/p&gt;
&lt;h3 id=&#34;实现控制平面的标准化&#34;&gt;实现控制平面的标准化&lt;/h3&gt;
&lt;p&gt;在很短的时间内，Envoy 已经成为现代云原生应用的首选网络层。随着 Envoy 获得关注，大量的上游项目开始利用它来实现服务网格、入口、出口和 API 网关功能。这些项目中有许多能力重叠、功能差距、专有特性，或者缺乏社区多样性。这种支离破碎的状态是由于 Envoy 社区没有提供控制平面的实现而产生的副作用。&lt;/p&gt;
&lt;p&gt;因此，创新的速度降低了，企业被要求辨别利用 Envoy 作为其应用网络数据平面的最佳方法。现在，社区正在提供 Envoy Gateway，更多的用户可以享受 Envoy 的好处，而无需决定控制平面。Envoy Gateway 的&lt;a href=&#34;https://github.com/envoyproxy/gateway/blob/main/GOALS.md#goals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;目标&lt;/a&gt;是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&amp;hellip;&amp;hellip; 通过支持众多入口和 L7/L4 流量路由使用案例的表达式、可扩展、面向角色的 API，降低采用障碍，吸引更多用户使用 Envoy；并为供应商建立增值产品提供共同基础，而无需重新设计基本交互。&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;易用性和运营效率&#34;&gt;易用性和运营效率&lt;/h3&gt;
&lt;p&gt;Envoy Proxy 是由 &lt;a href=&#34;https://github.com/cncf/xds&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xDS API&lt;/a&gt; 驱动的，这些 APIs 暴露了大量的功能，并被控制平面广泛采用。虽然这些 API 功能丰富，但对于用户来说，要快速学习并开始利用 Envoy 的功能是非常困难的。Envoy Gateway 将为用户抽象出这些复杂的功能，同时支持现有的运营和应用管理模式。&lt;/p&gt;
&lt;p&gt;Envoy Gateway 将利用 &lt;a href=&#34;https://gateway-api.sigs.k8s.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gateway API&lt;/a&gt; 来实现这些目标，而不是开发一个新的项目专用 API。Gateway API 是一个由 &lt;a href=&#34;https://github.com/kubernetes/community/tree/master/sig-network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 网络特别兴趣小组&lt;/a&gt;管理的项目，正在迅速成为提供用户接口以管理应用网络基础设施和流量路由的首选方法。这个开源项目有一个丰富、多样的社区，有几个知名的实施方案。我们期待着作为社区的一部分开展工作，使 Envoy Gateway 成为业界首选的网关 API 实现。&lt;/p&gt;
&lt;h2 id=&#34;为什么这比传统的-api-网关更好&#34;&gt;为什么这比传统的 API 网关更好？&lt;/h2&gt;
&lt;p&gt;传统的代理不是轻量级的、开放的，也不是动态可编程的、类似 xDS 的 API，因此 Envoy 很适合成为当今动态后端的 API 网关 —— 尤其是在增加安全功能的情况下。我们设想将 Envoy 网关作为不断发展的 API 管理领域的一个关键组成部分。API 网关是 API 管理的核心组件，提供透明地策略执行和生成详细遥测数据的功能。这种遥测技术提供了强大的可观察性，为企业提供了更好的洞察力，以排除故障、维护和优化其 API。&lt;/p&gt;
&lt;p&gt;在我们看来，由于 Envoy 的设计、功能设置、安装基础和社区，它是业内最好的 API 网关。有了 Envoy Gateway，企业可以在将 Envoy 嵌入其 API 管理策略方面增加信心。&lt;/p&gt;
&lt;h3 id=&#34;无边界的零信任&#34;&gt;无边界的零信任&lt;/h3&gt;
&lt;p&gt;当你的所有应用服务都在一个服务网格中运行时，实现&lt;a href=&#34;https://www.tetrate.io/zero-trust/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;零信任架构&lt;/a&gt;就不那么难了。然而，现实中不都是服务网格。服务在虚拟机上运行，在无代理容器中运行，作为无服务器函数运行，等等。Envoy Gateway 将突破这些运行时的界限，为跨异构环境的统一策略执行提供基础。&lt;/p&gt;
&lt;p&gt;这一基础的关键是 Envoy Gateway 的可扩展性，它提供了暴露 Envoy 和非 Envoy 安全功能的灵活性。这些扩展点将被用来提供实现零信任架构所需的功能，包括用户和应用认证、授权、加密和速率限制。Envoy Gateway 将很快成为寻求实现零信任架构的组织的一个关键组件。&lt;/p&gt;
&lt;p&gt;同样，Tetrate 致力于上游项目和它们的长期可行性。这一举措又一次证明了这一点，并表明上游的 Envoy 和 Istio 现在正成为构建服务网格的事实上的支柱。Envoy Gateway 将使服务网格成为主流，架构师们应该把网格看作是 ZTA 的基础。为了帮助架构师进行论证，我们最近出版了《&lt;a href=&#34;https://www.tetrate.io/service-mesh-handbook/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;服务网格手册&lt;/a&gt;》。我们很快就会发布一种带有上游 Envoy Gateway 和 Istio 的架构方法，可以看作是你的应用网络的基础。&lt;/p&gt;
&lt;h3 id=&#34;探索-envoy-gateway&#34;&gt;探索 Envoy Gateway&lt;/h3&gt;
&lt;p&gt;在 Tetrate，我们正在领导基于 Envoy Gateway 和 Istio 的零信任架构的定义，并将在后续博文中阐述设想的架构。如果你想和我们一起讨论架构，并了解更多关于如何为传统和云原生应用程序进行架构，请加入 &lt;a href=&#34;http://tetrate-community.slack.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate-community&lt;/a&gt; Slack 频道。&lt;/p&gt;
&lt;p&gt;要了解更多关于 Tetrate 的信息，请访问 &lt;a href=&#34;https://www.tetrate.io/envoy-gateway/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>开源项目 Envoy Gateway 简介</title>
      <link>https://jimmysong.io/docs/translation/introducing-envoy-gateway/</link>
      <pubDate>Mon, 16 May 2022 13:00:00 +0800</pubDate>
      <guid>https://jimmysong.io/docs/translation/introducing-envoy-gateway/</guid>
      <description>&lt;p&gt;今天，我们很高兴地宣布 &lt;a href=&#34;https://github.com/envoyproxy/gateway&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy Gateway&lt;/a&gt; 成为 Envoy 代理家族的新成员，该项目旨在大幅降低将 Envoy 作为 API 网关的使用门槛。&lt;/p&gt;
&lt;h2 id=&#34;历史&#34;&gt;历史&lt;/h2&gt;
&lt;p&gt;Envoy &lt;a href=&#34;https://medium.com/lyft-engineering/announcing-envoy-c-l7-proxy-and-communication-bus-92520b6c8191&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在 2016 年秋天开源&lt;/a&gt;，令我们惊讶的是，它很快就引领了整个行业。用户被这个项目的许多不同方面所吸引，包括它的包容性社区、可扩展性、API 驱动的配置模型、强大的可观察性输出和越来越广泛的功能集。&lt;/p&gt;
&lt;p&gt;尽管在其早期历史中，Envoy 成为了&lt;strong&gt;服务网格&lt;/strong&gt;的代名词，但它在 Lyft 的首次使用实际上是作为 API 网关 / 边缘代理，提供深入的可观察性输出，帮助 Lyft 从单体架构迁移到微服务架构。&lt;/p&gt;
&lt;p&gt;在过去的 5 年多时间里，我们看到 Envoy 被大量的终端用户采用，既可以作为 API 网关，也可以作为服务网格中的 sidecar 代理。同时，我们看到围绕 Envoy 出现了一个庞大的供应商生态系统，在开源和专有领域提供了大量的解决方案。Envoy 的供应商生态系统对项目的成功至关重要；如果没有对所有在 Envoy 上兼职或全职工作的员工的资助，这个项目肯定不会有今天的成就。&lt;/p&gt;
&lt;p&gt;Envoy 作为许多不同的架构类型和供应商解决方案的组成部分，其成功的另一面是它本质上位于架构底层；Envoy 并不是一个容易学习的软件。虽然该项目在世界各地的大型工程组织中取得了巨大的成功，但在较小和较简单的用例中，它只被轻度采用，在这些用例中，&lt;a href=&#34;https://nginx.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nginx&lt;/a&gt; 和 &lt;a href=&#34;http://www.haproxy.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HAProxy&lt;/a&gt; 仍占主导地位。&lt;/p&gt;
&lt;p&gt;Envoy Gateway 项目的诞生是出于这样的信念：将 Envoy 作为 API 网关的角色推向大众需要两个主要条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个简化的部署模型和 API 层，旨在满足轻量级使用&lt;/li&gt;
&lt;li&gt;将现有的 &lt;a href=&#34;https://www.cncf.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CNCF&lt;/a&gt; API 网关项目（&lt;a href=&#34;https://projectcontour.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contour&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/emissary-ingress/emissary&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Emissary&lt;/a&gt;）合并为一个共同的核，可以提供最好的用户体验，同时仍然允许供应商在 Envoy Proxy 和 Envoy Gateway 的基础上建立增值解决方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们坚信，如果社区汇聚在单一的以 Envoy 为核心的 API 网关周围，它将会：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少围绕安全、控制平面技术细节和其他共同关切的重复工作。&lt;/li&gt;
&lt;li&gt;允许供应商专注于在 Envoy Proxy 和 Envoy Gateway 的基础上以扩展、管理平面 UI 等形式分层提供增值功能。&lt;/li&gt;
&lt;li&gt;众人拾柴火焰高，让全世界更多的用户享受到 Envoy 的好处，无论组织的大小。更多的用户为更多的潜在客户提供了良性循环，为 Envoy 的核心项目提供了更多的支持，也为所有人提供了更好的整体体验。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目概要&#34;&gt;项目概要&lt;/h2&gt;
&lt;p&gt;总得来说，Envoy Gateway 可以被认为是 Envoy Proxy 核心的一个封装器。它不会以任何方式改变核心代理、&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xDS&lt;/a&gt;、&lt;a href=&#34;https://github.com/envoyproxy/go-control-plane&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;go-control-plane&lt;/a&gt; 等（除了潜在的驱动功能、bug 修复和一般改进以外）。它将提供以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为网关用例提供简化的 API。该 API 将是带有一些 Envoy 特定扩展的 &lt;a href=&#34;https://gateway-api.sigs.k8s.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes Gateway API&lt;/a&gt;。之所以选择这个 API，是因为在 Kubernetes 上作为 Ingress Controller 部署是该项目最初的重点，而且该 API 得到了业界的广泛认可。&lt;/li&gt;
&lt;li&gt;开箱即用，让用户能够尽可能快地启动和运行。这包括提供控制器资源、控制平面资源、代理实例等的生命周期管理功能。&lt;/li&gt;
&lt;li&gt;可扩展的 API 平面。虽然该项目将致力于使常见的 API 网关功能开箱即用（例如，速率限制、认证、&lt;a href=&#34;https://letsencrypt.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Let’s Encrypt&lt;/a&gt; 集成等），但供应商将能够提供所有 API 的 SaaS 版本，提供额外的 API 和增值功能，如 WAF、增强的可观察性、混乱工程等。&lt;/li&gt;
&lt;li&gt;高质量的文档和入门指南。我们对 Envoy Gateway 的主要目标是使最常见的网关用例对普通用户来说可以信手拈来。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于 API，我们认为导致混乱的主要是在针对高级用例时，在其他项目中有效地重新实现 Envoy 的 &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xDS&lt;/a&gt; API。这种模式导致用户不得不学习多个复杂的 API（最终转化为 xDS），才能完成工作。因此，Envoy Gateway 致力于 &amp;ldquo;硬性规定&amp;rdquo;，即 Kubernetes Gateway API（以及该 API 中任何允许的扩展）是&lt;strong&gt;唯一&lt;/strong&gt;被支持的额外 API。更高级的用例将由 &amp;ldquo;xDS 模式&amp;rdquo; 提供服务，其中现有的 API 资源将为最终用户自动翻译，然后他们可以切换到直接利用 xDS API。这将导致一个更清晰的主 API，同时为那些可能超越主 API 的表达能力并希望通过 xDS 利用 Envoy 的全部功能的组织提供了路径。&lt;/p&gt;
&lt;h2 id=&#34;关于-api-的标准化&#34;&gt;关于 API 的标准化&lt;/h2&gt;
&lt;p&gt;虽然 Envoy Gateway 的目标是提供一个参考实现，以便在 Kubernetes 中作为 Ingress Controller 轻松运行 Envoy，但这项工作最主要的目的是 &lt;strong&gt;API 标准化&lt;/strong&gt;。随着行业在特定的 Envoy Kubernetes Gateway API 扩展上的趋同，它将允许供应商轻松地提供替代的 SaaS 实现，如果用户超越了参考实现，想要额外的支持和功能等，这可能是最好的。显然，围绕定义 API 扩展，确定哪些 API 是必需的，哪些是可选的，等等，还有很多工作要做。这是我们标准化之旅的开始，我们渴望与所有感兴趣的人一起深入研究。&lt;/p&gt;
&lt;h2 id=&#34;接下来的计划&#34;&gt;接下来的计划&lt;/h2&gt;
&lt;p&gt;今天，我们感谢 Envoy Gateway 的最初赞助商（&lt;a href=&#34;https://www.getambassador.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ambassador Labs&lt;/a&gt;、&lt;a href=&#34;https://www.fidelity.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fidelity&lt;/a&gt;、&lt;a href=&#34;https://www.tetrate.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate&lt;/a&gt; 和 &lt;a href=&#34;https://www.vmware.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VMware&lt;/a&gt;），很高兴能与大家一起开始这个新的旅程。该项目是非常早期的，到目前为止的重点是商定 &lt;a href=&#34;https://github.com/envoyproxy/gateway/blob/main/GOALS.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;目标&lt;/a&gt;和&lt;a href=&#34;https://github.com/envoyproxy/gateway/blob/main/docs/design/SYSTEM_DESIGN.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;高水平的设计&lt;/a&gt;，所以现在是参与的好时机，无论是作为终端用户还是作为系统集成商。&lt;/p&gt;
&lt;p&gt;我们还想非常清楚地说明，Contour 和 Emissary 的现有用户不会被抛在后面。该项目（以及 &lt;a href=&#34;https://www.vmware.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VMware&lt;/a&gt; 和 &lt;a href=&#34;https://www.getambassador.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ambassador Labs&lt;/a&gt;）完全致力于确保这些项目的用户最终能够顺利地迁移到 Envoy Gateway，无论是通过翻译和替换，还是通过这些项目成为 Envoy Gateway 核心的包装物。&lt;/p&gt;
&lt;p&gt;我们对通过 Envoy Gateway 项目将 Envoy 带给更大的用户群感到非常兴奋，我们希望你能&lt;a href=&#34;https://github.com/envoyproxy/gateway#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;加入我们&lt;/a&gt;的旅程。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
