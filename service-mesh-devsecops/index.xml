<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>利用服务网格为基于微服务的应用程序实施 DevSecOps | 云原生资料库</title>
    <link>https://cloudnativecn.com/service-mesh-devsecops/</link>
      <atom:link href="https://cloudnativecn.com/service-mesh-devsecops/index.xml" rel="self" type="application/rss+xml" />
    <description>利用服务网格为基于微服务的应用程序实施 DevSecOps</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh</language><lastBuildDate>Wed, 18 May 2022 00:00:00 +0800</lastBuildDate>
    <image>
      <url>https://cloudnativecn.com/media/sharing.png</url>
      <title>利用服务网格为基于微服务的应用程序实施 DevSecOps</title>
      <link>https://cloudnativecn.com/service-mesh-devsecops/</link>
    </image>
    
    <item>
      <title>声明</title>
      <link>https://cloudnativecn.com/service-mesh-devsecops/preface/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      <guid>https://cloudnativecn.com/service-mesh-devsecops/preface/</guid>
      <description>&lt;p&gt;以下是关于本书的声明。&lt;/p&gt;
&lt;h2 id=&#34;许可&#34;&gt;许可&lt;/h2&gt;
&lt;p&gt;本出版物由 NIST 根据 2014 年《联邦信息安全现代化法案》（FISMA）（44 U.S.C. §3551 etseq）规定的法定职责编写，公共法律（P.L.）113-283。NIST 负责制定信息安全标准和准则，包括联邦信息系统的最低要求，但这些标准和准则在未经对国家安全系统行使策略权力的适当联邦官员明确批准的情况下，不得适用于这些系统。本准则与管理和预算办公室（OMB）A-130 号通知的要求一致。&lt;/p&gt;
&lt;p&gt;本出版物中的任何内容都不应被视为与商务部长根据法定授权对联邦机构的强制性和约束性标准和准则相抵触。这些准则也不应被解释为改变或取代商务部长、OMB 主任或任何其他联邦官员的现有权力。本出版物可由非政府组织在自愿的基础上使用，在美国不受版权限制。但是，请注明出处，NIST 将对此表示感谢。&lt;/p&gt;
&lt;p&gt;国家标准和技术研究所特别出版物 800-204C Natl.Inst.
Stand.Technol.Spec.800-204C, 45 pages (March 2022) CODEN: NSPUE2&lt;/p&gt;
&lt;p&gt;本出版物可从以下网站免费获取。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://doi.org/10.6028/NIST.SP.800-204C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://doi.org/10.6028/NIST.SP.800-204C&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;关于计算机系统技术的报告&#34;&gt;关于计算机系统技术的报告&lt;/h2&gt;
&lt;p&gt;美国国家标准与技术研究所（NIST）的信息技术实验室（ITL）通过为国家的测量和标准基础设施提供技术领导来促进美国经济和公共福利。ITL 开发测试、测试方法、参考数据、概念实施证明和技术分析，以推动信息技术的发展和生产性使用。ITL 的职责包括为联邦信息系统中与国家安全无关的信息制定管理、行政、技术和物理标准和准则，以实现低成本的安全和隐私。&lt;/p&gt;
&lt;h2 id=&#34;摘要&#34;&gt;摘要&lt;/h2&gt;
&lt;p&gt;云原生应用已经发展成为一个标准化的架构，由多个松散耦合的组件组成，这些组件被称为微服务（通常通常以容器实现），由提供应用服务的基础设施（如服务网格）支持。这两个组件通常都被托管在一个容器调度和资源管理平台上。在这个架构中，应用环境中涉及的整套源代码可以分为五种类型：1）应用代码（体现应用逻辑）；2）应用服务代码（用于会话建立、网络连接等服务）；3）基础设施即代码（用于配置计算、网络和存储资源）；4）策略即代码（用于定义运行时策略，如以声明性代码表达的零信任）；5）可观察性即代码（用于持续监测应用运行时状态）。由于安全、商业竞争力和松散耦合的应用组件的固有结构，这类应用需要一个不同的开发、部署和运行时范式。DevSecOps（分别由开发、安全和运维的首字母缩写组成）已经被发现是这些应用的促进范式，其基本要素包括持续集成、持续交付和持续部署（CI/CD）管道。这些管道是将开发者的源代码通过各个阶段的工作流程，如构建、测试、打包、部署和运维，由带有反馈机制的自动化工具支持。本文的目的是为云原生应用的 DevSecOps 原语的实施提供指导，其架构和代码类型如上所述。本文还讨论了这种方法对高安全保障和实现持续运维授权（C-ATO）的好处。&lt;/p&gt;
&lt;h2 id=&#34;鸣谢&#34;&gt;鸣谢&lt;/h2&gt;
&lt;p&gt;作者首先要感谢 NIST 的 David Ferraiolo，他发起了这项工作，为基于微服务的应用中服务网格的开发、部署和监控提供了有针对性的 DevSecOps 原语实施指导。衷心感谢美国空军 CSO Nicolas Chaillan 先生，感谢他详细而有见地的审查和反馈。还要感谢 Tetrate 公司的 Zack Butcher 为本文标题提供的建议。作者还对 NIST 的 Isabel Van
Wyk 的详细编辑审查表示感谢。&lt;/p&gt;
&lt;h2 id=&#34;专利披露通知&#34;&gt;专利披露通知&lt;/h2&gt;
&lt;p&gt;通知：信息技术实验室（ITL）已要求专利权持有人向 ITL 披露其使用可能需要遵守本出版物的指导或要求的专利权。然而，专利持有人没有义务回应 ITL 的专利要求，ITL 也没有进行专利搜索，以确定哪些专利可能适用于本出版物。&lt;/p&gt;
&lt;p&gt;截至本出版物发布之日，以及在呼吁确定可能需要使用其来遵守本出版物的指导或要求的专利权利要求之后，ITL 没有发现任何此类专利权利要求。&lt;/p&gt;
&lt;p&gt;ITL 没有作出或暗示在使用本出版物时不需要许可证以避免专利侵权。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>执行摘要</title>
      <link>https://cloudnativecn.com/service-mesh-devsecops/executive-summary/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      <guid>https://cloudnativecn.com/service-mesh-devsecops/executive-summary/</guid>
      <description>&lt;p&gt;云原生应用已经发展成为一个标准化的架构，由以下部分组成。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多个松散耦合的组件被称为微服务（通常或典型地以容器形式实现）。&lt;/li&gt;
&lt;li&gt;一个应用服务基础设施，为用户、服务和设备提供安全通信、认证和授权等服务（例如，服务网格）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于安全、商业竞争力和其固有的结构（松散耦合的应用组件），这类应用需要一个不同的应用、部署和运行时监控范式 —— 统称为软件生命周期范式。DevSecOps（分别由开发、安全和运维的首字母缩写组成）是这些应用的开发、部署和运维的促进范式之一，其基本要素包括持续集成、持续交付和持续部署（CI/CD）管道。&lt;/p&gt;
&lt;p&gt;CI/CD 管道是将开发人员的源代码通过各个阶段的工作流程，如构建、功能测试、安全扫描漏洞、打包和部署，由带有反馈机制的自动化工具支持。在本文中，应用环境中涉及的整个源代码集被分为五种代码类型：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用代码，它体现了执行一个或多个业务功能的应用逻辑。&lt;/li&gt;
&lt;li&gt;应用服务代码，用于服务，如会话建立、网络连接等。&lt;/li&gt;
&lt;li&gt;基础设施即代码，它是以声明性代码的形式存在的计算、网络和存储资源。&lt;/li&gt;
&lt;li&gt;策略即代码，这是运行时策略（例如，零信任），以声明性代码的形式表达。&lt;/li&gt;
&lt;li&gt;可观察性即代码，用于持续监测应用程序的健康状况，其中监测功能被表述为声明性代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，可以为所有五个代码类型创建单独的 CI/CD 管道。还描述了这些代码类型中的每一种所执行的功能，以强调它们在整个应用程序的执行中所发挥的作用。&lt;/p&gt;
&lt;p&gt;虽然云原生应用有一个共同的架构堆栈，但堆栈组件运行的平台可能有所不同。该平台是物理（裸机）或虚拟化（如 Kubernetes）上的一个抽象层。为了在本文中明确提及该平台或应用环境，它被称为 &lt;strong&gt;DevSecOps 原语参考平台&lt;/strong&gt;，或简称为 &lt;strong&gt;参考平台&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;本文件的目的是为参考平台的 DevSecOps 原语的实施提供指导。本文还介绍了这种实施对高安全保障的好处，以及在管道内使用风险管理工具和仪表盘指标提供持续授权操作（C-ATO）的工件。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../intro&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cloudnativecn.com/service-mesh-devsecops/summary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://cloudnativecn.com/service-mesh-devsecops/summary/</guid>
      <description>&lt;h1 id=&#34;目录&#34;&gt;目录&lt;/h1&gt;
&lt;h2 id=&#34;文前&#34;&gt;文前&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;_index.md&#34;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;preface.md&#34;&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;executive-summary.md&#34;&gt;执行摘要&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第一章&#34;&gt;第一章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;intro/_index.md&#34;&gt;1. 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;intro/scope.md&#34;&gt;1.1 范围&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;intro/related-devsecops-initiatives.md&#34;&gt;1.2 相关的 DevSecOps 倡议&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;intro/target-audience.md&#34;&gt;1.3 目标受众&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;intro/relationship-to-other-nist-guidance-documents.md&#34;&gt;1.4  与其他 NIST 指导文件的关系&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;intro/organization-of-this-document.md&#34;&gt;1.5 本文件的组织&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第二章&#34;&gt;第二章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;reference-platform/_index.md&#34;&gt;2. 实施 DevSecOps 原语的参考平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;reference-platform/container-orchestration-and-resource-management-platform.md&#34;&gt;2.1 容器编排和资源管理平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;reference-platform/service-mesh-software-architecture.md&#34;&gt;2.2 服务网格架构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第三章&#34;&gt;第三章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;devsecops/_index.md&#34;&gt;3. DevSecOps 组织准备、关键基本要素和实施&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;devsecops/organizational-preparedness-for-devsecops.md&#34;&gt;3.1 组织对 DevSecOps 的准备情况&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;devsecops/devsecops-platform.md&#34;&gt;3.2 DevSecOps 平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;devsecops/key-primitives-and-implementation-tasks.md&#34;&gt;3.3 DevSecOps 关键原语和实施任务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第四章&#34;&gt;第四章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;implement/_index.md&#34;&gt;4. 为参考平台实施 DevSecOps 原语&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/description-of-code-types-and-reference-platform-components.md&#34;&gt;4.1 代码类型和参考平台组件的描述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/ci-cd-pipeline-for-application-code-and-application-services-code.md&#34;&gt;4.2 应用程序代码和应用服务代码的 CI/CD 管道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/ci-cd-pipeline-for-infrastructure-as-code.md&#34;&gt;4.3 基础设施即代码的 CI/CD 管道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/ci-cd-pipeline-for-policy-as-code.md&#34;&gt;4.4 策略即代码的 CI/CD 管道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/ci-cd-pipeline-for-observability-as-code.md&#34;&gt;4.5 可观察性即代码的 CI/CD 管道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/securing-the-ci-cd-pipeline.md&#34;&gt;4.6 确保 CI/CD 管道的安全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/workflow-models-in-ci-cd-pipelines.md&#34;&gt;4.7 CI/CD 管道中的工作流模型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/security-testing-common-requirement-for-ci-cd-pipelines-for-all-code-types.md&#34;&gt;4.8 安全测试 —— 所有代码类型的 CI/CD 管道的共同要求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/benefits-of-devsecops-primitives-to-application-security-in-the-service-mesh.md&#34;&gt;4.9 DevSecOps 原语对服务网格中应用安全的好处&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;implement/leveraging-devsecops-for-continuous-authorization-to-operate-c-ato.md&#34;&gt;4.10 利用 DevSecOps 进行持续授权操作（C-ATO）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第五章&#34;&gt;第五章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;summary-and-conclusion/_index.md&#34;&gt;5. 摘要和结论&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
